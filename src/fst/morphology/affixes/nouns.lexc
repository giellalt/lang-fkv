! ======================
!! # Sublexica for NounRoot
! ======================

!! Aloitin sovittaa analyysin Eiran kieliopin mukaan (Porsanki).
!! Leksikot ovat nyt (tai pitää olla) n11, n12, jne., eli siis
!! Eiran nominit tyyppi 1.1., 1.2., jne.

!!  2007 s.87
!! * 1. Yksitavuiset / Vi ( maa, tuorestai)        = vanha_n_1
!! * 1.1. Yksitavuiset monikko/ Vi ( häät)         = vanha_n_1pl
!! * 2. Vokaalirankaiset
!!     - 2.1 Kaksitavuiset ( pappi)                   = vanha_n_21
!!         - 2.1.1. Kaksitavuiset monikko (housut)       = vanha_n_21pl
!!         - 2.1.2. Kaksitavuiset (joki: joke)           = vanha_n_21ie
!!     - 2.2. Usseempitav. (opettaaja)                = vanha_n_22
!!         - 2.2.1. Usseempitav. odd (kajava)            = vanha_n_22odd
!!         - 2.2.2. Usseempitav. odd (meininki, tunturi) = vanha_n_22oddi
!!         - 2.2.3. Usseempitav. monikko oi (kulkkiija)  = vanha_n_22oi
!!     - 2.3 Kokkoontumanom. ( valkkee)               = vanha_n_23
!!     - 2.3.1 Kokkoontumanom. (assii)                = vanha_n_23ii
!! * 3. Konsonanttirankaiset
!!     - 3.1 Kaksitavuiset ( pieni, kieli)            = vanha_n_31
!!     - 3.1.1. Kaksitavuiset lumi)                   = vanha_n_31lumi
!!     - 3.1.2. (käsi, vuosi)                         = vanha_n_31si
!!     - 3.1.3. (lapsi)                               = vanha_n_31lapsi
!!     - 3.1.4. (mies)                                = vanha_n_31mies
!!     - 3.2 Usseempitavuiset
!!     - 3.2.1 (tytär)                                = vanha_n_32
!!     - 3.2.2. (elläin)                              = vanha_n_32m
!!     - 3.2.3 (rakkhaus)                             = vanha_n_32s
!!     - 3.3 Kokkoontumanom. ( opas, huonet)
!!     - 3.3.1 (opas)                                 = vanha_n_33s
!!     - 3.3.2 (asukas)                               = vanha_n_33sodd
!!     - 3.3.3. (ruvis)                               = vanha_n_33is
!!     - 3.3.4 (huonet)                               = vanha_n_33t
!!     - 3.3.5 (kirves)                               = vanha_n_33ts
!! * 4. Ekstrakonsonanttirankaiset
!!     - 4.1 veres-nominit ( veres, kokkous)          = vanha_n_41
!!     - 4.1.1. veres-nominit monikko ( veljekset)    = vanha_n_41pl
!!     - 4.2 –inen-nominit ( kainulainen)             = vanha_n_42 = nen
!!         - 4.2.1 -inen-nominit Pl (tervheiset)         = vanha_n_42pl = nen
!!         - 4.2.2 -inen-nominit odd (vihrinen)          = vanha_n_42odd = nen

!! ## Noun types

!! ### Incomong

!LEXICON n_x kaikki nyt luokiteltu
!+N         : x_x ;

!LEXICON x_x
!  +Sg      : nom_end ; ! Just to make it compile



LEXICON n_31 !!= * @CODE@ = maa, tie
+N         : x_31 ;
+N+Sg      : nom_end   ;
!+N+Pl+Dial/Por:%>i2ne   gen_n           ; ! in x_31_pl

LEXICON n_31_ai !!= * @CODE@ = tuorestai ja muut päivät
   +N: x_31_sg ; ! like the others
   +N: x_31_pl_common ; ! avoiding genpl *tuorestainen
+N+Sg: nom_R     ;

LEXICON x_31
x_31_sg ;
x_31_pl ;

LEXICON x_31_sg
 +Sg: nom_end         ;
 +Sg: gen_n_sg        ;
 +Sg: ill_hVn         ; ! maahan
 +Sg: par_tA          ;
 +Sg: sgpl_cases_even ; ! sgpl = cases with same suff in sg and pl
 +Sg: ess_nA          ;



LEXICON n_31_pl !!= * @CODE@ = häät
+N             : x_31_pl ;

LEXICON x_31_pl !!= * @CODE@ = häät
!  +Sg          : gen_n_sg ; gen_n_sg in x_31
  +Pl+Dial/Por :%>i2%>ne gen_n ; ! häinen, mainen (1syll only)
  x_31_pl_common ;

LEXICON x_31_pl_common ! (both 1syll and tuorestai)
+Pl          : nom_t    ;
+Pl          :%>i2      sgpl_cases_even ; !! the same affix in sg and pl

+Pl          :%>i2     gen_tten       ;
+Pl          :%>i2      par_tA          ;
+Pl          :%>i2      ill_hin         ;
+Pl          :%>i2      ess_nA          ;
+Pl          :%>i2      com_ne          ;


!! ### Eira's classification

! TODO TODO TODO
! vanha_n_21         = puku = puvuissa
! vanha_n_21_AO      = sana = sanoissa []
! vanha_n_21_A0_A2I  = kuva = kuvissa []
! vanha_n_21i        = färi : färi n_21 på i er lånord  sed /i vanha_21/i vanha_21i/
! vanha_n_21_E2I     = veri : vere

LEXICON n_11_ae ! päivä, genpl päiviin
+N:             x_11_ae     ;
+N+Sg:          nom_R           ;

LEXICON x_11_ae
+Pl+Dial/Por:%>i2 gen_in ; ! päiviin
+Pl+Dial/Por:          ill_hiin         ; ! päivhiin
+Pl+Dial/Var:          ill_hiin         ; ! päivhiin
+Pl+Dial/Jok:           ill_hiin        ; ! päivhiin
  
   +Sg:    nom_end                 ;

!Por
  +Sg+Dial/Por:^Por^WG          gen_n_sg        ;
  +Sg+Dial/Por:^HMETA           ill_hVVn        ; ! päivhään
  +Sg+Dial/Por:                 par_V           ;
  +Sg+Dial/Por:                 ess_nA          ;
  +Sg+Dial/Por:^Por^WG          sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/Por:^Por^WG          nom_t           ;
! +Pl+Dial/Por:%>i2             gen_n           ; ! this in x_11
  +Pl+Dial/Por:%>i2             par_V         ;
  +Pl+Dial/Por:%>i2             ess_nA          ;
  +Pl+Dial/Por:%>i2             com_ne          ;
  +Pl+Dial/Por:^Por^WG%>i2      sgpl_cases_even ; !the same affix in sg and pl

!Jok
  +Sg+Dial/Jok:^WG              gen_n_sg        ;
  +Sg+Dial/Jok:^HMETA           ill_hVVn        ; ! päivhään
  +Sg+Dial/Jok:                 par_A           ;
  +Sg+Dial/Jok:                 ess_nA          ;
  +Sg+Dial/Jok:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/Jok:^WG              nom_t           ;
  +Pl+Dial/Jok:^WG%>i2          gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
  +Pl+Dial/Jok:%>i2             par_A           ;
  +Pl+Dial/Jok:%>i2             ess_nA          ;
  +Pl+Dial/Jok:%>i2             com_ne          ;
  +Pl+Dial/Jok:^WG%>i2          sgpl_cases_even ;

!Var
  +Sg+Dial/Var:^WG              gen_n_sg        ;
  +Sg+Dial/Var:^HMETA            ill_hVVn        ; ! päivhään
  +Sg+Dial/Var:                  par_A           ;
  +Sg+Dial/Var:                 ess_nA          ;
  +Sg+Dial/Var:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/Var:^WG              nom_t           ;
  +Pl+Dial/Var:^WG%>i2          gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
  +Pl+Dial/Var:%>i2             par_A           ;
  +Pl+Dial/Var:%>i2             ess_nA          ;
  +Pl+Dial/Var:%>i2             com_ne          ;
  +Pl+Dial/Var:^WG%>i2          sgpl_cases_even ; 
  


LEXICON n_11 !!= * @CODE@  lyhyt vokali, yks vartalo, syksy ! jos loppuu i:hin ne ovat lainasanoja
+N:             x_11     ;
+N+Sg:             nom_R           ;

LEXICON x_11
+Pl+Dial/Por:%>i2 gen_n ; ! syksyin
+Pl+Dial/Por:^HMETA           ill_hVin        ; ! sykshyin
+Pl+Dial/Var:^HMETA           ill_hVin        ; ! sykshyin
+Pl+Dial/Jok:^HMETA           ill_hVin        ; ! sykshyin
             x_11_rest ; ! all x_11 except plural gen


LEXICON vanha_n_21C ! vierassanat: ranch/ranchi
+N+Sg      :  nom_end    ; ! Hans
           :i n_11_i ; ! Hansi
+N+Sg      :i nom_R      ;

LEXICON x_11_rest
  +Sg          :                nom_end         ;
  +Sg          :^HMETA          ill_hVVn        ;

!Por
  +Sg+Dial/Por:^Por^WG          gen_n_sg        ;
  +Sg+Dial/Por:                 par_V           ;
  +Sg+Dial/Por:^HMETA           ill_hVVn        ;
  +Sg+Dial/Por:                 ess_nA          ;
  +Sg+Dial/Por:^Por^WG          sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/Por:^Por^WG          nom_t           ;
! +Pl+Dial/Por:%>i2             gen_n           ; ! this in x_11
  +Pl+Dial/Por:%>i2             par_end         ;
  +Pl+Dial/Por:%>i2             ess_nA          ;
  +Pl+Dial/Por:%>i2             com_ne          ;
  +Pl+Dial/Por:^Por^WG%>i2      sgpl_cases_even ; !the same affix in sg and pl

!Jok
  +Sg+Dial/Jok:^WG              gen_n_sg        ;
  +Sg+Dial/Jok:                 par_A           ;
  +Sg+Dial/Jok:^HMETA           ill_hVVn        ;
  +Sg+Dial/Jok:                 ess_nA          ;
  +Sg+Dial/Jok:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/Jok:^WG              nom_t           ;
  +Pl+Dial/Jok:^WG%>i2          gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
  +Pl+Dial/Jok:%>j             par_A           ; ! Use i:j in twolc j, see
  +Pl+Dial/Jok:%>i2             ess_nA          ;
  +Pl+Dial/Jok:%>i2             com_ne          ;
  +Pl+Dial/Jok:^WG%>i2          sgpl_cases_even ;

!Var
  +Sg+Dial/Var:^WG              gen_n_sg        ;
  +Sg+Dial/Var:                  par_A          ;
  +Sg+Dial/Var:^HMETA           ill_hVVn        ;
  +Sg+Dial/Var:                 ess_nA          ;
  +Sg+Dial/Var:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/Var:^WG              nom_t           ;
  +Pl+Dial/Var:^WG%>i2          gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
  +Pl+Dial/Var:%>j               par_A           ; ! Use i:j in twolc j, see below
 
  +Pl+Dial/Var:%>i2             ess_nA          ;
  +Pl+Dial/Var:%>i2             com_ne          ;
  +Pl+Dial/Var:^WG%>i2          sgpl_cases_even ;


LEXICON n_11_dial

+N   :ku               x_11_dial ;
+N   :k2u              x_11_dial_JokVar ;

LEXICON x_11_dial 
  +Sg+Dial/Por:                 nom_end         ;
  +Sg+Dial/Por:^WG              gen_n_sg        ;
  +Sg+Dial/Por:                 par_V           ;
  +Sg+Dial/Por:^HMETA           ill_hVVn        ;
  +Sg+Dial/Por:                 ess_nA          ;
  +Sg+Dial/Por:^WG              sgpl_cases_even_Por ;

  +Pl+Dial/Por:^WG              nom_t           ;
  +Pl+Dial/Por:%>i2             gen_n           ;
  +Pl+Dial/Por:%>i2             par_end         ;
  +Pl+Dial/Por:^HMETA           ill_hVin        ;
  +Pl+Dial/Por:%>i2             ess_nA          ;
  +Pl+Dial/Por:%>i2             com_ne          ;
  +Pl+Dial/Por:^Por^WG%>i2      sgpl_cases_even_Por ;

LEXICON x_11_dial_JokVar
  +Sg+Dial/Jok:^WG              gen_n_sg        ;
  +Sg+Dial/Jok:                 par_A           ;
  +Sg+Dial/Jok:^WG              sgpl_cases_even ;

  +Pl+Dial/Jok:^WG%>i2          gen_tten        ;
  +Pl+Dial/Jok:%>j              par_A           ;
  +Pl+Dial/Jok:^HMETA           ill_hVin        ;
  +Pl+Dial/Jok:^WG%>i2          sgpl_cases_even ;


LEXICON n_11_AO !!= * @CODE@ sana - sanoissa. Linna? Linnoissa? aika
+N:         x_11_AO ;
!+N:         x_11_AO ;
!+N:         x_11_AO ; 


LEXICON x_11_AO !!= * @CODE@ sana - sanoissa. Linna? Linnoissa? aika ! TODO which adjectives?
+Sg:                    nom_R           ;
+Sg:                    nom_end         ;
+Sg+Dial/Por:^Por^WG    gen_n_sg        ;
+Sg+Dial/Var:^Var^WG    gen_n_sg        ;
+Sg+Dial/Por:^Por       par_V           ;
+Sg+Dial/Var:^Var       par_A           ;
+Sg+Dial/Jok:^Jok       par_A           ;
+Sg:^HMETA              ill_hVVn        ;
+Sg:                    ess_nA          ;
+Sg+Dial/Por:^Por^WG    sgpl_cases_even ; !to sgpl_cases_even for cases with
+Sg+Dial/Var:^Var^WG    sgpl_cases_even ; !to sgpl_cases_even for cases with

+Pl+Dial/Por:^Por^WG                 nom_t           ;
+Pl+Dial/Var:^Var^WG                 nom_t           ;
+Pl+Dial/Por:^Por^AO%>i2             gen_n           ; ! gen_n         since we have the i
+Pl+Dial/Jok:^Jok^WG^AO%>i2          gen_tten        ;
+Pl+Dial/Var:^Var^WG^AO%>i2          gen_tten        ;
+Pl+Dial/Por:^Por^AO%>i2             par_end         ;
+Pl+Dial/Jok:^Jok^AO%>j              par_A           ; ! Use i:j in twolc j, see below
+Pl+Dial/Var:^Var^AO%>j              par_A           ;
+Pl:^AO^HMETA                        ill_hVin        ; ! sykshyin
+Pl:^AO%>i2                          ess_nA          ;
+Pl:^AO%>i2                          com_ne          ;
+Pl+Dial/Por:^Por^WG^AO%>i2          sgpl_cases_even ; !the same affix in sg and pl
+Pl+Dial/Var:^Var^WG^AO%>i2          sgpl_cases_even ; ! TO DO: meidän täytyy tehdä lopullisen päätöksen aika- ja aita- paradigmoista var ja jok murteissa

LEXICON n_11_AO_pl
+N             :       x_11_AO_pl ;
+N+Pl          :       nom_t      ; ! housut, kasvot

LEXICON x_11_AO_pl !!= * @CODE@ sanat

+Pl+Dial/Por:^Por^WG                 nom_t           ;
+Pl+Dial/Var:^Var^WG                 nom_t           ;
+Pl+Dial/Por:^Por^AO%>i2             gen_n           ; ! gen_n         since we have the i
+Pl+Dial/Jok:^Jok^WG^AO%>i2          gen_tten        ;
+Pl+Dial/Var:^Var^WG^AO%>i2          gen_tten        ;
+Pl+Dial/Por:^Por^AO%>i2             par_end         ;
+Pl+Dial/Jok:^Jok^AO%>j              par_A           ; ! Use i:j in twolc j, see below
+Pl+Dial/Var:^Var^AO%>j              par_A           ;
+Pl:^AO^HMETA                        ill_hVin        ; ! sykshyin
+Pl:^AO%>i2                          ess_nA          ;
+Pl:^AO%>i2                          com_ne          ;
+Pl+Dial/Por:^Por^WG^AO%>i2          sgpl_cases_even ; !the same affix in sg and pl
+Pl+Dial/Var:^Var^WG^AO%>i2          sgpl_cases_even ; ! TO DO: meidän täytyy tehdä lopullisen päätöksen aika- ja aita- paradigmoista var ja jok murteissa


LEXICON n_11_A0_A2I !!= * @CODE@ kuva - kuvissa, poika - pojissa ! TODO which adjectives?
+N+Dial/Por :^Por             x_11_A0_A2I ;
+N+Dial/Var :^Var             x_11_A0_A2I ;
+N+Dial/Jok :^Jok             x_11_A0_A2I ;

LEXICON x_11_A0_A2I !!= * @CODE@ kuva - kuvissa, poika - pojissa ! TODO which adjectives?
+Sg         :                 nom_R   ; ! miksi tämä? TODO
+Sg         :                 nom_end   ;
+Sg         :^WG              gen_n_sg        ;
+Sg+Dial/Por:                 par_V           ;
+Sg+Dial/Jok:                 par_A           ;
+Sg+Dial/Var:                 par_A           ;
+Sg         :^HMETA           ill_hVVn        ;
+Sg         :                 ess_nA          ;
+Sg         :^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

+Pl         :^WG              nom_t           ;
+Pl+Dial/Por:^A2I%>i2         gen_n           ; ! gen_n         since we have the i
+Pl+Dial/Jok:^WG^A0^I0%>i2    gen_tten        ; ! toolitten. Dialect ! longgenpl, eira 5322, korpus.
+Pl+Dial/Var:^WG^A0^I0%>i2    gen_tten        ; ! toolitten. Dialect ! longgenpl, eira 5322, korpus.
+Pl+Dial/Por:^A2I%>i2         par_end         ; ! for this and gen, add A2I to 0:v context
+Pl+Dial/Jok:^A0^I0%>i2       par_A           ;
+Pl+Dial/Var:^A0^I0%>i2       par_A           ;
+Pl         :^A0^HMETA        ill_hiin        ; ! kuvhiin
+Pl+Dial/Por:^A0%>i2          ess_nA          ;
+Pl+Dial/Jok:^A0^I0%>i2       ess_nA          ; ! no a:o
+Pl+Dial/Var:^A0^I0%>i2       ess_nA          ; ! no a:o
+Pl+Dial/Por:^A0%>i2          com_ne          ;
+Pl+Dial/Jok:^A0^I0%>i2       com_ne          ;
+Pl+Dial/Var:^A0^I0%>i2       com_ne          ;
+Pl+Dial/Por:^WG^A0%>i2       sgpl_cases_even ; !the same affix in sg and pl
+Pl+Dial/Jok:^WG^A0^I0%>i2    sgpl_cases_even ; !TODO ^A0 so that i2 (plural) is consistent (not a:i here)
+Pl+Dial/Var:^WG^A0^I0%>i2    sgpl_cases_even ; !TODO ^A0 so that i2 (plural) is consistent (not a:i here)

LEXICON n_11_A0_A2I_pl !!= * @CODE@ kuva - kuvissa, poika - pojissa ! TODO which adjectives?
+N+Dial/Por :^Por             x_11_A0_A2I_pl ;
+N+Dial/Var :^Var             x_11_A0_A2I_pl ;
+N+Dial/Jok :^Jok             x_11_A0_A2I_pl ;

LEXICON x_11_A0_A2I_pl !!= * @CODE@ kuva - kuvissa, poika - pojissa ! TODO which adjectives?
+Pl         :^WG              nom_t           ;
+Pl+Dial/Por:^A2I%>i2         gen_n           ; ! gen_n         since we have the i
+Pl+Dial/Jok:^WG^A0^I0%>i2    gen_tten        ; ! toolitten. Dialect ! longgenpl, eira 5322, korpus.
+Pl+Dial/Var:^WG^A0^I0%>i2    gen_tten        ; ! toolitten. Dialect ! longgenpl, eira 5322, korpus.
+Pl+Dial/Por:^A2I%>i2         par_end         ; ! for this and gen, add A2I to 0:v context
+Pl+Dial/Jok:^A0^I0%>i2       par_A           ;
+Pl+Dial/Var:^A0^I0%>i2       par_A           ;
+Pl         :^A0^HMETA        ill_hiin        ; ! kuvhiin
+Pl+Dial/Por:^A0%>i2          ess_nA          ;
+Pl+Dial/Jok:^A0^I0%>i2       ess_nA          ; ! no a:o
+Pl+Dial/Var:^A0^I0%>i2       ess_nA          ; ! no a:o
+Pl+Dial/Por:^A0%>i2          com_ne          ;
+Pl+Dial/Jok:^A0^I0%>i2       com_ne          ;
+Pl+Dial/Var:^A0^I0%>i2       com_ne          ;
+Pl+Dial/Por:^WG^A0%>i2       sgpl_cases_even ; !the same affix in sg and pl
+Pl+Dial/Jok:^WG^A0^I0%>i2    sgpl_cases_even ; !TODO ^A0 so that i2 (plural) is consistent (not a:i here)
+Pl+Dial/Var:^WG^A0^I0%>i2    sgpl_cases_even ; !TODO ^A0 so that i2 (plural) is consistent (not a:i here)

LEXICON n_11_saame
+N             :             x_11_saame     ;
+N+Sg          :             nom_R           ;
+N+Sg          :             nom_end         ;

LEXICON x_11_saame 
  +Sg: nom_end ;  
  x_11_saame_i_oblique ; 

LEXICON x_11_saame_i_oblique
  +Sg+Dial/Por:^Por^WG      gen_n_sg         ;
  +Sg+Dial/Jok:^Jok^WG      gen_n_sg         ;
  +Sg+Dial/Var:^Var^WG      gen_n_sg         ;
  +Sg+Dial/Por:             par_V           ;
  +Sg+Dial/Jok:             par_A           ;
  +Sg+Dial/Var:             par_A           ;
  +Sg          :^HMETA       ill_hVVn        ;
  +Sg          :             ess_nA          ;
  +Sg+Dial/Por:^Por^WG      sgpl_cases_even_Por ;
  +Sg+Dial/Jok:^Jok^WG      sgpl_cases_even ;
  +Sg+Dial/Var:^Var^WG      sgpl_cases_even ;

  +Pl          :^WG          nom_t           ;
  +Pl+Dial/Por :%>i2         gen_Vn          ; ! hyksiin
  +Pl+Dial/Jok:^WG%>i2      gen_tten        ; ! hyksitten
  +Pl+Dial/Var:^WG%>i2      gen_tten        ; ! hyksitten
  +Pl+Dial/Por :%>i2         par_V           ; ! hyksii
  +Pl+Dial/Jok:%>i2         par_A           ; ! hyksiä
  +Pl+Dial/Var:%>i2         par_A           ; ! hyksiä
  +Pl          :^EDEL        ill_hiin        ; ! TODO add Twolc description about EDEL ! suomhiin
  +Pl          :%>i2         ess_nA          ;
  +Pl          :%>i2         com_ne          ;
  +Pl          :^WG%>i2      sgpl_cases_even ; !! the same affix in sg and pl
  !      +Pl+Ill:^EDEL%>hii n_PxK         ; ! TODO add Twolc description about EDEL ! suomhiin

LEXICON n_11_i ! pappi, tooli, lyhyt vokali, loppuu i:llä
+N             :             x_11_i     ;
+N+Sg          :             nom_R           ;
+N+Sg          :             nom_end         ;

LEXICON x_11_i ! pappi, tooli, lyhyt vokali, loppuu i:llä
  +Sg: nom_end ;   ! nom.sg in -i (but not propernouns -C)
  x_11_i_oblique ; ! (also for propernouns)

LEXICON x_11_i_oblique ! rest of i, also propernouns
  +Sg+Dial/Por:^Por^WG      gen_n_sg         ;
  +Sg+Dial/Jok:^Jok^WG      gen_n_sg         ;
  +Sg+Dial/Var:^Var^WG      gen_n_sg         ;
  +Sg+Dial/Por:             par_V           ;
  +Sg+Dial/Jok:             par_A           ;
  +Sg+Dial/Var:             par_A           ;
  +Sg          :^HMETA       ill_hVVn        ;
  +Sg          :             ess_nA          ;
  +Sg+Dial/Por:^Por^WG      sgpl_cases_even_Por ;
  +Sg+Dial/Jok:^Jok^WG      sgpl_cases_even ;
  +Sg+Dial/Var:^Var^WG      sgpl_cases_even ;
  
  +Pl+Dial/Por:^Por^WG      nom_t           ;
  +Pl+Dial/Jok:^Jok^WG      nom_t           ;
  +Pl+Dial/Var:^Var^WG      nom_t           ;
  +Pl+Dial/Por :^AO%>i2      gen_n           ; ! gen_n         since we have the i
  +Pl+Dial/Jok:^WG^AO       gen_tten        ;
  +Pl+Dial/Var:^WG^AO       gen_tten        ;
  +Pl+Dial/Por :^AO%>i2      par_end         ;
!  +Pl+Dial/Var:^AO%>j       par_A           ; ! Use i:j in twolc j, see below
  +Pl+Dial/Jok:^AO          par_A           ;
  +Pl+Dial/Var:^AO          par_A           ;
  +Pl          :^AO^HMETA    ill_hVin        ;
  +Pl+Dial/Por :^AO%>i2      ess_nA          ;
  +Pl+Dial/Jok:^AO          ess_nA          ;
  +Pl+Dial/Var:^AO          ess_nA          ;
  +Pl+Dial/Por :^AO%>i2      com_ne          ;
  +Pl+Dial/Jok:^AO          com_ne          ;
  +Pl+Dial/Var:^AO          com_ne          ;
  +Pl+Dial/Por:^Por^WG^AO%>i2   sgpl_cases_even_Por ; !the same affix in sg and pl
  +Pl+Dial/Jok:^Jok^WG^AO       sgpl_cases_even ; ! TODO should be i in other, but not in pappi, tooli, i-ending, also for adjectives in Var, siisti.
  +Pl+Dial/Var:^Var^WG^AO       sgpl_cases_even ; ! TODO should be i in other, but not in pappi, tooli, i-ending, also for adjectives in Var, siisti.

LEXICON n_11_E2I        !!= @CODE@ on ovi:ove, joki:joke, hyksi, suomi ! Ei lainasanat
+N+Dial/Por    :^Por         x_11_E2I  ;
+N+Dial/Var    :^Var         x_11_E2I  ;
+N+Dial/Jok    :^Jok         x_11_E2I  ;
+N+Sg          :^E2I         nom_R           ; ! ^EI e to i
!+N+Dial/Var:^¤   x_11_E2I ; TODO for joen VAR, needs to not break other stuff

LEXICON x_11_E2I
  +Sg+Nom      :^E2I         K               ; ! ^EI e to i
  +Sg          :^WG          gen_n_sg        ;
  +Sg+Dial/Por:             par_V           ; ! suomee
  +Sg+Dial/Jok:^E2I         par_A           ; ! suomea
  +Sg+Dial/Var:^E2I         par_A           ; ! suomea
  +Sg          :^HMETA       ill_hVVn        ; ! tyvheen
  +Sg          :             ess_nA          ;
  +Sg          :^WG          sgpl_cases_even ; !! these two lexica for cases with

  +Pl          :^WG          nom_t           ;
  +Pl+Dial/Por :%>i2         gen_Vn          ; ! hyksiin
  +Pl+Dial/Jok:^WG%>i2      gen_tten        ; ! hyksitten
  +Pl+Dial/Var:^WG%>i2      gen_tten        ; ! hyksitten
  +Pl+Dial/Por :%>i2         par_V           ; ! hyksii
  +Pl+Dial/Jok:%>i2         par_A           ; ! hyksiä
  +Pl+Dial/Var:%>i2         par_A           ; ! hyksiä
  +Pl          :^EDEL        ill_hiin        ; ! TODO add Twolc description about EDEL ! suomhiin
  +Pl          :%>i2         ess_nA          ;
  +Pl          :%>i2         com_ne          ;
  +Pl          :^WG%>i2      sgpl_cases_even ; !! the same affix in sg and pl
  !      +Pl+Ill:^EDEL%>hii n_PxK         ; ! TODO add Twolc description about EDEL ! suomhiin

LEXICON x_11_E2I_prop !propernouns

  +Sg+Nom      :^E2I         K               ; 
  +Sg+Dial/Por:^Por^WG       gen_n_sg        ; !Lemmijoven
  +Sg+Dial/Var:^Var^WG       gen_n_sg        ; !Lemmijoen
  +Sg+Dial/Jok:^Jok^WG       gen_n_sg        ;
  +Sg+Dial/Por:              par_V           ; 
  +Sg+Dial/Var:^E2I          par_A           ; 
  +Sg+Dial/Jok:^E2I          par_A           ; 
  +Sg          :^HMETA       ill_hVVn        ; 
  +Sg          :             ess_nA          ;
  +Sg+Dial/Por:^Por^WG       sgpl_cases_even ;
  +Sg+Dial/Var:^Var^WG       sgpl_cases_even ;
  +Sg+Dial/Jok:^Jok^WG       sgpl_cases_even ;

  +Pl+Dial/Por:^Por^WG       nom_t           ;
  +Pl+Dial/Var:^Var^WG       nom_t           ;
  +Pl+Dial/Jok:^Jok^WG       nom_t           ;
  +Pl+Dial/Por:%>i2          gen_Vn          ; 
  +Pl+Dial/Var:^WG%>i2       gen_tten        ; 
  +Pl+Dial/Jok:^WG%>i2       gen_tten        ; 
  +Pl+Dial/Por:%>i2          par_V           ; 
  +Pl+Dial/Var:%>i2          par_A           ; 
  +Pl+Dial/Jok:%>i2          par_A           ; 
  +Pl          :^EDEL        ill_hiin        ; 
  +Pl          :%>i2         ess_nA          ;
  +Pl          :%>i2         com_ne          ;
  +Pl+Dial/Por:^Por^WG%>i2   sgpl_cases_even ;
  +Pl+Dial/Var:^Var^WG%>i2   sgpl_cases_even ;
  +Pl+Dial/Jok:^Jok^WG%>i2   sgpl_cases_even ;

LEXICON n_11_E2I_pl        !!= @CODE@ sakset, hykset
+N+Dial/Por    :^Por         x_11_E2I_pl  ;
+N+Dial/Var    :^Var         x_11_E2I_pl  ;
+N+Dial/Jok    :^Jok         x_11_E2I_pl  ;

LEXICON x_11_E2I_pl
  +Pl          :^WG          nom_t           ;
  +Pl+Dial/Por:%>i2         gen_Vn          ; ! hyksiin
  +Pl+Dial/Jok:^WG%>i2      gen_tten        ; ! hyksitten
  +Pl+Dial/Var:^WG%>i2      gen_tten        ; ! hyksitten
  +Pl+Dial/Por :%>i2         par_V           ; ! hyksii
  +Pl+Dial/Jok:%>i2         par_A           ; ! hyksiä
  +Pl+Dial/Var:%>i2         par_A           ; ! hyksiä
  +Pl          :^EDEL        ill_hiin        ;
  +Pl          :%>i2         ess_nA          ;
  +Pl          :%>i2         com_ne          ;
  +Pl          :^WG%>i2      sgpl_cases_even ;

LEXICON n_11_pl        !!= * @CODE@  "villahousut", lyhyt vokali, yks vartalo, kasvot
+N             :       x_11_pl    ;
+N+Pl          :       nom_t      ; ! housut, kasvot

LEXICON x_11_pl        !!= * @CODE@ ! Seems like no adjectives call this?


  +Pl+Dial/Por:%>i2               gen_n           ; ! kasvoin
  +Pl+Dial/Jok:%>i2               gen_tten        ; ! kasvoitten, housuitten
  +Pl+Dial/Var:%>i2               gen_tten        ; ! kasvoitten, housuitten
  +Pl+Dial/Por:%>i2               par_end         ; ! kasvoi
  +Pl+Dial/Jok:%>j                par_A           ; ! kasvoja
  +Pl+Dial/Var:%>j                par_A           ; ! kasvoja
  +Pl          :^HMETA             ill_hVin        ;
  +Pl          :%>i2               ess_nA          ;
  +Pl          :%>i2               com_ne          ;
  +Pl          :%>i2               sgpl_cases_even ; !! the same affix in sg and pl

  ! LEXICON vanha_kk-longgenpl
  !      +Gen:%>kk%>i2           #               ; ! kk ?? Tsekkaa..

  !LEXICON vanha_kk-longgparpl
  ! +Par:%>kk%>i2 # ; ! kk ?? Tsekkaa..


LEXICON n_11_i_pl  ! sortsit
+N             :             x_11_i_pl     ;

LEXICON x_11_i_pl
  x_11_i_oblique_pl ;

LEXICON x_11_i_oblique_pl
  +Pl+Dial/Por:^Por^WG      nom_t           ;
  +Pl+Dial/Jok:^Jok^WG      nom_t           ;
  +Pl+Dial/Var:^Var^WG      nom_t           ;
  +Pl+Dial/Por:^AO%>i2      gen_n           ;
  +Pl+Dial/Jok:^WG^AO       gen_tten        ;
  +Pl+Dial/Var:^WG^AO       gen_tten        ;
  +Pl+Dial/Por:^AO%>i2      par_end         ;
  +Pl+Dial/Jok:^AO          par_A           ;
  +Pl+Dial/Var:^AO          par_A           ;
  +Pl         :^AO^HMETA    ill_hVin        ;
  +Pl+Dial/Por:^AO%>i2      ess_nA          ;
  +Pl+Dial/Jok:^AO          ess_nA          ;
  +Pl+Dial/Var:^AO          ess_nA          ;
  +Pl+Dial/Por:^AO%>i2      com_ne          ;
  +Pl+Dial/Jok:^AO          com_ne          ;
  +Pl+Dial/Var:^AO          com_ne          ;
  +Pl+Dial/Por:^Por^WG^AO%>i2   sgpl_cases_even_Por ;
  +Pl+Dial/Jok:^Jok^WG^AO       sgpl_cases_even ;
  +Pl+Dial/Var:^Var^WG^AO       sgpl_cases_even ;


LEXICON n_11_ae_pl ! päivät
+N:             x_11_ae_pl     ;

LEXICON x_11_ae_pl
+Pl+Dial/Por:%>i2      gen_in          ; ! päiviin
+Pl+Dial/Por:          ill_hiin        ; ! päivhiin
+Pl+Dial/Var:          ill_hiin        ; ! päivhiin
+Pl+Dial/Jok:          ill_hiin        ; ! päivhiin
  
!Por
  +Pl+Dial/Por:^Por^WG          nom_t           ;
  +Pl+Dial/Por:%>i2             par_V           ;
  +Pl+Dial/Por:%>i2             ess_nA          ;
  +Pl+Dial/Por:%>i2             com_ne          ;
  +Pl+Dial/Por:^Por^WG%>i2      sgpl_cases_even ;

!Jok
  +Pl+Dial/Jok:^WG              nom_t           ;
  +Pl+Dial/Jok:^WG%>i2          gen_tten        ;
  +Pl+Dial/Jok:%>i2             par_A           ;
  +Pl+Dial/Jok:%>i2             ess_nA          ;
  +Pl+Dial/Jok:%>i2             com_ne          ;
  +Pl+Dial/Jok:^WG%>i2          sgpl_cases_even ;

!Var
  +Pl+Dial/Var:^WG              nom_t           ;
  +Pl+Dial/Var:^WG%>i2          gen_tten        ;
  +Pl+Dial/Var:%>i2             par_A           ;
  +Pl+Dial/Var:%>i2             ess_nA          ;
  +Pl+Dial/Var:%>i2             com_ne          ;
  +Pl+Dial/Var:^WG%>i2          sgpl_cases_even ; 

LEXICON n_21_C !!= * @CODE@ lainasanat, badminton
+N+Sg: nom_end ;
+N:i x_21 ;

LEXICON n_21        !!= * @CODE@  opettaaja, karamelli
n_21_sg ;
n_21_pl ;

LEXICON n_21_sg
+N         :    x_21  ;
+N+Sg      :    nom_R    ;

LEXICON n_21_pl
+N: x_21_pl ;

LEXICON x_21 ! adjektiivit ynnä muut
x_21_sg ;
x_21_pl ;

LEXICON x_21_sg
  +Sg      :         nom_end                  ;
  +Sg      :^WG      gen_n_sg           ;
  +Sg+Dial/Por:         par_V              ;
  +Sg+Dial/Jok:         par_A              ; ! karamellia
  +Sg+Dial/Var:         par_A              ; ! karamellia
  +Sg      :^HMETA   ill_hVVn           ;
  +Sg      :         ess_nA              ; ! karamellina
  +Sg      :^WG      sgpl_cases_even    ; ! the same affix in sg and pl

LEXICON x_21_pl
  +Pl      :^WG      nom_t              ; ! liberaalit
  +Dial/Por:         x_21_pl_por        ;
  +Dial/Jok:         x_21_pl_var        ;
  +Dial/Var:         x_21_pl_var        ;

        !   +Pl:^WG%>i2       gen_tten           ;
        !   +Pl:%>i2          par_tA             ;
        !   +Pl:%>i2          par_end            ; !liberaali, dialissa on liberaalia?
        !   +Pl:%>i2          ess_nA                ;
        !   +Pl:%>i2          com_ne             ;

LEXICON x_21_pl_por
  +Pl      :^WG%>i2    gen_tten    ;
  +Pl      :%>i2       par_tA      ;
  +Pl      :%>i2       par_end     ;
  +Pl      :^HMETA     ill_hiin    ;
  +Pl      :%>i2       ess_nA      ;
  +Pl      :%>i2       com_ne      ;
  +Pl      :^WG%>i2  sgpl_cases_even    ; ! Adding  to block i:0
  
  !  +Pl+Dial/Por :^A0%>i2%>i      par_end        ; ! %> i necessary, otherwise a:o NOTwork, kajavii


LEXICON x_21_pl_var ! TODO look at Dummy symbol structure in Twolc, now that we
                          ! need more of them. Rules for when (which problems) and
                          ! where (in the string/word "structure") ! ^WG before ^A2I always?
  +Pl      :^WG^A2I   gen_tten    ;
  +Pl      :^A2I      par_A       ;
  +Pl      :^HMETA    ill_hiin    ;
  +Pl      :^A2I      ess_nA      ; ! karamelline
  +Pl      :^A2I      com_ne      ; ! karamellina
  +Pl      :^WG^A2I    sgpl_cases_even    ; ! Adding  to block i:0 karamellitten

! +Pl:%>i2        gen_n              ; opettaajiin
! +Pl+Tra:%>i2ksi K ; Lene removed this one
! !+Pl+Tra:%>i2kse     PxxK               ;

LEXICON n_21_ae_even
+N: x_21_ae_even ;

LEXICON x_21_ae_even 
  +Sg      :         nom_end                  ;
  +Sg      :^WG      gen_n_sg           ;
  +Sg+Dial/Por:         par_V              ;
  +Sg+Dial/Jok:         par_A              ; ! karamellia
  +Sg+Dial/Var:         par_A              ; ! karamellia
  +Sg      :^HMETA   ill_hVVn           ;
  +Sg      :         ess_nA              ; ! karamellina
  +Sg      :^WG      sgpl_cases_even    ;
  +Pl      :^WG          nom_t          ;
  +Pl      :^WG%>i2i    gen_tten    ;
  +Pl      :%>i2i       par_tA      ;
  +Pl      :%>i2%>i       par_end     ;
  +Pl      :^HMETA     ill_hiin    ;
  +Pl      :%>i2       ess_nA      ;
  +Pl      :%>i2       com_ne      ;
  +Pl      :^WG%>i2  sgpl_cases_even    ; ! Adding  to block i:0

LEXICON n_21_odd !!= * @CODE@  kajava
+N         :  x_21_odd ;

LEXICON x_21_odd !!= * @CODE@  kajava
x_21_odd_nomsg ;
x_21_odd_oblique ;

LEXICON x_21_odd_nomsg
  +Sg          :             nom_end              ;

LEXICON x_21_odd_oblique 
  +Sg          :^WG          sgpl_cases_odd ;
  +Sg          :^WG          gen_n_sg       ;
  +Sg+Dial/Por :             par_V          ;
  +Sg+Dial/Jok:             par_A          ;
  +Sg+Dial/Var:             par_A          ;
  +Sg          :^HMETA       ill_hVVn       ;
  +Sg          :             ess_nnA        ;

  +Pl          :^WG          nom_t          ;
  +Pl+Dial/Por:^WG^A0%>i2i     gen_tten       ; ! kajaviitten ! TODO Why WG here and not it par?
  +Pl+Dial/Jok:^WG^A0%>i2      gen_tten       ; ! kajavitten
  +Pl+Dial/Var:^WG^A0%>i2      gen_tten       ; ! kajavitten
  +Pl+Dial/Por:^WG^A0%>i2i        par_tA         ; ! kajaviita
  +Pl+Dial/Por:^A0%>i2%>i      par_end        ; ! %> i necessary, otherwise a:o NOTwork, kajavii
  +Pl+Dial/Jok:^A0%>i2%>       par_A          ; ! kajavia
  +Pl+Dial/Var:^A0%>i2%>       par_A          ; ! kajavia
!      +Pl+Ill:%^HMETA%>hii n_PxK          ;
  +Pl      :%^HMETA      ill_hiin       ;
  +Pl+Dial/Por:^A0%>i2         ess_nnA        ;
  +Pl+Dial/Jok:^A0%>i2         ess_nnA        ;
  +Pl+Dial/Var:^A0%>i2         ess_nnA        ;
  +Pl+Dial/Por:^A0%>i2         com_nne        ;
  +Pl+Dial/Var:^A0%>i2         com_nne        ;
  +Pl+Dial/Jok:^A0%>i2         com_nne        ; !Jok loistaava
  +Pl      :^WG^A0%>i2      sgpl_cases_odd ; ! TODO any cases here that should have ^AO?
! +Pl+Tra:%>i2%>ksi    PxxK           ;

LEXICON n_21_A0 !!= * @CODE@  opettaaja, tapattuma
+N         :  x_21_A0 ;

LEXICON x_21_A0 !!= * @CODE@  
x_21_A0_nomsg ;
x_21_A0_oblique ;

LEXICON x_21_A0_nomsg
  +Sg          :             nom_end          ;

LEXICON x_21_A0_oblique 
  +Sg          :^WG          sgpl_cases_even  ;
  +Sg          :^WG          gen_n_sg         ;
  +Sg+Dial/Por :             par_V            ;
  +Sg+Dial/Jok:             par_A             ;
  +Sg+Dial/Var:             par_A             ;
  +Sg          :^HMETA       ill_hVVn         ;
  +Sg          :             ess_nA           ;

  +Pl          :^WG          nom_t            ;
  +Pl+Dial/Por:^WG^A0%>i2i     gen_tten       ; 
  +Pl+Dial/Jok:^WG^A0%>i2      gen_tten       ; 
  +Pl+Dial/Var:^WG^A0%>i2      gen_tten       ; 
  +Pl+Dial/Por:^WG^A0%>i2i        par_tA      ; 
  +Pl+Dial/Por:^A0%>i2%>i      par_end        ; 
  +Pl+Dial/Jok:^A0%>i2%>       par_A          ; 
  +Pl+Dial/Var:^A0%>i2%>       par_A          ; 
!      +Pl+Ill:%^HMETA%>hii n_PxK             ;
  +Pl      :%^HMETA      ill_hiin             ;
  +Pl+Dial/Por:^A0%>i2         ess_nA         ;
  +Pl+Dial/Jok:^A0%>i2         ess_nA         ;
  +Pl+Dial/Var:^A0%>i2         ess_nA         ;
  +Pl+Dial/Por:^A0%>i2         com_ne         ;
  +Pl+Dial/Var:^A0%>i2         com_ne         ;
  +Pl+Dial/Jok:^A0%>i2         com_ne         ; 
  +Pl      :^WG^A0%>i2      sgpl_cases_even   ; 
! +Pl+Tra:%>i2%>ksi    PxxK                   ;

LEXICON n_21_odd_pl !!= * @CODE@  kattoojat
+N         :  x_21_odd_pl ;


LEXICON x_21_odd_pl 
  +Pl          :^WG          nom_t          ;
  +Pl+Dial/Por:^WG^A0%>i2i     gen_tten       ; ! kajaviitten ! TODO Why WG here and not it par?
  +Pl+Dial/Jok:^WG^A0%>i2      gen_tten       ; ! kajavitten
  +Pl+Dial/Var:^WG^A0%>i2      gen_tten       ; ! kajavitten
  +Pl+Dial/Por:^WG^A0%>i2i        par_tA         ; ! kajaviita
  +Pl+Dial/Por:^A0%>i2%>i      par_end        ; ! %> i necessary, otherwise a:o NOTwork, kajavii
  +Pl+Dial/Jok:^A0%>i2%>       par_A          ; ! kajavia
  +Pl+Dial/Var:^A0%>i2%>       par_A          ; ! kajavia
!      +Pl+Ill:%^HMETA%>hii n_PxK          ;
  +Pl      :%^HMETA      ill_hiin       ;
  +Pl+Dial/Por:^A0%>i2         ess_nnA        ;
  +Pl+Dial/Jok:^A0%>i2         ess_nnA        ;
  +Pl+Dial/Var:^A0%>i2         ess_nnA        ;
  +Pl+Dial/Por:^A0%>i2         com_nne        ;
  +Pl+Dial/Var:^A0%>i2         com_nne        ;
  +Pl+Dial/Jok:^A0%>i2         com_nne        ; !Jok loistaava
  +Pl      :^WG^A0%>i2      sgpl_cases_odd ; ! TODO any cases here that should have ^AO?
! +Pl+Tra:%>i2%>ksi    PxxK           ;

LEXICON n_21_odd_u

+N         :  x_21_odd_u ;

LEXICON x_21_odd_u

  +Sg      :                   nom_end         ;
  +Pl      :^WG                nom_t           ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg+Dial/Por:                   par_V           ;
  +Sg+Dial/Jok:                   par_A           ;
  +Sg+Dial/Var:                   par_A           ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nnA         ; ! paivukkonna
  +Sg      :^WG                sgpl_cases_odd  ; ! these two lexica for cases with

  +Pl      :^WG%>i2         gen_tten        ;
 ! +Pl      :^AO%>i2            par_tA          ; ! TODO: saada selville jos tämä ryhmä saa -tA päätteen
   +Pl+Dial/Por      :%>i2            par_end          ; 
  +Pl      :^HMETA          ill_hVin        ;
!          +Pl:^AO%>i2            ill_hin         ; ! TODO, only for asioihin, not the others?
  +Pl      :%>i2            ess_nA          ; ! paivukoina
  +Pl      :%>i2            com_ne          ; ! paivukoine
  +Pl      :^WG%>i2         sgpl_cases_even ; ! the same affix in sg and pl
!      +Pl+Ill:^AO^HMETA%>h^V%>i2 n_PxK           ;
         !+Ill:         %>h^V%>i2 n_PxK           ;
!+Ill:h%>i2%>i2     n_PxK ; ! on Sg:ssä hVVn


LEXICON n_21_even_u

+N         :  x_21_even_u ;

LEXICON x_21_even_u 

  +Sg      :                   nom_end         ;
  +Pl      :^WG                nom_t           ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg+Dial/Por:                   par_V           ;
  +Sg+Dial/Jok:                   par_A           ;
  +Sg+Dial/Var:                   par_A           ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nA         ; ! paivukkonna
  +Sg      :^WG                sgpl_cases_even  ; ! these two lexica for cases with

  +Pl      :^WG%>i2         gen_tten        ;
 ! +Pl      :^AO%>i2            par_tA          ; ! TODO: saada selville jos tämä ryhmä saa -tA päätteen
   +Pl+Dial/Por      :%>i2            par_end          ; 
  +Pl      :^HMETA          ill_hVin        ;
!          +Pl:^AO%>i2            ill_hin         ; ! TODO, only for asioihin, not the others?
  +Pl      :%>i2            ess_nA          ; ! paivukoina
  +Pl      :%>i2            com_ne          ; ! paivukoine
  +Pl      :^WG%>i2         sgpl_cases_even ; ! the same affix in sg and pl
!      +Pl+Ill:^AO^HMETA%>h^V%>i2 n_PxK           ;
         !+Ill:         %>h^V%>i2 n_PxK           ;
!+Ill:h%>i2%>i2     n_PxK ; ! on Sg:ssä hVVn


LEXICON n_21_odd_AO !valinta> valinttoi. For the nouns that ends in -a and where the stem change to -o in plural, and also that have special gemination in pl par. We might have to change pl par for the same reason as in "perintö". 

+N         :  x_21_odd_AO ;

LEXICON x_21_odd_AO

+Sg:                    nom_R           ;
+Sg:                    nom_end         ;
+Sg+Dial/Por:^Por^WG    gen_n_sg        ;
!+Sg+Dial/Var:^Var^WG    gen_n_sg        ;
+Sg+Dial/Por:       par_V           ;
!+Sg+Dial/Var:^Var       par_A           ;
!+Sg+Dial/Jok:^Jok       par_A           ;
+Sg:^HMETA              ill_hVVn        ;
+Sg:                    ess_nA          ;
+Sg+Dial/Por:^Por^WG    sgpl_cases_odd ; !to sgpl_cases_even for cases with
!+Sg+Dial/Var:^Var^WG    sgpl_cases_odd ; !to sgpl_cases_even for cases with
+Pl+Dial/Por:^Por^WG                 nom_t           ;
!+Pl+Dial/Var:^Var^WG                 nom_t           ;
!+Pl+Dial/Jok:^Jok^WG^AO%>i2          gen_tten        ;
!+Pl+Dial/Var:^Var^WG^AO%>i2          gen_tten        ;
+Pl+Dial/Por:^Por^WG^AO%>i2             gen_tten          ;
+Pl+Dial/Por:^Por^AO%>i2             par_end         ;


!+Pl+Dial/Jok:^Jok^AO%>j              par_A           ; ! Use i:j in twolc j, see below
!+Pl+Dial/Var:^Var^AO%>j              par_A           ;
+Pl:^AO^HMETA                        ill_hVin        ; ! sykshyin
+Pl:^AO%>i2                          ess_nA          ;
+Pl:^AO%>i2                          com_ne          ;
+Pl+Dial/Por:^Por^WG^AO%>i2          sgpl_cases_even ; !the same affix in sg and pl
!+Pl+Dial/Var:^Var^WG^AO%>i2          sgpl_cases_even ; !the same affix in sg and pl






LEXICON n_21_odd_oi  ! For nouns that ends in -o and get special gemination in pl partitive and where only -i is added to the plural stem. We might have to change pl par when we find out is it "perinttöi, perintöitä or perinöitä". 

+N         :  x_21_odd_oi ;

LEXICON x_21_odd_oi

+Sg:                    nom_R           ;
+Sg:                    nom_end         ;
+Sg+Dial/Por:^Por^WG    gen_n_sg        ;
+Sg+Dial/Var:^Var^WG    gen_n_sg        ;
+Sg+Dial/Por:           par_V           ;
+Sg+Dial/Var:^Var       par_A           ;
!+Sg+Dial/Jok:^Jok       par_A           ;
+Sg:^HMETA              ill_hVVn        ;
+Sg:                    ess_nnA          ;
+Sg+Dial/Por:^Por^WG    sgpl_cases_odd ; !to sgpl_cases_even for cases with
+Sg+Dial/Var:^Var^WG    sgpl_cases_odd ; !to sgpl_cases_even for cases with

+Pl+Dial/Por:^Por^WG              nom_t           ;
+Pl+Dial/Var:^Var^WG              nom_t           ;
!+Pl+Dial/Jok:^Jok^WG^AO%>i2      gen_tten        ;
+Pl+Dial/Var:^Var^WG^AO%>i2       gen_tten        ;
+Pl+Dial/Por:^Por^WG^AO%>i2       gen_tten        ;
+Pl+Dial/Por:^Por^WG^A0%>i2       par_tA         ;
+Pl+Dial/Por:%>i2                 par_end         ;
!+Pl+Dial/Jok:^Jok^AO%>j          par_A           ; ! Use i:j in twolc j, see below
+Pl+Dial/Var:^Var^AO%>i2          par_tA           ;
+Pl:^HMETA                     ill_hVin        ; ! sykshyin
+Pl:%>i2                          ess_nA          ;
+Pl:%>i2                          com_ne          ;
+Pl+Dial/Por:^Por^WG%>i2          sgpl_cases_even ; !the same affix in sg and pl
+Pl+Dial/Var:^Var^WG^AO%>i2          sgpl_cases_even ; !the same affix in sg and pl


LEXICON n_21_par_oi  ! For nouns that ends in -o and get special gemination in pl partitive and where only -i is added to the plural stem. We might have to change pl par when we find out is it "perinttöi, perintöitä or perinöitä". 

+N         :  x_21_par_oi ;

LEXICON x_21_par_oi

+Sg:                    nom_R           ;
+Sg:                    nom_end         ;
+Sg+Dial/Por:^Por^WG    gen_n_sg        ;
+Sg+Dial/Var:^Var^WG    gen_n_sg        ;
+Sg+Dial/Por:           par_V           ;
+Sg+Dial/Var:^Var       par_A           ;
!+Sg+Dial/Jok:^Jok       par_A           ;
+Sg:^HMETA              ill_hVVn        ;
+Sg:                    ess_nnA          ;
+Sg+Dial/Por:^Por^WG    sgpl_cases_even ; !to sgpl_cases_even for cases with
+Sg+Dial/Var:^Var^WG    sgpl_cases_even ; !to sgpl_cases_even for cases with

+Pl+Dial/Por:^Por^WG              nom_t           ;
+Pl+Dial/Var:^Var^WG              nom_t           ;
!+Pl+Dial/Jok:^Jok^WG^AO%>i2      gen_tten        ;
+Pl+Dial/Var:^Var^WG^AO%>i2       gen_tten        ;
+Pl+Dial/Por:^Por^WG^AO%>i2       gen_tten        ;
+Pl+Dial/Por:^Por^WG^A0%>i2       par_tA         ;
+Pl+Dial/Por:%>i2                 par_end         ;
!+Pl+Dial/Jok:^Jok^AO%>j          par_A           ; ! Use i:j in twolc j, see below
+Pl+Dial/Var:^Var^AO%>i2          par_tA           ;
+Pl:^HMETA                     ill_hVin        ; ! sykshyin
+Pl:%>i2                          ess_nA          ;
+Pl:%>i2                          com_ne          ;
+Pl+Dial/Por:^Por^WG%>i2          sgpl_cases_even ; !the same affix in sg and pl
+Pl+Dial/Var:^Var^WG^AO%>i2          sgpl_cases_even ; !the same affix in sg and pl



LEXICON n_21_odd_C !!= * @CODE@ lainasanat, fiction
+N+Sg: nom_end ;
+N:i x_21_odd_i_oblique ;

LEXICON n_21_odd_i !!= * @CODE@  meininki, tunturi TODO
+N         :     x_21_odd_i ;
+N+Sg      :     nom_R       ;
+N+Sg      :^WG  gen_n    ;

LEXICON x_21_odd_i
  +Sg      :        nom_end               ;
  x_21_odd_i_oblique ;

LEXICON x_21_odd_i_oblique
  +Sg      :^WG     gen_n_sg        ;
  +Sg+Dial/Por:        par_V           ;
  +Sg+Dial/Jok:        par_A           ;
  +Sg+Dial/Var:        par_A           ;
  +Sg      :^HMETA  ill_hVVn        ;
  +Sg      :        ess_nnA         ;
  +Sg      :^WG     sgpl_cases_odd  ;

  +Pl      :^WG     nom_t           ;
  +Pl+Dial/Por:^WG%>i2 gen_tten        ;
  +Pl+Dial/Jok:^WG     gen_tten        ;
  +Pl+Dial/Var:^WG     gen_tten        ;
  +Pl+Dial/Por:%>i2    par_tA          ;
  +Pl+Dial/Jok:        par_A           ;
  +Pl+Dial/Var:        par_A           ;
  +Pl      :^HMETA  ill_hiin        ;
  +Pl+Dial/Por:%>i2    ess_nA          ;
  +Pl+Dial/Jok:        ess_nnA         ;
  +Pl+Dial/Var:        ess_nnA         ;
  +Pl+Dial/Por:%>i2    com_ne          ;
  +Pl+Dial/Jok:        com_nne         ;
  +Pl+Dial/Var:        com_nne         ;

  +Pl+Dial/Por:^WG%>i2 sgpl_cases_even ; ! Adding  to block i:0
  +Pl+Dial/Jok:^WG%>   sgpl_cases_odd  ; ! Adding  to block i:0
  +Pl+Dial/Var:^WG%>   sgpl_cases_odd  ; ! Adding  to block i:0

!  Tarkista, onko yaml oikein:
!  [24/25][FAIL] meininki+N+Pl+Ess => Missing results: meininkiinä
!  [24/25][FAIL] meininki+N+Pl+Ess => Unexpected results: meininkkiinä
!  [25/25][FAIL] meininki+N+Pl+Com => Missing results: meininkiine
!  [25/25][FAIL] meininki+N+Pl+Com => Unexpected results: meininkkiine

LEXICON n_21_even_i !kommentaari, even tavut 
+N+Sg: nom_end ;
+N: x_21_even_i ;

LEXICON x_21_even_i 
  +Sg      :^WG     gen_n_sg        ;
  +Sg+Dial/Por:        par_V           ;
  +Sg+Dial/Jok:        par_A           ;
  +Sg+Dial/Var:        par_A           ;
  +Sg      :^HMETA  ill_hVVn        ;
  +Sg      :        ess_nA         ;
  +Sg      :^WG     sgpl_cases_even  ;

  +Pl      :^WG     nom_t           ;
  +Pl+Dial/Por:^WG%>i2 gen_tten        ;
  +Pl+Dial/Jok:^WG     gen_tten        ;
  +Pl+Dial/Var:^WG     gen_tten        ;
  +Pl+Dial/Por:%>i2    par_tA          ;
  +Pl+Dial/Jok:        par_A           ;
  +Pl+Dial/Var:        par_A           ;
  +Pl      :^HMETA  ill_hiin        ;
  +Pl+Dial/Por:%>i2    ess_nA          ;
  +Pl+Dial/Jok:        ess_nA         ;
  +Pl+Dial/Var:        ess_nA         ;
  +Pl+Dial/Por:%>i2    com_ne          ;
  +Pl+Dial/Jok:        com_ne         ;
  +Pl+Dial/Var:        com_ne         ;

  +Pl+Dial/Por:^WG%>i2 sgpl_cases_even ; ! Adding  to block i:0
  +Pl+Dial/Jok:^WG%>   sgpl_cases_even  ; ! Adding  to block i:0
  +Pl+Dial/Var:^WG%>   sgpl_cases_even  ; ! Adding  to block i:0



LEXICON n_21_oi        !!= * @CODE@  Paivukko, perintö, kurkkio
! They differ from n_21_odd_oi in pl par
+N         : x_21_oi ;

LEXICON x_21_oi ! Kommentaari: var ja jok dialektissa oon sg gen "aurinkon" ja sg nom "kuninkas" s.72 norjankielisessä grammatiikissa. 
  +Sg      :                   nom_end         ;
  +Pl      :^WG                nom_t           ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg+Dial/Por:                   par_V           ;
  +Sg+Dial/Jok:                   par_A           ;
  +Sg+Dial/Var:                   par_A           ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nnA         ; ! paivukkonna
  +Sg      :^WG                sgpl_cases_odd  ; ! these two lexica for cases with

  +Pl      :^WG^AO%>i2         gen_tten        ;
  +Pl+Dial/Por:^WG^AO%>i2      par_tA          ;
  +Pl+Dial/Jok:^WG^AO%>i2      par_tA          ;
  +Pl+Dial/Var:^WG^AO%>i2      par_tA          ;
  +Pl      :^HMETA             ill_hVin        ;
!          +Pl:^AO%>i2            ill_hin         ; ! TODO, only for asioihin, not the others?
  +Pl      :^WG^AO%>i2         ess_nA          ; ! paivukoina
  +Pl      :^WG^AO%>i2         com_ne          ; ! paivukoine
  +Pl      :^WG^AO%>i2         sgpl_cases_even ; ! the same affix in sg and pl
!      +Pl+Ill:^AO^HMETA%>h^V%>i2 n_PxK           ;
         !+Ill:         %>h^V%>i2 n_PxK           ;
!+Ill:h%>i2%>i2     n_PxK ; ! on Sg:ssä hVVn


! n_31_ee ! vanha_n_23
! n_31_lainasana_ee ! vanha_n_23
! n_31_ii ! vanha_n_23ii


LEXICON n_21_oi_pl        !!= * @CODE@  Pahkilot
+N         : x_21_oi_pl ;

LEXICON x_21_oi_pl !  
  +Pl      :^WG                nom_t           ;
  +Pl      :^WG^AO%>i2         gen_tten        ;
  +Pl+Dial/Por:^WG^AO%>i2      par_tA          ;
  +Pl+Dial/Jok:^WG^AO%>i2      par_tA          ;
  +Pl+Dial/Var:^WG^AO%>i2      par_tA          ;
  +Pl      :^HMETA             ill_hVin        ;
!          +Pl:^AO%>i2            ill_hin         ; ! TODO, only for asioihin, not the others?
  +Pl      :^WG^AO%>i2         ess_nA          ; ! paivukoina
  +Pl      :^WG^AO%>i2         com_ne          ; ! paivukoine
  +Pl      :^WG^AO%>i2         sgpl_cases_even ; ! the same affix in sg and pl
!      +Pl+Ill:^AO^HMETA%>h^V%>i2 n_PxK           ;
         !+Ill:         %>h^V%>i2 n_PxK           ;
!+Ill:h%>i2%>i2     n_PxK ; ! on Sg:ssä hVVn


! n_31_ee ! vanha_n_23
! n_31_lainasana_ee ! vanha_n_23
! n_31_ii ! vanha_n_23ii

LEXICON n_21_oi_AO_odd       !!= * @CODE@  Mustikka, kulkkiija, sivakka, asia (in Var) ! Loppuu a:han!!!!
+N         : x_21_oi_AO ;
+N+Pl      :^AO^HMETA          ill_hVin        ;

LEXICON n_21_oi_AO_odd_pl       !!= * @CODE@  Mustikka, kulkkiija, sivakka, asia (in Var) ! Loppuu a:han!!!!
+N         : x_21_oi_AO_pl ;
+N+Pl      :^AO^HMETA          ill_hVin        ;

LEXICON n_21_oi_ÄÖ_odd        !!= * @CODE@  Kynttilä, tekkiijä, jyrinä - Loppuu ä:hän!!!!
+N         : x_21_oi_AO ;
+N+Pl      :^AO^HMETA          ill_höin        ;

LEXICON n_21_oi_ÄÖ_odd_pl        !!= * @CODE@  Kynttilä, tekkiijä, jyrinä - Loppuu ä:hän!!!!
+N         : x_21_oi_AO_pl ;
+N+Pl      :^AO^HMETA          ill_höin        ;

LEXICON x_21_oi_AO_pl            ! odd
  +Pl      :^WG                nom_t           ;
  +Pl      :^WG^AO%>i2         gen_tten        ;
  +Pl      :^WG^AO%>i2         par_tA          ; 
  +Pl      :^WG^AO%>i2         ess_nA          ; 
  +Pl      :^WG^AO%>i2         com_ne          ; 
  +Pl      :^WG^AO%>i2         sgpl_cases_even ;
  
LEXICON x_21_oi_AO            ! odd
  +Sg      :                   nom_end         ;
  +Pl      :^WG                nom_t           ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg+Dial/Por:                   par_V        ;
  +Sg+Dial/Jok:                   par_A        ;
  +Sg+Dial/Var:                   par_A        ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nnA         ; 
  +Sg      :^WG                sgpl_cases_odd  ; 

  +Pl      :^WG^AO%>i2         gen_tten        ;
  +Pl      :^WG^AO%>i2         par_tA          ; 
  +Pl      :^WG^AO%>i2         ess_nA          ; 
  +Pl      :^WG^AO%>i2         com_ne          ; 
  +Pl      :^WG^AO%>i2         sgpl_cases_even ;

LEXICON n_21_oi_AO_even        !!= * @CODE@  kuunteliija
+N         : x_21_oi_AO_even ;
+N+Pl      :^AO^HMETA          ill_hVin        ;

LEXICON n_21_oi_ÄÖ_even        !!= * @CODE@  käveliijä
+N         : x_21_oi_AO_even ;
+N+Pl      :^AO^HMETA          ill_höin        ;

LEXICON x_21_oi_AO_even
  +Sg      :                   nom_end         ;
  +Pl      :^WG                nom_t           ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg+Dial/Por:                   par_V        ;
  +Sg+Dial/Jok:                   par_A        ;
  +Sg+Dial/Var:                   par_A        ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nA          ; 
  +Sg      :^WG                sgpl_cases_even ; 

  +Pl      :^WG^AO%>i2         gen_tten        ;
  +Pl      :^WG^AO%>i2         par_tA          ; 
  +Pl      :^WG^AO%>i2         ess_nA          ; 
  +Pl      :^WG^AO%>i2         com_ne          ; 
  +Pl      :^WG^AO%>i2         sgpl_cases_even ;

LEXICON n_31_ee        !!= * @CODE@  hoppee:hoppe
+N+Dial/Por:        x_31_ee            ;
+N+Dial/Var:^E2I^¤  x_31_ia          ;
+N+Dial/Jok:^¤      x_31_ia          ; ! hopea, not hopia
! TODO TODO TODO this is where it might be going wrong
! Need to distinguish hoppee (silvery) and hoppee (silver)
! Also for Valkkee (white) and valkke (a fire or something similar) TODO TODO TODO
 ! +N+Sg+Nom:   R     Is this extra and wrong?

LEXICON x_31_ee ! for Por
x_31_ee_nomsg ;
x_31_ee_oblique ;

LEXICON x_31_ee_nomsg 
  +Sg+Nom:e       K               ;
!  +Sg+Nom+Err/Orth:%>^WG^A   K    ;

LEXICON x_31_ee_oblique 
  +Sg      :e       gen_n_sg        ;
  +Sg+Dial/-Var:e   par_tA          ;
  +Sg      :e       ill_sseen       ;
  +Sg      :e       ess_nA          ;
  +Sg      :e       sgpl_cases_even ;

  +Pl      :e       nom_t           ;
  +Pl      :e%>i2   gen_tten        ;
  +Pl      :e%>i2   par_tA          ;
  +Pl      :e%>i2   ill_ssiin       ;
  +Pl      :e%>i2   ess_nA          ;
  +Pl      :e%>i2   com_ne          ;
  +Pl      :e%>i2   sgpl_cases_even ;

LEXICON n_31_yy        !!= * @CODE@  revyy
+N+Dial/Por:        x_31_yy            ;

LEXICON x_31_yy ! for Por
x_31_yy_nomsg ;
x_31_yy_oblique ;

LEXICON x_31_yy_nomsg 
  +Sg+Nom:y       K               ;
!  +Sg+Nom+Err/Orth:%>^WG^A   K    ;

LEXICON x_31_yy_oblique 
  +Sg      :y       gen_n_sg        ;
  +Sg+Dial/-Var:y   par_tA          ;
  +Sg      :y       ill_sseen       ;
  +Sg      :y       ess_nA          ;
  +Sg      :y       sgpl_cases_even ;

  +Pl      :y       nom_t           ;
  +Pl      :y%>i2   gen_tten        ;
  +Pl      :y%>i2   par_tA          ;
  +Pl      :y%>i2   ill_ssiin       ;
  +Pl      :y%>i2   ess_nA          ;
  +Pl      :y%>i2   com_ne          ;
  +Pl      :y%>i2   sgpl_cases_even ;


LEXICON x_31_ia ! For -Por only valkia, hopia, kauhia
  +Sg+Nom  :%>^A         K               ; ! valkia
  +Sg      :%>^A         gen_n_sg        ; ! valkian
  +Sg      :%>^A         par_A           ; ! valkiaa
  +Sg+Dial/Jok:%>^At        par_A           ; ! valkiata
  +Sg      :             ill_hAAn        ; ! valkihaan
  +Sg      :%>^A         ess_nnA         ; ! valkianna pime^A>nn^A
  +Sg      :%>^A         sgpl_cases_odd  ;

  +Pl      :%>^A         nom_t           ; ! valkiat
  +Pl      :%>i2         gen_tten        ; ! valkeitten
  +Pl      :%>i2         par_tA          ; ! valkeita
  +Pl      :%>i2         ill_ssiin       ; ! valkeissiin
  +Pl      :%>i2         ess_nA          ; ! valkeina
  +Pl      :%>i2         com_ne          ; ! valkeine
  +Pl      :%>i2         sgpl_cases_even ; ! valkei-
 
 
  LEXICON x_31_ea ! Jok dialekti 
  
  +Sg      :         nom_end                  ;
  +Sg      :^WG      gen_n_sg           ;
  +Sg      :         par_A              ; ! karamellia
  +Sg      :^HMETA   ill_sseen           ;
  +Sg      :         ess_nA              ; ! karamellina
  +Sg      :^WG      sgpl_cases_even    ; ! the same affix in sg and pl

  +Pl      :^WG      nom_t              ; ! liberaalit
  
 +Pl      :^A2I   gen_tten    ;
  +Pl      :      par_A       ;
  +Pl      :^A2I    ill_ssiin    ;
  +Pl      :^A2I      ess_nA      ; ! karamelline
  +Pl      :^A2I      com_ne      ; ! karamellina
  +Pl      :^A2I    sgpl_cases_even ;

  LEXICON n_31_lainasana_ee ! filee
  +N:      x_31_lainasana_ee       ;

   LEXICON x_31_lainasana_ee
  +Sg+Nom:         K               ;
  +Sg      :       gen_n_sg        ;
  +Sg+Dial/-Var:   par_tA          ;
  +Sg      :       ill_sseen         ; ! fileehen? Mistä fileehen on otettu?
  +Sg      :       ess_nA          ;
  +Sg      :       sgpl_cases_even  ;

  +Pl      :       nom_t           ;
  +Pl      :%>i2   gen_tten        ;
  +Pl      :%>i2   par_tA          ;
  +Pl      :%>i2   ill_ssiin       ;
  +Pl      :%>i2   ess_nA          ;
  +Pl      :%>i2   com_ne          ;
  +Pl      :%>i2   sgpl_cases_even ;
  
  LEXICON n_31_aa ! filee
  +N:      x_31_aa      ;

   LEXICON x_31_aa
  +Sg+Nom:         K               ;
  +Sg      :       gen_n_sg        ;
  +Sg+Dial/-Var:   par_tA          ;
  +Sg      :       ill_sseen         ; ! fileehen? Mistä fileehen on otettu?
  +Sg      :       ess_nA          ;
  +Sg      :       sgpl_cases_even  ;

  +Pl      :       nom_t           ;
  +Pl      :%>i2   gen_tten        ;
  +Pl      :%>i2   par_tA          ;
  +Pl      :%>i2   ill_ssiin       ;
  +Pl      :%>i2   ess_nA          ;
  +Pl      :%>i2   com_ne          ;
  +Pl      :%>i2   sgpl_cases_even ;
  
LEXICON n_31_io

!+N+Dial/Por:i           x_31_ii             ; !rauttii, kommentoitu pois koska muitten varianttien nominit saavat por päätteitä 
+N  :          x_31_io                     ; ! var ja jok rautio

  
LEXICON n_31_asia

 +N      :          x_21_oi_AO             ; ! var ja jok astia 
 +N+Pl   :^AO^HMETA ill_hVin               ;

LEXICON n_31_ii        !!= * @CODE@  assii (in Por) kurkkii (in Por)
+N+Dial/Por:i          x_31_ii             ;
+N+Dial/Jok:           x_31_oi             ; ! TODO skriv dyp kommentar her
+N+Dial/Var:           x_31_oi             ; ! TODO skriv dyp kommentar her
+N+Sg      :           nom_R               ;

LEXICON x_31_ii
  +Sg      :            nom_end             ;
  +Sg      :            gen_n_sg            ;
  +Sg      :            par_tA              ;
  +Sg      :            ill_sseen           ;
  +Sg      :            ess_nA              ;
  +Sg      :            sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl

  +Pl      :            nom_t               ;
  +Pl      :            gen_tten            ;
  +Pl      :            par_tA              ;
  +Pl      :            ill_ssiin           ;
  +Pl      :            ess_nA              ;
  +Pl      :            com_ne              ;
  +Pl      :            sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl
  
LEXICON x_31_oi 
  +Sg      :                   nom_end         ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg      :                   par_A           ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nnA         ; 
  +Sg      :^WG                sgpl_cases_odd  ; 

  +Pl      :^WG                nom_t           ;
  +Pl      :^WG^AO             gen_tten        ;
  +Pl      :^WG^AO             par_tA          ;
  +Pl      :^HMETA             ill_hVin        ;
  +Pl      :^WG^AO%>i2         ess_nA          ; 
  +Pl      :^WG^AO%>i2         com_ne          ; 
  +Pl      :^WG^AO%>i2         sgpl_cases_even ; 

LEXICON x_31_io ! kurkkiota 
  +Sg      :                   nom_end         ;
  +Pl      :^WG                nom_t           ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg+Dial/Por:                par_tA          ;
  +Sg+Dial/Jok:                par_tA          ;
  +Sg+Dial/Var:                par_A           ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nnA         ;  
  +Sg      :^WG                sgpl_cases_odd  ; 

  +Pl      :^WG^AO%>i2         gen_tten        ;
  +Pl+Dial/Por:^WG^AO%>i2      par_tA          ;
  +Pl+Dial/Jok:^WG^AO%>i2      par_tA          ;
  +Pl+Dial/Var:^WG^AO%>i2      par_tA          ;
  +Pl      :^HMETA             ill_hVin        ;
  +Pl      :^WG^AO%>i2         ess_nA          ; 
  +Pl      :^WG^AO%>i2         com_ne          ; 
  +Pl      :^WG^AO%>i2         sgpl_cases_even ; 


  
LEXICON n_31_uu        !!= * @CODE@  karhuu (in Por) 
+N+Dial/Por:           x_31_uu             ;
!+N+Dial/Jok:          x_21_oi             ; ! TODO skriv dyp kommentar her
!+N+Dial/Var:          x_21_oi             ; ! TODO skriv dyp kommentar her
+N+Sg      :           nom_R  ; 

LEXICON x_31_uu
  +Sg      :            nom_end             ;
  +Sg      :            gen_n_sg            ;
  +Sg      :            par_tA              ;
  +Sg      :            ill_sseen           ;
  +Sg      :            ess_nA              ;
  +Sg      :            sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl

  +Pl      :            nom_t               ;
  +Pl+Dial/Por:%>i2            gen_tten            ;
  !+Pl+Dial/Jok:%>i2        gen_tten            ;
  !+Pl+Dial/Var:%>i2        gen_tten            ;
  +Pl+Dial/Por:%>i2            par_tA              ;
  !+Pl+Dial/Jok:%>i2        par_tA              ;
  !+Pl+Dial/Var:%>i2        par_tA              ;
  +Pl      :%>i2            ill_ssiin           ; !TODO: onko tämä oikhein? Pitääkö olla "karhuihin"? 
  +Pl      :%>i2            ess_nA              ;
  +Pl      :%>i2            com_ne              ;
  +Pl+Dial/Por:%>i2            sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl
  !+Pl+Dial/Jok:%>i2        sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl
  !+Pl+Dial/Var:%>i2        sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl

LEXICON n_12        !!= @CODE@  kieli
+N         :     x_12 ;
+N+Sg      :^E2I nom_R   ; ! ^E2I e to i

LEXICON x_12 ! pieni
  +Sg      :^E2I        nom_end         ; ! ^E2I e to i
  +Sg      :^EDEL       par_tA          ;
  +Sg      :^WG         gen_n_sg        ;
  +Sg      :^WG         sgpl_cases_even ; !! * @CODE@  for same affix in sg and pl
  +Sg      :            ess_nA          ;
  +Sg      :^HMETA      ill_hVVn        ;

  +Pl      :^WG         nom_t           ;
  +Pl+Dial/Por:%>i2i    gen_n           ;
  +Pl:                  gen_ten         ; ! kielten, both Por and Var
  +Pl+Dial/Jok:%>i2    gen_tten        ; ! kielitten, sienitten
  +Pl+Dial/Var:%>i2    gen_tten        ; ! kielitten, sienitten
  +Pl+Dial/Por:%>i2     par_V           ; ! kielii, pienii
  +Pl+Dial/Jok:%>i2    par_A           ; ! kieliä, pieniä
  +Pl+Dial/Var:%>i2    par_A           ; ! kieliä, pieniä
  +Pl      :^HMETA      ill_hiin        ;
  +Pl      :%>i2        ess_nA          ;
  +Pl      :%>i2        com_ne          ;
  +Pl      :%>i2        sgpl_cases_even ; !! * @CODE@  for same affix in sg and pl
  !     +Pl:%>i2        gen_Vn          ;
  !    !+Pl:^EDEL       gen_ten         ;

LEXICON n_12_pl        !!= @CODE@  nuoret
+N         :     x_12_pl ;
+N+Sg      :^E2I nom_R   ; ! ^E2I e to i

LEXICON x_12_pl ! nuoret
  +Pl      :^WG         nom_t           ;
  +Pl+Dial/Por:%>i2i    gen_n           ;
  +Pl:                  gen_ten         ; ! kielten, both Por and Var
  +Pl+Dial/Jok:%>i2    gen_tten        ; ! kielitten, sienitten
  +Pl+Dial/Var:%>i2    gen_tten        ; ! kielitten, sienitten
  +Pl+Dial/Por:%>i2     par_V           ; ! kielii, pienii
  +Pl+Dial/Jok:%>i2    par_A           ; ! kieliä, pieniä
  +Pl+Dial/Var:%>i2    par_A           ; ! kieliä, pieniä
  +Pl      :^HMETA      ill_hiin        ;
  +Pl      :%>i2        ess_nA          ;
  +Pl      :%>i2        com_ne          ;
  +Pl      :%>i2        sgpl_cases_even ; !! * @CODE@  for same affix in sg and pl

LEXICON n_12_hi        !!= @CODE@  lohi, tuohi, riihi
+N         :     x_12_hi ;
+N+Sg      :^E2I nom_R   ; ! ^E2I e to i

LEXICON x_12_hi 
  +Sg      :^E2I        nom_end         ; ! ^E2I e to i
  +Sg      :^EDEL       par_tA          ;
  +Sg      :^WG         gen_n_sg        ;
  +Sg      :^WG         sgpl_cases_even ; !! * @CODE@  for same affix in sg and pl
  +Sg      :            ess_nA          ;
  +Sg      :^HMETA      ill_hVVn        ;

  +Pl      :^WG         nom_t           ;
  +Pl+Dial/Por:%>i2i    gen_n           ; ! lohhiin
  +Pl         :%>i2     gen_tten        ; ! lohitten
  +Pl+Dial/Por:%>i2     par_V           ;
  +Pl+Dial/Jok:%>i2    par_A           ; 
  +Pl+Dial/Var:%>i2    par_A           ; 
  +Pl      :^HMETA      ill_hiin        ;
  +Pl      :%>i2        ess_nA          ;
  +Pl      :%>i2        com_ne          ;
  +Pl      :%>i2        sgpl_cases_even ; !! * @CODE@  for same affix in sg and pl
  !     +Pl:%>i2        gen_Vn          ;
  !    !+Pl:^EDEL       gen_ten         ;

LEXICON n_12_mi       !!= @CODE@ lumi lu
+N         :   x_12_mi ;
+N+Sg      :mi nom_R       ; ! ^EI e to i

LEXICON x_12_mi
  +Sg      :mi           nom_end         ; ! ^EI e to i
  +Sg      :me^WG        gen_n_sg        ;
  +Sg      :n            par_tA          ;
  +Sg      :me^HMETA     ill_hVVn        ; ! e is for vowel copying, then e:0
  +Sg      :me           ess_nA          ;
  +Sg      :me^WG        sgpl_cases_even ; ! these two lexica for cases with

  +Pl      :me^WG        nom_t           ;
  +Pl+Dial/Por:me%>i2       gen_Vn          ; ! lumiin
  +Pl+Dial/Jok:m%>i2        gen_tten        ; ! lumitten
  +Pl+Dial/Var:m%>i2        gen_tten        ; ! lumitten
  +Pl+Dial/Por:me%>i2       par_V           ; ! lumii
  +Pl+Dial/Jok:me%>i2       par_A           ; ! lumia
  +Pl+Dial/Var:me%>i2       par_A           ; ! lumia
  +Pl      :m^EDEL       ill_hiin        ;
  +Pl      :me%>i2       ess_nA          ;
  +Pl      :m%>i2        com_ne          ; ! kanskje me
  +Pl      :m^WG%>i2     sgpl_cases_even ; ! the same affix in sg and pl


LEXICON n_12_si        !!= @CODE@ käsi, hirsi
+N+Dial/Por       :^Por     x_12_si ;
+N+Dial/Var       :^Var     x_12_si_var ;
+N+Dial/Jok       :^Jok     x_12_si ;
+N+Sg      : nom_R     ;

LEXICON x_12_si ! uusi
  +Sg      :^E2I     nom_end         ;
!                       nomgen_px       ; ! sg nom/gen px
  +Sg      :^WG      gen_n_sg        ;
  +Sg      :^EDEL    par_tA          ; ! parsg
  +Sg      :^HMETA   ill_hVVn        ;
  +Sg      :         ess_nA          ;
  +Sg+Err/Orth:      ess_nnA         ; 
  +Sg      :^WG      sgpl_cases_even ; ! these two lexica for cases with

  +Pl      :^WG      nom_t           ;
  +Pl+Dial/Por:^E2I%>i2 gen_Vn          ; ! vuossiin, ei vuottiin, hirssiin
  +Pl+Dial/Jok:%>i2     gen_tten        ; !hirssitten, vuossitten
  +Pl+Dial/Var:%>i2     gen_tten        ; !hirssitten, vuossitten
  +Pl+Dial/Por:^E2I%>i2 par_V           ; ! hirssii
  +Pl+Dial/Jok:%>i2     par_A           ; ! hirsiä
  +Pl+Dial/Var:%>i2     par_A           ; ! hirsiä
  +Pl      :^HMETA    ill_hiin        ;
  +Pl      :^E2I%>i2    ess_nA          ;
  +Pl      :^E2I%>i2    com_ne          ;
  +Pl      :^E2I%>i2    sgpl_cases_even ; ! the same affix in sg and pl

  LEXICON x_12_si_var ! uusi
    +Sg      :^E2I     nom_end         ;
  !                       nomgen_px       ; ! sg nom/gen px
    +Sg      :^WG      gen_n_sg        ;
    +Sg      :^WG^UU   gen_n_sg        ;
    +Sg      :^WG^TJ   gen_n_sg        ;
    +Sg      :^EDEL    par_tA          ; ! parsg
    +Sg      :^HMETA   ill_hVVn        ;
    +Sg      :         ess_nA          ;
    
    +Sg      :^WG      sgpl_cases_even ; ! these two lexica for cases with
    +Sg      :^WG^UU   sgpl_cases_even ; ! these two lexica for cases with
    +Sg      :^WG^TJ   sgpl_cases_even ; ! these two lexica for cases with

    +Pl      :^WG      nom_t           ;
    +Pl      :^WG^UU   nom_t           ;
    +Pl      :^WG^TJ   nom_t           ;
    !+Pl+Dial/Por:%>i2     gen_Vn          ; ! vuossiin, ei vuottiin, hirssiin
    +Pl+Dial/Jok:%>i2     gen_tten        ; !hirssitten, vuossitten
    +Pl+Dial/Var:^E2I%>i2 gen_tten        ; !hirssitten, vuossitten
    !+Pl+Dial/Por:%>i2     par_V           ; ! hirssii
    +Pl+Dial/Jok:%>i2     par_A           ; ! hirsiä
    +Pl+Dial/Var:^E2I%>i2 par_A           ; ! hirsiä
    +Pl      :^HMETA   ill_hiin        ;
    +Pl      :^E2I%>i2 ess_nA          ;
    +Pl      :^E2I%>i2 com_ne          ;
    +Pl      :^E2I%>i2 sgpl_cases_even ; ! the same affix in sg and pl
    
LEXICON n_12_vuosi      !!= @CODE@ vuosi, vuona 
+N+Dial/Por:^Por     x_12_vuosi ;
+N+Dial/Var:te^Var   x_12_si_var ;
+N+Dial/Jok:^Jok     x_12_vuosi ;


LEXICON x_12_vuosi      !!= @CODE@
  +Sg      :si         nom_end         ;
  +Sg      :đe         gen_n_sg        ;
  +Sg      :t          par_tA          ; ! parsg
  +Sg      :te^HMETA   ill_hVVn        ;
  +Sg      :           ess_nA          ;
  +Sg      :te         ess_nA          ; 
  +Sg+Err/Orth:        ess_nnA         ;
  +Sg      :đe         sgpl_cases_even ; ! these two lexica for cases with

  +Pl      :đe         nom_t           ;
  +Pl      :ss%>i2  gen_Vn          ; ! vuossiin, ei vuottiin
  +Pl      :ss%>i2  par_V           ; ! vuossii
  +Pl      :s          ill_hiin        ;
  +Pl      :s%>i2      ess_nA          ;
  +Pl      :s%>i2      com_ne          ;
  +Pl      :s%>i2      sgpl_cases_even ; ! the same affix in sg and pl


LEXICON n_12_kusi        !!= @CODE@ kusi kuusi
+N         : x_12_kusi ;

LEXICON x_12_kusi        !!= @CODE@ kusi kuusi
  +Sg      :e^E2I       nom_end         ; ! ^EI e to i
  +Sg      :e^E2I       nom_R           ; ! ^EI e to i
  +Sg      :e^WG        gen_n_sg        ;
  +Sg      :e           gen_n_sg        ; ! should be ^WG?
  +Sg      :            par_tA          ; ! kuusta kusta
  +Sg      :e^HMETA     ill_hVVn        ; ! e is for vowel copying, then e:0
  +Sg      :e           ess_nA          ;
  +Sg      :e^WG        sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :e^WG        nom_t           ;
  +Pl      :             gen_ten         ; ! kusten
  +Pl+Dial/Por:s%>i2%>i     gen_n           ; !
  +Pl+Dial/Jok:e%>i2        gen_tten        ; ! lasitten
  +Pl+Dial/Var:e%>i2        gen_tten        ; ! lasitten
  +Pl+Dial/Por:s%>i2%>i     par_end         ; !
  +Pl+Dial/Jok:e%>i2%>      par_A           ; !
  +Pl+Dial/Var:e%>i2%>      par_A           ; !
  +Pl      :^EDEL       ill_hiin        ;
  +Pl      :e%>i2       ess_nA          ;
  +Pl      :e%>i2        com_ne          ; ! kanskje se
  +Pl      :e^WG%>i2     sgpl_cases_even ; !! the same affix in sg and pl



LEXICON n_12_lapsi        !!= @CODE@ lapsi la
+N         : x_12_lapsi ;

LEXICON x_12_lapsi        !!= @CODE@ lapsi la
  +Sg      :psi           nom_end         ; ! ^EI e to i
  +Sg      :psi           nom_R           ; ! ^EI e to i
  +Sg      :pse^WG        gen_n_sg        ;
  +Sg      :pse           gen_n_sg        ; ! should be ^WG?
  +Sg      :s             par_tA          ;
  +Sg      :pse^HMETA     ill_hVVn        ; ! e is for vowel copying, then e:0
  +Sg      :pse           ess_nA          ;
  +Sg      :pse^WG        sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :pse^WG        nom_t           ;
  +Pl      :s             gen_ten         ; ! lasten
  +Pl+Dial/Por:ps%>i2%>i     gen_n           ; ! lapsiin
  +Pl+Dial/Jok:ps%>i2        gen_tten        ; ! lapsitten
  +Pl+Dial/Var:ps%>i2        gen_tten        ; ! lapsitten
  +Pl+Dial/Por:ps%>i2%>i     par_end         ; ! lapsii
  +Pl+Dial/Jok:ps%>i2%>      par_A           ; ! lapsia
  +Pl+Dial/Var:ps%>i2%>      par_A           ; ! lapsia
  +Pl      :ps^EDEL       ill_hiin        ;
  +Pl      :pse%>i2       ess_nA          ;
  +Pl      :ps%>i2        com_ne          ; ! kanskje pse
  +Pl      :ps^WG%>i2     sgpl_cases_even ; !! the same affix in sg and pl


LEXICON n_12_mies        !!= @CODE@ mies mie
+N         : x_12_mies ;

LEXICON x_12_mies        !!= @CODE@ mies mie
  +Sg      :s            nom_end         ; ! ^EI e to i
  +Sg      :s            nom_R           ; ! ^EI e to i
!          +Sg:he           gen_n           ; ! TODO, remove?
  +Sg      :he^WG        gen_n_sg        ;
  +Sg      :s            par_tA          ;
  +Sg      :h^HMETA      ill_hVVn        ;
  +Sg      :he           ess_nA          ;
  +Sg      :he^WG        sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :he^WG        nom_t           ; ! TODO remove one of these
  +Pl      :he           nom_t           ; ! TODO remove one of these
  +Pl      :s            gen_ten         ;
  +Pl+Dial/Por:h%>i2%>i     gen_n           ; ! miehiin
  +Pl+Dial/Jok:h%>i2%>      gen_tten        ; ! miehitten
  +Pl+Dial/Var:h%>i2%>      gen_tten        ; ! miehitten
  +Pl+Dial/Por:h%>i2%>i     par_end         ; ! miehii
  +Pl+Dial/Jok:h%>i2%>      par_A           ; ! miehiä
  +Pl+Dial/Var:h%>i2%>      par_A           ; ! miehiä
  +Pl      :h            ill_hiin        ;
  +Pl      :he%>i2       ess_nA          ;
  +Pl      :h%>i2        com_ne          ;
  +Pl      :h^WG%>i2     sgpl_cases_even ; !! the same affix in sg and pl


LEXICON n_22 !!= @CODE@ tytär:tyttär, taival:taipal
! Encountered a problem for the dialect trigger order!
! "e:0 in consonant stems and illative plural"
! and other all rules want the order to be stem ^Var therest,
! but in _n_32 (and some other sublexica) we add an e in all
! conjjugations except in a few (sgnom, and sgpl gen, par).

! Added an e before the dialect triggers, which need to be added to the e:0 rule in twolc,
! but I think that in the longer run having a uniform structure for this will be better.

+N+Dial/Por:e^Por x_22 ;
+N+Dial/Var:e^Var x_22_Var ;
+N+Dial/Jok:e^Jok x_22 ;
+N+Sg      :^WG  nom_R      ;


! tyvenen (ja muut sg) toimii Twolc:ssä mutta ei yamleilla kun kompiloi, miks? katso e:0 twolc:ssä, lisää notes
LEXICON x_22 ! tyven
  +Sg      :^WG^E0       nom_end        ;
!  +Sg      :             gen_n_sg       ;
  +Sg      :^WG          gen_n_sg       ;
  +Sg      :^WG^E0       par_tA         ;
  +Sg      :^HMETA       ill_hVVn       ;
  +Sg      :             ess_nnA        ;
  +Sg      :             sgpl_cases_odd ;

  +Pl      :             nom_t          ;
  +Pl      :^WG          nom_t          ;
  +Pl+Dial/Por:%>i2%>i      gen_tten       ; ! tyttäriitten
  +Pl+Dial/Jok:%>i2         gen_tten       ; ! tyttäritten, mutta tyveniitten? TODO checking with Aili
  +Pl+Dial/Var:%>i2         gen_tten       ; ! tyttäritten, mutta tyveniitten? TODO checking with Aili
  +Pl+Dial/Por:%>i2         par_V          ; ! tyttärii
  +Pl+Dial/Por:%>i2%>i      par_tA         ; ! tyttäriitä
  +Pl+Dial/Jok:%>i2         par_A          ; ! tyttäriä
  +Pl+Dial/Var:%>i2         par_A          ; ! tyttäriä
  +Pl      :^HMETA       ill_hiin       ;
  +Pl      :%>i2         ess_nnA        ;
  +Pl+Dial/Por:%>i2         com_nne        ;
  +Pl+Dial/Var:%>i2         com_nne        ;
  +Pl+Dial/Jok:%>i2         com_nne        ; ! jok: tyveninne
  +Pl      :%>i2         sgpl_cases_odd ; ! hmm, tämä menee pieleen, sg ≠ pl

  LEXICON x_22_Var ! tyven
    +Sg      :^WG^E0       nom_end        ; ! tytär
    +Sg      :^WG^T0^E0    nom_end        ; ! tyär
  !  +Sg      :             gen_n_sg       ;
    +Sg      :^WG          gen_n_sg       ;
    +Sg      :^WG^E0       par_tA         ; ! tytärtä
   +Sg      :^WG^T0^E0    par_tA         ; ! tyärtä
    +Sg      :^HMETA       ill_hVVn       ;
    +Sg      :             ess_nnA        ;
    +Sg      :             sgpl_cases_odd ;

    +Pl      :             nom_t          ;
    +Pl      :^WG          nom_t          ;
    +Pl      :%>i2         gen_tten       ; ! tyttäritten, mutta tyveniitten? TODO checking with Aili
    +Pl      :%>i2         par_A          ; ! tyttäriä
    +Pl      :^HMETA       ill_hiin       ;
    +Pl      :%>i2         ess_nnA        ;
    +Pl      :%>i2         com_nne        ;
    +Pl      :%>i2         com_nne        ;
    +Pl      :%>i2         sgpl_cases_odd ; ! hmm, tämä menee pieleen, sg ≠ pl

LEXICON n_22_pl !!= @CODE@ tytär:tyttär, taival:taipal
! Encountered a problem for the dialect trigger order!
! "e:0 in consonant stems and illative plural"
! and other all rules want the order to be stem ^Var therest,
! but in _n_32 (and some other sublexica) we add an e in all
! conjjugations except in a few (sgnom, and sgpl gen, par).

! Added an e before the dialect triggers, which need to be added to the e:0 rule in twolc,
! but I think that in the longer run having a uniform structure for this will be better.

+N+Dial/Por:e^Por x_22_pl ;
+N+Dial/Var:e^Var x_22_Var_pl ;
+N+Dial/Jok:e^Jok x_22_pl ;
+N+Sg      :^WG  nom_R      ;


! tyvenen (ja muut sg) toimii Twolc:ssä mutta ei yamleilla kun kompiloi, miks? katso e:0 twolc:ssä, lisää notes
LEXICON x_22_pl ! tyven
  +Pl      :             nom_t          ;
  +Pl      :^WG          nom_t          ;
  +Pl+Dial/Por:%>i2%>i      gen_tten       ; ! tyttäriitten
  +Pl+Dial/Jok:%>i2         gen_tten       ; ! tyttäritten, mutta tyveniitten? TODO checking with Aili
  +Pl+Dial/Var:%>i2         gen_tten       ; ! tyttäritten, mutta tyveniitten? TODO checking with Aili
  +Pl+Dial/Por:%>i2         par_V          ; ! tyttärii
  +Pl+Dial/Por:%>i2%>i      par_tA         ; ! tyttäriitä
  +Pl+Dial/Jok:%>i2         par_A          ; ! tyttäriä
  +Pl+Dial/Var:%>i2         par_A          ; ! tyttäriä
  +Pl      :^HMETA       ill_hiin       ;
  +Pl      :%>i2         ess_nnA        ;
  +Pl+Dial/Por:%>i2         com_nne        ;
  +Pl+Dial/Var:%>i2         com_nne        ;
  +Pl+Dial/Jok:%>i2         com_nne        ; ! jok: tyveninne
  +Pl      :%>i2         sgpl_cases_odd ; ! hmm, tämä menee pieleen, sg ≠ pl

  LEXICON x_22_Var_pl ! tyven
    +Pl      :             nom_t          ;
    +Pl      :^WG          nom_t          ;
    +Pl      :%>i2         gen_tten       ; ! tyttäritten, mutta tyveniitten? TODO checking with Aili
    +Pl      :%>i2         par_A          ; ! tyttäriä
    +Pl      :^HMETA       ill_hiin       ;
    +Pl      :%>i2         ess_nnA        ;
    +Pl      :%>i2         com_nne        ;
    +Pl      :%>i2         com_nne        ;
    +Pl      :%>i2         sgpl_cases_odd ; ! hmm, tämä menee pieleen, sg ≠ pl

LEXICON n_22_m !!= @CODE@ elläin elläi yđin ydin
+N+Dial/Por:^Por x_22_m ;
+N+Dial/Var:^Var x_22_m ;
+N+Dial/Jok:^Jok x_22_m ;
+N+Sg      :^WGn nom_R    ;

LEXICON x_22_m !!= @CODE@
  x_22_m_sg ;
  x_22_m_pl ;

LEXICON x_22_m_sg
  +Sg      :^WGn      nom_end        ;
  +Sg      :me        gen_n_sg       ;
  +Sg      :^WG%>n    par_tA         ;
  +Sg      :me^HMETA  ill_hVVn       ;
  +Sg      :me        ess_nnA        ;
  +Sg      :me        sgpl_cases_odd ;

LEXICON n_22_m_pl !!= @CODE@
+N         : x_22_m_pl ;

LEXICON x_22_m_pl
  +Pl      :me            nom_t          ;
  +Pl+Dial/Por:m%>ii2        gen_tten       ; ! elläimiitten
  +Pl+Dial/Jok:m%>i          gen_tten       ; ! elläimitten
  +Pl+Dial/Var:m%>i          gen_tten       ; ! elläimitten
  +Pl+Dial/Por:mi%>i2        par_end        ; ! elläimii
  +Pl+Dial/Por:mi%>i2        par_tA         ; ! elläimiitä
  +Pl+Dial/Jok:mi%>          par_A          ; ! elläimiä
  +Pl+Dial/Var:mi%>          par_A          ; ! elläimiä
  +Pl      :m^HMETA       ill_hiin       ;
  +Pl      :me%>i2        ess_nnA        ;
  +Pl+Dial/Por:m%>i2         com_nne        ;
  +Pl+Dial/Var:m%>i2         com_nne        ;
  +Pl+Dial/Jok:m%>i2         com_ne         ;
  +Pl      :m%>i2         sgpl_cases_odd ; ! hmm, tämä menee pieleen, sg ≠ pl, TODO check this <-

LEXICON n_22_s !!= @CODE@  sairhaus
+N+Dial/Por:^Por    x_22_s_Por     ;
+N+Dial/Var:^Var    x_22_s_NOT_Por ;
+N+Dial/Jok:^Jok    x_22_s_NOT_Por ;

LEXICON x_22_s_Por
  +Sg      :^WGs           nom_end           ; !! * Konsonanttivartalo: poista -e ja heikko aste
  +Sg      :^WGs           nom_R             ; !! * Konsonanttivartalo: poista -e ja heikko aste

  +Pl      :đe             nom_t             ;
  +Sg      :đe             gen_n_sg          ;
  +Sg      :%>t            par_tA            ;
  +Sg      :te^HMETA       ill_hVVn          ;
  +Sg      :te             ess_nnA           ;
  +Sg      :đe             sgpl_cases_odd    ;

  +Pl      :ksi%>i2        gen_tten          ;
  +Pl      :ksi%>i2        par_end           ;
  +Pl      :ksi%>i2        par_tA            ;
  +Pl      :ks^HMETA       ill_hiin          ;
  +Pl      :ks%>i2         ess_nnA           ;
  +Pl+Dial/Por:ks%>i2         com_nne           ;
  +Pl      :ks%>i2         sgpl_cases_odd    ; ! TODO wtf is this comm --> hmm, tämä menee pieleen, sg ≠ pl

  LEXICON x_22_s_NOT_Por
    +Sg      :^WGs           nom_end           ; !! * Konsonanttivartalo: poista -e ja heikko aste
    +Sg      :^WGs           nom_R             ; !! * Konsonanttivartalo: poista -e ja heikko aste

    +Pl      :e              nom_t             ;
    +Sg      :e              gen_n_sg          ;
    +Sg      :%>t            par_tA            ;
    +Sg      :te^HMETA       ill_hVVn          ;
    +Sg      :te             ess_nnA           ;
    +Sg      :e              sgpl_cases_odd    ;

    +Pl      :ks%>i2         gen_tten          ; ! maybe add ksi and remove i2
    +Pl      :ks%>i2         par_A             ;
    +Pl      :ks^HMETA       ill_hiin          ;
    +Pl      :ks%>i2         ess_nnA           ;
    +Pl+Dial/Var:ks%>i2         com_nne           ;
    +Pl+Dial/Jok:ks%>i2         com_ne            ;
    +Pl      :ks%>i2         sgpl_cases_odd    ; ! TODO wtf is this comm --> hmm, tämä menee pieleen, sg ≠ pl


! LEXICON vanha_n_32s != @CODE@  sairhaus vanha versio
!        +N:t              long_par          ;
!        +N:te             obl_strong        ;
!        +N:te^WG          weak_v_stem       ;
!     +N+Sg:^WG            sgpl_cases_odd    ;
!     +N+Pl:^WG%>i2        sgpl_cases_odd    ;
!     +N+Pl:ks%>i2         par_V             ;
!     +N+Pl:ks%>i2         gen_Vn            ;
!     +N+Pl:ks%>i2         horterillpl      ;

!LEXICON vanha_n_32t
                           !n_32             ; ! ei tehty

!LEXICON vanha_n_33 ! ei tehty
                           !n_33s            ;

LEXICON n_22_s_even !!= @CODE@  avaruus
+N+Dial/Por:^Por    x_22_s_even_Por     ;
+N+Dial/Var:^Var    x_22_s_even_NOT_Por ;
+N+Dial/Jok:^Jok    x_22_s_even_NOT_Por ;

LEXICON x_22_s_even_Por
  +Sg      :^WGs           nom_end           ; !! * Konsonanttivartalo: poista -e ja heikko aste
  +Sg      :^WGs           nom_R             ; !! * Konsonanttivartalo: poista -e ja heikko aste

  +Pl      :đe             nom_t             ;
  +Sg      :đe             gen_n_sg          ;
  +Sg      :%>t            par_tA            ;
  +Sg      :te^HMETA       ill_hVVn          ;
  +Sg      :te             ess_nA           ;
  +Sg      :đe             sgpl_cases_even    ;

  +Pl      :ksi%>i2        gen_tten          ;
  +Pl      :ksi%>i2        par_end           ;
  +Pl      :ksi%>i2        par_tA            ;
  +Pl      :ks^HMETA       ill_hiin          ;
  +Pl      :ks%>i2         ess_nA           ;
  +Pl+Dial/Por:ks%>i2         com_ne           ;
  +Pl      :ks%>i2         sgpl_cases_even    ; 

  LEXICON x_22_s_even_NOT_Por
    +Sg      :^WGs           nom_end           ; !! * Konsonanttivartalo: poista -e ja heikko aste
    +Sg      :^WGs           nom_R             ; !! * Konsonanttivartalo: poista -e ja heikko aste

    +Pl      :e              nom_t             ;
    +Sg      :e              gen_n_sg          ;
    +Sg      :%>t            par_tA            ;
    +Sg      :te^HMETA       ill_hVVn          ;
    +Sg      :te             ess_nA           ;
    +Sg      :e              sgpl_cases_even    ;

    +Pl      :ks%>i2         gen_tten          ;
    +Pl      :ks%>i2         par_A             ;
    +Pl      :ks^HMETA       ill_hiin          ;
    +Pl      :ks%>i2         ess_nA           ;
    +Pl+Dial/Var:ks%>i2         com_ne           ;
    +Pl+Dial/Jok:ks%>i2         com_ne            ;
    +Pl      :ks%>i2         sgpl_cases_even    ; 

LEXICON n_32_as !!= @CODE@ rakas, asukas
+N         : x_32_as ;

LEXICON x_32_as
  +Sg+Nom:a^WG%>s      K                 ;
  +Sg      :a^WG%>s      par_tA            ;
  +Sg      :haa          ill_sseen         ;
!      +Pl+Ill:h%>aissiin   K                 ;
  +Sg      :h%>aa        gen_n_sg          ;
  +Sg      :h%>aa        ess_nA             ;
  +Sg      :h%>aa        sgpl_cases_even   ;

  +Pl      :h%>aa        nom_t             ;
  +Pl      :h%>a%>i2     gen_tten          ; ! asukkhaitten
  +Pl+Dial/Var:h%>a%>je     gen_n             ; ! rakkhajen
  +Pl      :h%>a%>i2     par_tA            ; ! asukkhaita
  +Pl+Dial/Var:h%>a%>j      par_A             ; ! rakkhaja
  ! +N+Pl+Ess:h%>a%>i2%>na PxxK              ;
  +Pl      :h%>ai        ill_ssiin         ;
  +Pl      :h%>aa%>i2    ess_nA             ;
  +Pl      :h%>a%>i2     com_ne            ;
  +Pl      :h%>a%>i2     sgpl_cases_even   ;

LEXICON n_32_as_pl !!= @CODE@ rakas, asukas
+N         : x_32_as_pl ;

LEXICON x_32_as_pl
  +Pl      :h%>aa        nom_t             ;
  +Pl      :h%>a%>i2     gen_tten          ; ! asukkhaitten
  +Pl+Dial/Var:h%>a%>je     gen_n             ; ! rakkhajen
  +Pl      :h%>a%>i2     par_tA            ; ! asukkhaita
  +Pl+Dial/Var:h%>a%>j      par_A             ; ! rakkhaja
  ! +N+Pl+Ess:h%>a%>i2%>na PxxK              ;
  +Pl      :h%>ai        ill_ssiin         ;
  +Pl      :h%>aa%>i2    ess_nA             ;
  +Pl      :h%>a%>i2     com_ne            ;
  +Pl      :h%>a%>i2     sgpl_cases_even   ;

!LEXICON vanha_n_33aes
!        +N:             vanha_x_33aes           ;

LEXICON n_32_aes
+N         : x_32_aes ;

LEXICON x_32_aes
  +Sg+Nom:ä^WG%>s      K                 ;
  +Sg      :ä^WG%>s      par_tA            ;
  +Sg      :h%>ää        gen_n_sg          ;
  +Sg      :hää          ill_sseen         ;
  +Sg      :h%>ää        ess_nA            ;
  +Sg      :h%>ää        sgpl_cases_even   ;
    !    +Pl+Ill:h%>äissiin   K                 ;

  +Pl      :h%>ää        nom_t             ;
  +Pl      :h%>ä%>i2     gen_tten          ;
  +Pl      :h%>ä%>i2     par_tA            ;
  +Pl+Dial/Var:hä%>je       gen_n             ; ! sinnikkhäjen
  +Pl+Dial/Var:hä%>j        par_A             ; ! sinnikkhäjä
  +Pl      :h%>äi        ill_ssiin         ;
  +Pl      :h%>ä%>i2     ess_nA            ;
  +Pl      :h%>ää%>i2    ess_nA            ; ! TODO choose one
  +Pl      :h%>ä%>i2     com_ne            ;
  +Pl      :h%>ä%>i2     sgpl_cases_even   ;

LEXICON n_32_ae !!= @CODE@ kevät
+N         : x_32_ae ;

LEXICON x_32_ae
  +Sg+Nom  :ä^WG%>t      K                 ;
  +Sg+Nom  :ä^WG         K                 ;
  +Sg      :ä^WG%>t      par_tA            ;
  +Sg      :h%>ää        gen_n_sg          ;
  +Sg      :hää          ill_sseen         ;
  +Sg      :h%>ää        ess_nA            ;
  +Sg      :h%>ää        sgpl_cases_even   ;

  +Pl      :h%>ää        nom_t             ;
  +Pl      :h%>ä%>i2     gen_tten          ;
  +Pl      :h%>ä%>i2     par_tA            ;
  +Pl      :h%>äi        ill_ssiin         ;
  +Pl      :h%>ä%>i2     ess_nA            ;
  +Pl      :h%>ä%>i2     com_ne            ;
  +Pl      :h%>ä%>i2     sgpl_cases_even   ;

!LEXICON vanha_n_33ys !!= @CODE@ rakas
!        +N:        vanha_x_33ys ;
! +N+Sg+Nom:%>y^WGs R      ;



LEXICON n_32_is !!= @CODE@ ruvis, ruumis
+N+Dial/Por:^Por x_32_is ;
+N+Dial/Var:^Var x_32_is ;
+N+Dial/Jok:^Jok x_32_is ;

LEXICON x_32_is ! kaunis
  +Sg      :i^WG%>s   nom_end         ;
  +Sg      :hii       gen_n_sg        ;
  +Sg      :i^WG%>s   par_tA          ;
  +Sg      :%>hii     ill_sseen       ;
  +Sg      :hii       ess_nA          ;
  +Sg      :hii       sgpl_cases_even ;

  +Pl      :hii       nom_t           ;
  +Pl      :hii       gen_tten        ; ! rukkhiitten
  +Pl+Dial/Var:hi%>je    gen_n           ; ! rukhijen
  +Pl      :hii       par_tA          ; ! rukkhiita
  +Pl+Dial/Var:hi%>j     par_A           ; ! rukhija
  +Pl      :hii       ill_ssiin       ;
  +Pl      :%>hii     ess_nA          ;
  +Pl      :h%>i2i    com_ne          ;
  +Pl      :h%>ii     sgpl_cases_even ;

!LEXICON vanha_n_33  !!= @CODE@ odottaessa viitataan n_33t-hen
!  n_33t ;

LEXICON n_32_et !!= @CODE@ venet, hyljet, huonet
+N         :   x_32_et ;

LEXICON x_32_et
  +Sg+Dial/Var+Nom:e^WG     K              ;
  +Sg+Dial/-Var:e^WG        nom_t          ;
  +Sg      :e^WG%>t     par_tA         ;

  +Pl+Dial/Var:he%>je      gen_n          ; ! venhejen
  +Pl+Dial/Var:he%>j       par_A          ; ! venhejä
  +Pl      :hee%>i2     com_ne         ;

           :hee         x_32_et_ts_common ;

LEXICON n_32_et_pl !!= @CODE@ venet, hyljet, huonet
+N         :   x_32_et_pl ;

LEXICON x_32_et_pl
  +Pl+Dial/Var:he%>je      gen_n          ; ! venhejen
  +Pl+Dial/Var:he%>j       par_A          ; ! venhejä
  +Pl      :hee%>i2     com_ne         ;

           :hee         x_32_et_ts_common_pl ;

LEXICON n_32_et_2 !!= @CODE@ askel, kyynel, kannel
+N         :   x_32_et2 ;

LEXICON x_32_et2
  +Sg+Dial/Var+Nom:e^WG     K              ;
  +Sg+Dial/-Var:e^WG        nom_t          ;
  +Sg+Nom  :^WG             K              ; ! askel
  +Sg      :e^WG%>t        par_tA         ; ! askeletta
  +Sg      :^WG^E0         par_tA         ; ! askelta

  +Pl+Dial/Var:he%>je      gen_n          ;
  +Pl+Dial/Var:he%>j       par_A          ;
  +Pl      :hee%>i2     com_ne         ;

           :hee         x_32_et_ts_common ;

LEXICON n_32_ut !!= @CODE@ vantut:vantutta:vantthuut
+N         :   x_32_ut ;

LEXICON x_32_ut
  +Sg+Dial/Var+Nom:u^WG     K              ;
  +Sg+Dial/-Var:u^WG        nom_t          ;
  +Sg      :u^WG%>t     par_tA         ;

  +Pl+Dial/Var:hu%>je      gen_n          ; 
  +Pl+Dial/Var:hu%>j       par_A          ;

           :thuu         x_32_et_ts_common ;

LEXICON n_32_ut_pl !!= @CODE@ vantthuut
+N         :   x_32_ut_pl ;

LEXICON x_32_ut_pl
  +Sg+Dial/Var+Nom:u^WG     K              ;
  +Sg+Dial/-Var:u^WG        nom_t          ;
  +Sg      :u^WG%>t     par_tA         ;

  +Pl+Dial/Var:hu%>je      gen_n          ; 
  +Pl+Dial/Var:hu%>j       par_A          ;

           :thuu         x_32_et_ts_common_pl ;

LEXICON n_32_ts !!= @CODE@ kirves
+N         :   x_32_ts ;
+N+Sg      :es nom_R      ;

LEXICON x_32_ts !!= @CODE@ kirves
  +Sg:es          nom_end              ;
  +Pl+Dial/Jok:he%>je      gen_n          ; ! Kirvhejen
  +Pl+Dial/Jok:he%>j       par_A          ; ! Kirvhejä
  +Pl+Dial/Var:he%>je      gen_n          ; ! Kirvhejen
  +Pl+Dial/Var:he%>j       par_A          ; ! Kirvhejä
  +Sg      :es          par_tA         ;
  +Pl      :hee%>i2     com_ne         ;

           :hee         x_32_et_ts_common ;
             !      +Pl+Gen:hee%>i2     gen_tten       ; ! Can this be commented out? yes, is in the common

LEXICON x_32_et_ts_common
  +Sg      :         gen_n_sg        ;
  +Sg      :         ill_sseen       ;
  +Sg      :         ess_nA          ;
  +Sg      :         sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :         nom_t           ;
  +Pl      :%>i2     gen_tten        ;
  +Pl      :%>i2     par_tA          ;
  +Pl      :%>i2     ill_ssiin       ;
  +Pl      :%>i2     ess_nA          ;
  +Pl      :%>i2     com_ne          ;
  +Pl      :%>i2     sgpl_cases_even ; !! the same affix in sg and pl -- tsekkaa long
      ! +Pl+Ill:heissiin K               ;

LEXICON x_32_et_ts_common_pl
  +Pl      :         nom_t           ;
  +Pl      :%>i2     gen_tten        ;
  +Pl      :%>i2     par_tA          ;
  +Pl      :%>i2     ill_ssiin       ;
  +Pl      :%>i2     ess_nA          ;
  +Pl      :%>i2     com_ne          ;
  +Pl      :%>i2     sgpl_cases_even ; !! the same affix in sg and pl -- tsekkaa long
      ! +Pl+Ill:heissiin K               ;


LEXICON n_22_excns !!= * @CODE@ = veres (keskus)
+N         :           x_22_excns     ;
+N+Sg      :s          nom_R          ;
!+N+Sg      :kse        gen_n_sg       ;

LEXICON x_22_excns
  +Sg      :^WG%>s     nom_end        ;
  +Sg      :kse        gen_n_sg       ;
  +Sg      :%>s        par_tA         ;
  +Sg      :ks         ill_heen       ;
!  +Sg      :ks         ill_hVVn       ;
!  +Sg+Ill:ksheen K              ; ! +Pl+Ill:ksh%>i2in K; ! TODO TODO TODO
  +Sg      :kse        ess_nnA        ;
  +Sg      :kse        sgpl_cases_odd ; ! these two lexica for cases with
  +Pl      :kse        nom_t          ;
  +Pl      :%>s        gen_ten        ; ! veresten
  +Pl+Dial/Jok:ks%>i2     gen_tten       ; ! vereksitten
  +Pl+Dial/Var:ks%>i2     gen_tten       ; ! vereksitten
  +Pl+Dial/Por:ks%>i2     par_V          ; ! vereksii
  +Pl+Dial/Por:ks%>i2i    par_tA         ; ! vereksiitä
  +Pl+Dial/Jok:ks%>i2     par_A          ; ! vereksiä
  +Pl+Dial/Var:ks%>i2     par_A          ; ! vereksiä
  +Pl      :ks         ill_hiin       ; ! ei ^HMETA? tai edel tai mitään?
  +Pl      :kse%>i2    ess_nnA        ;
  +Pl+Dial/Por:kse%>i2    com_nne        ;
  +Pl+Dial/Var:kse%>i2    com_nne        ;
  +Pl+Dial/Jok:kse%>i2    com_ne         ;
  +Pl      :kse%>i2    sgpl_cases_odd ; ! the same affix in sg and pl -- tsekkaa long
 ! +Pl+Par:%>ksii     K              ;
 
 !LEXICON vanha_s_kse
! +N:^WG # ;
LEXICON n_22_excns_pl !!= * @CODE@ = veljekset
+N         :           x_22_excns_pl          ;

LEXICON x_22_excns_pl !!= * @CODE@ = veljekset

  +Pl      :kse        nom_t           ;
  +Pl      :%>s        gen_ten         ; ! veljesten
  +Pl+Dial/Jok:ks%>i2     gen_tten        ; ! veljeksitten
  +Pl+Dial/Var:ks%>i2     gen_tten        ; ! veljeksitten
  +Pl+Dial/Por:ks%>i2     par_V           ; ! veljeksii
  +Pl+Dial/Por:ks%>i2i    par_tA          ; ! veljeksiitä
  +Pl+Dial/Jok:ks%>i2     par_A           ; ! veljeksiä
  +Pl+Dial/Var:ks%>i2     par_A           ; ! veljeksiä
!      +Pl+Ill:ksh%>i2in  K               ;
  +Pl      :ks         ill_hiin        ;
  +Pl      :kse%>i2    ess_nnA         ; ! veljeksinnä
  +Pl      :ks%>i2     com_nne         ; ! veljeksine
  +Pl      :kse%>i2    sgpl_cases_odd  ; !! the same affix in sg and pl -- tsekkaa long
  !    +Pl+Par:%>ksii     K               ;

 
 LEXICON n_22_excns_even !!= * @CODE@ = (kuttumus)
+N         :           x_22_excns_even     ;
+N+Sg      :s          nom_R          ;
!+N+Sg      :kse        gen_n_sg       ;

LEXICON x_22_excns_even
  +Sg      :^WG%>s     nom_end        ;
  +Sg      :kse        gen_n_sg       ;
  +Sg      :%>s        par_tA         ;
  +Sg      :ks         ill_heen       ;
!  +Sg      :ks         ill_hVVn       ;
!  +Sg+Ill:ksheen K              ; ! +Pl+Ill:ksh%>i2in K; ! TODO TODO TODO
  +Sg      :kse        ess_nA        ;
  +Sg      :kse        sgpl_cases_even ; ! these two lexica for cases with

  +Pl      :kse        nom_t          ;
  +Pl      :%>s        gen_ten        ; ! kuttumusten
  +Pl+Dial/Jok:ks%>i2     gen_tten       ; ! kuttumuksitten
  +Pl+Dial/Var:ks%>i2     gen_tten       ; ! kuttumuksitten
  +Pl+Dial/Por:ks%>i2     par_V          ; ! kuttumuksii
  +Pl+Dial/Por:ks%>i2i    par_tA         ; ! kuttumuksiita
  +Pl+Dial/Jok:ks%>i2     par_A          ; ! kuttumuksia
  +Pl+Dial/Var:ks%>i2     par_A          ; ! kuttumuksia
  +Pl      :ks         ill_hiin       ; ! ei ^HMETA? tai edel tai mitään?
  +Pl      :kse%>i2    ess_nA        ;
  +Pl+Dial/Por:kse%>i2    com_ne        ;
  +Pl+Dial/Var:kse%>i2    com_ne        ;
  +Pl+Dial/Jok:kse%>i2    com_ne         ;
  +Pl      :kse%>i2    sgpl_cases_even ; ! the same affix in sg and pl -- tsekkaa long
 ! +Pl+Par:%>ksii     K              ;


 LEXICON n_22_excns_even_pl !!= * @CODE@ = (ystävykset)
+N         :           x_22_excns_even_pl     ;

LEXICON x_22_excns_even_pl

  +Pl      :kse        nom_t          ;
  +Pl      :%>s        gen_ten        ; ! ystävysten
  +Pl+Dial/Jok:ks%>i2     gen_tten       ; ! ystävyksitten
  +Pl+Dial/Var:ks%>i2     gen_tten       ; ! ystävyksitten
  +Pl+Dial/Por:ks%>i2     par_V          ; ! ystävyksii
  +Pl+Dial/Por:ks%>i2i    par_tA         ; ! ystävyksiita
  +Pl+Dial/Jok:ks%>i2     par_A          ; ! ystävyksiä
  +Pl+Dial/Var:ks%>i2     par_A          ; ! ystävyksiä
  +Pl      :ks         ill_hiin       ; ! ei ^HMETA? tai edel tai mitään?
  +Pl      :kse%>i2    ess_nA        ;
  +Pl+Dial/Por:kse%>i2    com_ne        ;
  +Pl+Dial/Var:kse%>i2    com_ne        ;
  +Pl+Dial/Jok:kse%>i2    com_ne         ;
  +Pl      :kse%>i2    sgpl_cases_even ; ! the same affix in sg and pl -- tsekkaa long
 ! +Pl+Par:%>ksii     K              ;



!LEXICON vanha_et_he
!        +N:^WG        #               ;

!LEXICON vanha_n_42 ! itse asiassa n_42even
!     +N+Sg:se         sgpl_cases_even ; !! these two lexica for cases with
!     +N+Pl:s%>i2      sgpl_cases_even ; !! the same affix in sg and pl
!        +N:           nen             ;
! +N+Pl+Com:s%>i2%>ne  K               ;

LEXICON n_22_inen ! nainen, kainulainen
+N         :  x_22_inen ;
+N+Sg      :s nom_R      ;


LEXICON x_22_inen ! varovainen
  +Sg      :ne        nom_n           ;
  +Sg      :se        gen_n_sg        ;
  +Sg      :s         par_tA          ;
  +Sg      :se^HMETA  ill_hVVn        ;
  +Sg      :se        ess_nA          ;
  +Sg      :se        sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :se        nom_t           ;
  +Pl      :s         gen_ten         ; ! kainulaisten
  +Pl+Dial/Por:ss%>i2i   par_end         ; ! kainulaissii
  +Pl+Dial/Por:ss%>i2i   par_tA          ; ! kainulaissiita, naissiita
  +Pl+Dial/Jok:s%>i2     par_A           ; ! kainulaisia
  +Pl+Dial/Var:s%>i2     par_A           ; ! kainulaisia
  +Pl      :s         ill_hiin        ; ! NB testing, used to be next line: UNDOMMENT
!          +Pl:sh%>i2    horterillpl    ;
  +Pl      :se%>i2    ess_nA          ; ! naisina
  +Pl      :s%>i2     com_ne          ;
  +Pl      :s%>i2     sgpl_cases_even ; !! the same affix in sg and pl

LEXICON n_22_inen_odd !!= @CODE@ ihminen
+N         :  x_22_inen_odd ;
+N+Sg      :s nom_R         ; ! ihmiskala

LEXICON x_22_inen_odd
  +Sg      :nen       nom_end        ;
  +Sg      :se        gen_n_sg       ;
  +Sg      :s         par_tA         ;
  +Sg      :se^HMETA  ill_hVVn       ;
  +Sg      :se        ess_nnA        ;
  +Sg      :se        sgpl_cases_odd ; !! these two lexica for cases with

  +Pl      :se        nom_t          ;
  +Pl      :s         gen_ten        ;
  +Pl+Dial/Por:ss%>i2i   par_end        ; ! ihmissii
  +Pl+Dial/Por:ss%>i2i   par_tA         ; ! ihmissiitä
  +Pl+Dial/Jok:s%>i2     par_A          ; ! ihmisiä
  +Pl+Dial/Var:s%>i2     par_A          ; ! ihmisiä
  +Pl      :s         ill_hiin       ; ! ihmishiin
  +Pl      :s%>i2     ess_nnA        ; !
  +Pl+Dial/Por:s%>i2     com_nne        ;
  +Pl+Dial/Jok:s%>i2     com_nne        ;
  +Pl+Dial/Var:s%>i2     com_nne        ;
  +Pl      :s%>i2     sgpl_cases_odd ; !! the same affix in sg and pl

LEXICON n_22_inen_pl ! !!= @CODE@ tervheiset tervhei
+N+Pl      :%>se       nom_t          ;
+N+Pl      :s          gen_ten        ;
+N+Pl+Dial/Por:ss%>i2     par_V          ; ! tervhehissii
+N+Pl+Dial/Por:ss%>i2i    par_tA         ; ! tervhehissiitä
+N+Pl+Dial/Jok:s%>i2      par_A          ; ! tervhehisiä
+N+Pl+Dial/Var:s%>i2      par_A          ; ! tervhehisiä
!      +N+Pl+Ill:sh%>i2in   K              ;
+N+Pl      :s          ill_hiin       ;
+N+Pl      :se%>i2     ess_nnA        ;
+N+Pl      :s%>i2      com_nne        ; ! TODO onko tässä kaksi nn:ää?
+N+Pl      :s%>i2      sgpl_cases_odd ; !! the same affix in sg and pl

LEXICON n_22_inen_pl_even ! !!= @CODE@ olympialaiset
+N+Pl      :%>se       nom_t          ;
+N+Pl      :s          gen_ten        ;
+N+Pl+Dial/Por:ss%>i2     par_V          ; ! tervhehissii
+N+Pl+Dial/Por:ss%>i2i    par_tA         ; ! tervhehissiitä
+N+Pl+Dial/Jok:s%>i2      par_A          ; ! tervhehisiä
+N+Pl+Dial/Var:s%>i2      par_A          ; ! tervhehisiä
!      +N+Pl+Ill:sh%>i2in   K              ;
+N+Pl      :s          ill_hiin       ;
+N+Pl      :se%>i2     ess_nA        ;
+N+Pl      :s%>i2      com_ne        ; ! TODO onko tässä kaksi nn:ää?
+N+Pl      :s%>i2      sgpl_cases_even ; !! the same affix in sg and pl

LEXICON n_32_nu !  !!= @CODE@ oppinu
+N+Sg       : nom_u ;
+N: PRFPRC_OBL ;


LEXICON n_11_laissa !  !!= @CODE@ laki-laissa
+N+Sg+Nom:laki K ;
+N+Sg+Gen:lain K ;
+N+Sg+Par:lakkii K ;
+N+Sg+Tra:laiksi K ;
+N+Sg+Abe:laitta K ;
+N+Sg+Ine:laissa K ;
+N+Sg+Ela:laista K ;
+N+Sg+Ill:lakhiin K ;
+N+Sg+Ade:laila K ;
+N+Sg+Abl:lailta K ;
+N+Sg+All:laile K ;
+N+Sg+Ess:lakina K ;
+N+Pl+Nom:lait K ;
+N+Pl+Gen:lakkiin K ;
+N+Pl+Par:lakkii K ;
+N+Pl+Tra:laiiksi K ;
+N+Pl+Abe:laiitta K ;
+N+Pl+Ine:laiissa K ;
+N+Pl+Ela:laiista K ;
+N+Pl+Ill:lakhiin K ;
+N+Pl+Ade:laiila K ;
+N+Pl+Abl:laiilta K ;
+N+Pl+All:laiile K ;
+N+Pl+Ess:lakiina K ;
+N+Pl+Com:lakiine K ;

!LEXICON vanha_nen  !!= @CODE@ on nainen-sanoille
!  nen_sg ;
!  nen_pl ;

!LEXICON nen_sg
!             +N:     nom-nen        ;
!!            +N:se   nomgen_px      ;
!            +Sg:se     ess_nA        ;
!            +Pl:se%>i2 ess_nA        ;

!! make+N+Pl+kom:sine K              ;
!             +N:se   weak_v_stem ;
!          +N+Sg:s    par_tA         ;
!             +N:se   2AVU_V_ill_sg ;
!
!LEXICON nen_pl
!        +N:se        weak_v_stem ;
! +N+Pl+Ill:sh%>i2in  K              ;
!     +N+Pl:s         gen_ten        ;
!     +N+Pl:ss%>i2i   par_end        ;
!     +N+Pl:sh%>i2    horterillpl   ;
! +N+Pl+Com:s%>i2     com_ne         ;


!LEXICON nom-nen
! +Sg+Nom:nen K ;


!LEXICON loput
!                 obl_strong_odd ; ! muut vahvat
!                 weak_v_stem    ;
!        +Sg:     sgpl_cases_odd ; !! these two lexica for cases with
!        +Pl:%>i2 sgpl_cases_odd ; !! the same affix in sg and pl -- tsekkaa long
!        +Pl:%>i2 gen_ten        ;
! +Pl+Use/NG:%>i2 gen_tten       ;
!        +Pl:%>i2 par_V          ;



!! Basic paradigms
!  ===================


!LEXICON weak_v_stem !!= @CODE@ This bs is gonna get deleted. Replase the genetives with gen_n and just add the nom,
! +Sg: gen_n_sg ;
! +Pl: nom_t    ;


!! ### Sublexica for the basic unified cases, with even and odd variations
! ----------------------------------------------------------------------

LEXICON sgpl_cases_even !
           +Ade:%>l^A  PxxK              ; ! Lyhyt perusmuoto vuođela
           +All:%>le   PxxK              ; ! Lyhyt perusmuoto
  +Dial/Jok+All:%>let  K                 ; ! pienelet
           +Ade+Err/Orth:%>ll^A  PxxK    ; ! Pitkä perusmuoto väärin
           +All+Err/Orth:%>lle   PxxK    ; ! Pitkä perusmuoto väärin
  +Dial/Jok+All+Err/Orth:%>llet  K       ; ! Pitkä perusmuoto väärin

                       sgpl_cases_common ;

LEXICON sgpl_cases_odd !
           +Ade:%>ll^A PxxK              ; ! Pitkä perusmuoto
           +All:%>lle  PxxK              ; ! Pitkä perusmuoto
  +Dial/Jok+All:%>llet K                 ; ! pieniimillet
           +Ade+Err/Orth:%>l^A  PxxK     ; ! Lyhyt perusmuoto väärin
           +All+Err/Orth:%>le   PxxK     ; ! Lyhyt perusmuoto väärin
  +Dial/Jok+All+Err/Orth:%>let  K        ; ! Lyhyt perusmuoto väärin
                       sgpl_cases_common ;

LEXICON sgpl_cases_even_Por !
           +Ade:%>l^A  PxxK              ; 
           +All:%>le   PxxK              ; 
           +Ade+Err/Orth:%>ll^A  PxxK    ; 
           +All+Err/Orth:%>lle   PxxK    ; 

                       sgpl_cases_common ;

!LEXICON sgpl_cases_odd_Por !
!           +Ade:%>ll^A PxxK              ; 
!           +All:%>lle  PxxK              ; 
!           +Ade+Err/Orth:%>l^A  PxxK     ; 
!           +All+Err/Orth:%>le   PxxK     ; 
!                       sgpl_cases_common ;


LEXICON sgpl_cases_common
           +Abl:%>lt^A PxxK ;
           +Ine:%>ss^A PxxK ;
           +Ela:%>st^A PxxK ;
           +Tra:%>ksi  K    ; ! +Tra:%>kse  Pxx  ;
           +Abe:%>tt^A PxxK ;



!! ### Sublexica for Gen, Par, Ill, Ess and Com.
! ---------------------------------------------------------------------


LEXICON nom_end
 +Nom: K ; ! Why not PxxK ?

LEXICON nom_R
 +Nom: R ;

LEXICON nom_t
 +Nom:%>t K ; ! Why not PxxK ?

LEXICON nom_n
 +Nom:%>n K ; ! Why not PxxK ?

LEXICON nom_u
 +Nom:u K ;

LEXICON nom_nu ! LEXICON a_32_nnu ravistunnu:ravistun
 +Nom:nu K ;

LEXICON nom_lu
 +Nom:lu K ;

LEXICON nom_y
 +Nom:y K ;

LEXICON nom_ny
 +Nom:ny K ;

LEXICON nom_ly
 +Nom:ly K ;

LEXICON gen_n_sg ! Only with sg and general separate, because of R! This is exception!
  gen_n         ; ! why not go from R -> K, then we don't have to write twice
 +Gen:%>n R     ; ! This (R) is for compound words, that's why sg is by itself

LEXICON gen_n
 +Gen:%> n_PxK ;

LEXICON gen_Vn
 +Gen:%>^V n_PxK ;

LEXICON gen_in
 +Gen:%>i n_PxK ;

LEXICON gen_tten  ! vereksitten
 +Gen:%>tte n_PxK ;

LEXICON gen_ten  ! veljesten
 +Gen:%>te n_PxK ;



LEXICON par_A
 +Par:%>^A PxxK ;

LEXICON par_V
 +Par         :%>^V PxxK ;
 +Par+Err/Orth:%>^A PxxK ;

LEXICON par_tA ! pitäiskö olla omat tt^A ja st^A ? Mange Sg er slik
 +Par:%>t^A PxxK ;

LEXICON par_end
 +Par: PxxK ;


 ! <-------------- Singulaarit

LEXICON ill_hVn ! NB Used 1 ONCE, only: 1.  hVn > maahan
 +Ill:%>h^V      n_PxK ; !  +Sg +Ill:%>h^V n_PxK ;
 +Ill+Err/Orth:%>h^A^A n_PxK ;

LEXICON ill_hVVn !  2.  hVVn > tunturhiin | sykshyyn, linnhaan | linna pl.ill. 2 muotoa po. linnhoin,
+Ill:%>h^V^V    n_PxK ; ! TODO add Twolc description about HMETA   ! 2.  hVVn > tunturhiin

LEXICON ill_heen !  for s : ksheen (only n_22_excns)
+Ill:%>hee    n_PxK ; ! TODO add Twolc description about HMETA   ! 2.  hVVn > tunturhiin
! halutaan heen eikä hVVn koska sanassa välttämättä ei ole e:tä! Vastaus --> vastauksheen
! Vartalo on silloin vastau, eikä vastaukse, koska jos ois vastaukse, niin pitäisi
! poistaa tosi monta merkkiät (kirjainta). Useimmiten toimitaan toisin, mutta tässä
! tilanteessa työlästä laatia hmeta (metateesi, eli kirjainpaikanvaihto). Ja tässä
! tilanteessa nämä sanat ovat jo rajoitettu LEXC:ssä! Jee!

LEXICON ill_sseen !  3.  sseen > rukhiisseen, kuninkhaa>sseen, previously mTAVU_VV-ill
 +Ill:%>ssee     n_PxK ;

LEXICON ill_hAAn
 +Ill:%>h^A^A    n_PxK ; ! Found often in sg adjectives


! <--------------- Pluralit

LEXICON ill_hin ! NB Used 1 ONCE, only: 4.  hin > maihin
 +Ill:%>hi       n_PxK ;

LEXICON ill_hVin !  5.  hVin > tunturhiin (ja sivakkhoin), ehkä pitäis pl:ssä olla i2 jos yhteiset sg & pl
 +Ill:%>h^V%>i2     n_PxK ; ! > for twolc. Find good exlanation TODO fix this on twolc.
! +Ill:h%>i2%>i2     n_PxK ; ! on Sg:ssä hVVn
! TODO What about this i2>i2thing? ugly, but works on some things, should it be merged with ^V &/or hiin?

LEXICON ill_höin !
 +Ill:%>hö%>i2     n_PxK ; ! kynttilä - kynttilhöin. Hattu-V ei toimi ö:n kanssa tässä jostain syystä.

LEXICON ill_ssiin !  6.  ssiin > rukhiissiin, syksyissii
 +Ill:%>ssii     n_PxK ;!      säänön mukhaan hVn (maahan) saa -hin monikossa (maihin)

LEXICON ill_hiin ! NB USED 5 TIMES, always pl & either ^HMETAh%>i2i or ^HMETA%>hii
 +Ill:%>hii%> n_PxK ; ! gives twolc errors if i2 and if h before >
! used to be in ihminen: shi2%>i2n, which is seen in hVin too.




LEXICON ess_nA
 +Ess:%>n^A PxxK ;

LEXICON ess_nnA
 +Ess:%>nn^A PxxK ; ! Ess aina Eiran gramatiikin mukaan lyhytmuoto, Mutta Eira s. 38 kaupunkinna, tyttärennä



LEXICON com_ne
 +Com:%>ne PxxK ; ! Note that adjectives have -ine without Px, though Px doesn't do anything atm

LEXICON com_nne
 +Com:%>nne PxxK ;
! ess, ade ja all oon aina kaksi n-/r-/l-/m-, jos oon 3/5/7 lyhyttä tavvuu ennen suffiksi
! Puhuin Eiran ja Mikon kanssa, ja het sanothaan, ette loogisesti oon näin kans komitatiivissa
! Eli on "tervheisinne" ja "veljeksinne" komitatiivissa


 !LEXICON longgenpl
 ! ! d_longgenpl ;   oletetaan, että -tten vaan
 !  gen_tten     ;

 !LEXICON d_longgenpl
 ! +Gen:%>de n_PxK ;


!LEXICON longillpl
! +Ill: n_PxK ; ! En tiedä, toimiiko tämä

 !LEXICON h_shortillpl
 ! +Ill:^EDEL%>hii n_PxK ;

!LEXICON longerillpl
! +Pl+Ill:%>s^V^V n_PxK ;













!! ### Sublexica for possessive suffixes
! ---------------------------------

!! Px is now not in use, with one exception, comitative.

LEXICON n_PxK  !!= @CODE@ has either -n or goes to Px
  :n K  ;
    Px ;

LEXICON i_PxK  !!= @CODE@ Tra: -i or -e and goes to Px
  :i K  ;
 :e Px ;

LEXICON PxK !!= @CODE@ has only -nsA, and is currently not in use. Check
     K  ;
  Px ;

LEXICON PxxK  !!= @CODE@ has also -Vn, thus both .. llensa and ..lleen.
     K  ;
  Px    ;
  Px-Vn ;

!LEXICON Pxx
!  Px    ;
!  Px-Vn ;

LEXICON Px
 +PxSg1:%>ni   K "weight: 5.5" ;
 +PxSg2:%>sti  K "weight: 5.5" ; 
 +PxSg3:%>ns^A K "weight: 5.5" ;
 +PxPl1:%>mm^A K "weight: 5.5" ; ! NB! m^A ei hoidettu
 +PxPl2:%>nn^A K "weight: 5.5" ; ! NB! n^A ei hoidettu
 +PxPl3:%>ns^A K "weight: 5.5" ;
!
!
LEXICON Px-Vn
 +PxSg3:%>^Vn K  "weight: 5.5" ;
 +PxPl3:%>^Vn K  "weight: 5.5" ;
 
 !!!Closed parts of speech     !Testi                                                                                                                                        

!! Tästä tiedostosta löytyvät suljetut sanaluokat.                                                                                                                       

!LEXICON Particle
!! @LEXNAME@ leksikossa on vain kuusi sanaa                                                                                                                              

!tahansa pcle ;
!eri pcle ;































 !!! -------- Graveyard





 !! Basic paradigms
 !  ===================

 !! ## Basic vowel stems
 !  --------------------

! LEXICON nom_strong
!  +Sg+Nom: K ;

 !LEXICON strong_v_stem_even  !!= @CODE@ ''Kaikki vahvan asteen sijamuodot tähän''
 !  short_par       ;
 !    +Pl:%>i2 com_ne    ;
 !    +Sg:         ess_nA          ;
 !    +Pl:%>i2     ess_nA          ;
 ! TODO fix this mess

 !LEXICON strong_v_stem_odd  !!= @CODE@ ''Kaikki vahvan asteen sijamuodot tähän''
 !  short_par      ;
 !  obl_strong_odd ;




 !! ### Sublexica for the vowel stems
 !  - - - - - - - - - - - - - - -

 ! +Pl+Ins:%>i2%>n K ; !! Eira doesn't use this.



 !LEXICON obl_strong_even
 !          nomgen_px ;
 !  +Pl:%>i2 com_ne    ;
 !  +Sg:         ess_nA          ;
 !  +Pl:%>i2     ess_nA          ;

 !LEXICON obl_strong_odd
 !              nomgen_px ;
 !      +Pl:%>i2 com_ne    ;
 !      +Sg:         ess_nnA          ;
 !      +Pl:%>i2     ess_nnA          ;

 ! LEXICON nomgen_px
 ! +Sg+Nom:     Px        ; ! mattoni
 ! +Sg+Gen:     Px        ; ! mattoni
 ! +Pl+Nom:     Px        ; ! mattoni



 ! Random

! LEXICON sConsCase
!  +Sg+Nom:^WG%>s K ;
!  +Sg+Par:%>st^A K ; ! Par
!  +Pl+Gen:%>sten K ; ! Gen


! LEXICON vanha_x_21_oblique ! this is also called from affixes/propernouns ! puku - puvuissa
!  +Sg+Dial/Por:^WG              gen_n_sg        ;
!  +Sg+Dial/Por:                 par_V           ;
!  +Sg+Dial/Por:^HMETA           ill_hVVn        ;
!  +Sg+Dial/Por:                 ess_nA          ;
!  +Sg+Dial/Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

!  +Pl+Dial/Por:^WG              nom_t           ;
!  +Pl+Dial/Por:^AO%>i2          gen_n           ; ! gen_n         since we have the i
!  +Pl+Dial/Por:^AO%>i2          par_end         ;
!  +Pl+Dial/Por:^AO^HMETA        ill_hVin        ; ! sykshyin
!  +Pl+Dial/Por:^AO%>i2          ess_nA          ;
!  +Pl+Dial/Por:^AO%>i2          com_ne          ;
!  +Pl+Dial/Por:^WG^AO%>i2       sgpl_cases_even ; !the same affix in sg and pl

!  +Sg+Dial/-Por:^WG              gen_n_sg        ;
!  +Sg+Dial/-Por:                 par_A           ;! in var should be poikaa with one k, kk:k luultavasti (error with ^A only?) ! ^WG gives aiaa
!  +Sg+Dial/-Por:^HMETA           ill_hVVn        ;
!  +Sg+Dial/-Por:                 ess_nA          ;
!  +Sg+Dial/-Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

!  +Pl+Dial/-Por:^WG              nom_t           ;
!  +Pl+Dial/-Por:^WG^AO^I0%>i2    gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
!   +Pl+Dial/Var:^AO%>j           par_A           ; ! Use i:j in twolc j, see below
!  +Pl+Dial/-Por:^AO^I0%>i2       par_A           ;
!  +Pl+Dial/-Por:^AO^HMETA        ill_hVin        ; ! toolhiin
!  +Pl+Dial/-Por:^AO^I0%>i2       ess_nA          ;
!  +Pl+Dial/-Por:^AO^I0%>i2       com_ne          ;
!  +Pl+Dial/-Por:^WG^AO^I0%>i2    sgpl_cases_even ;
