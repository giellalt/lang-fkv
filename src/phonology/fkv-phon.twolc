!! !!!Phonological rules for Kven
!! !!Alphabet

Alphabet
a b c d đ e f g h i j k l m n o p q         !!= * @CODE@
r s t u ü v w x y z å ä ö æ ø               !!= * @CODE@
A B C D Đ E F G H I J K L M N O P           !!= * @CODE@
R S T U V W X Y Z Å Ä Ö Æ Ø                 !!= * @CODE@
%+:0                                        !!= * @CODE@ gemination
%^A:ä %^O:ö %^U:y                !!= * @CODE@ archi vowels for harmony
%^V %^N:n                        !!= * @CODE@ vowel copy sanoo, LNR copy purra
%>:0                             !!= * @CODE@ suff border can we live without it?
i2:i i3:i i4:i i5:i i6:i i7:i    !!= * @CODE@ 
!! **  i2 = noun pl, i3 = past tense, i4 = cond, i5 = superlative, i6 = pojan, i7 = cond of contr.v.
t2:t                      !!= * @CODE@ 
!! ** t2 = always t
%^HMETA:0                 !!= * @CODE@ h metateesi sykshyyn
%^WG:0                    !!= * @CODE@ weak grade hatun
%^E2I:0                   !!= * @CODE@ e to i in nom ove : ovi
%^VDEL:0 %^EDEL:0         !!= * @CODE@ -- DEL = deletion
%^AE:0                    !!= * @CODE@ -- a to e lauletaan
%^AO:0                    !!= * @CODE@ -- a to o sanoissa
;


!! !!Sets
Sets                                                            
FrontVowel = e i i2 i3 i4 i5 i6 i7 y ä ö ü æ ø ;                   !!= * @CODE@ 
BackVowel = a o u å ;                                           !!= * @CODE@ 
ArchiVowel =  %^A %^O %^U ;                                     !!= * @CODE@ 
ArchiConson = %^N ;                                             !!= * @CODE@ 
SomeVowel = %^V ;                                               !!= * @CODE@ 
Vowel   = FrontVowel BackVowel ArchiVowel SomeVowel ;           !!= * @CODE@ 
NotE    =   i i2 i3 i4 i5 i6 i7 y ä ö ü æ ø a o u å ;              !!= * @CODE@ 
NotEY   =   i i2 i3 i4 i5 i6 i7   ä ö   æ ø a o u å ;              !!= * @CODE@ 
NotEYU  =   i i2 i3 i4 i5 i6 i7   ä ö   æ ø a o   å ;              !!= * @CODE@ 
NotOU   = e i i2 i3 i4 i5 i6 i7 y ä ö ü æ ø a ;                    !!= * @CODE@ 
NotOUI  = e                     y ä ö ü æ ø a ;                    !!= * @CODE@ 
NotOUIY = e                       ä ö   æ ø a ;                    !!= * @CODE@ 
                                
NotOUIF = e                     y ä ö ü æ ø   ;                    !!= * @CODE@ 
NotOUIB = e                                 a ;                    !!= * @CODE@ 
NotEYUF =   i i2 i3 i4 i5 i6 i7   ä ö   æ ø         ;              !!= * @CODE@ 
NotEYUB =   i i2 i3 i4 i5 i6 i7             a o   å ;              !!= * @CODE@ 

Conson = b c d đ f g h j k l m n p q r s t v w x y z t2 %^N ;   !!= * @CODE@ 
NeutralVowel = e i ;                                            !!= * @CODE@ 
Segment = Vowel Conson ;                                        !!= * @CODE@ 
Dummy = %> %+ %^WG %^E2I %^HMETA %^VDEL %^EDEL %^AE %^AO ;      !!= * @CODE@ 
NonFront = BackVowel ArchiVowel ArchiConson SomeVowel Conson NeutralVowel Dummy ;  !!= * @CODE@ 


!! !!!Rules
Rules 


!! !!Consonant rules
!     ===============


!! !Gemination

!! One rule for each vowel environment.

!"Gemination"
! 0:Cx <=> [Vowel|l|r] Cy _ Vowel: %>:0 Vowel: ;   
!        where Cy in ( h j k l m n p r s t v ) 
!              Cx in ( h j k l m n p r s t v ) 
!    matched; 
 
"Gemination Va" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :a %>:0 [ :a | i7: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;

"Gemination Ve" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :e %>:0 [ :e | i7: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;
    
"Gemination Vi" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :i %>:0 [ :i | i7: | i2: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;
    
"Gemination Vo" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :o %>:0 [ :o | i7: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;
    
"Gemination Vu" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :u %>:0 [ :u | i7: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;
    
"Gemination Vy" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :y %>:0 [ :y | i7: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;
    
"Gemination Vö" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :ö %>:0 [ :ö | i7: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;
    
"Gemination Vä" !!= * @CODE@  
 0:Cx <=> .#. Conson:* Vowel:* Vowel Cx _ :ä %>:0 [ :ä | i7: ] ;   
        where Cx in ( h j k l m n p r s t v ) ;

    
"Gemination LIQa" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :a %>:0 [ :a | i7: ] ;   
        where Cx in ( j k p s t v ) ;

"Gemination LIQe" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :e %>:0 [ :e | i7: ] ;   
        where Cx in ( j k p s t v ) ;
    
"Gemination LIQi" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :i %>:0 [ :i | i7: ] ;   
        where Cx in ( j k p s t v ) ;
    
"Gemination LIQo" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :o %>:0 [ :o | i7: ] ;   
        where Cx in ( j k p s t v ) ;
    
"Gemination LIQu" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :u %>:0 [ :u | i7: ] ;   
        where Cx in ( j k p s t v ) ;
    
"Gemination LIQy" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :y %>:0 [ :y | i7: ] ;   
        where Cx in ( j k p s t v ) ;
    
"Gemination LIQö" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :ö %>:0 [ :ö | i7: ] ;   
        where Cx in ( j k p s t v ) ;
    
"Gemination LIQä" !!= * @CODE@  
 0:Cx <=> [l|r|n|m] Cx _ :ä %>:0 [ :ä | i7: ] ;   
        where Cx in ( j k p s t v ) ;


!"Gemination a"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :a %>:0 :a ;   
!        where Cx in ( h j k l m n p r s t v ) ;
!    
!"Gemination e"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :e %>:0 :e ;   
!        where Cx in ( h j k l m n p r s t v ) ;
!    
!"Gemination i"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :i %>:0 :i ;   
!        where Cx in ( h j k l m n p r s t v ) ;
!    
!"Gemination o"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :o %>:0 :o ;   
!        where Cx in ( h j k l m n p r s t v ) ;
!    
!"Gemination u"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :u %>:0 :u ;   
!        where Cx in ( h j k l m n p r s t v ) ;
!    
!"Gemination y"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :y %>:0 :y ;   
!        where Cx in ( h j k l m n p r s t v ) ;
!    
!"Gemination ö"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :ö %>:0 :ö ;   
!        where Cx in ( h j k l m n p r s t v ) ;
!    
!"Gemination ä"
! 0:Cx <=> [Vowel|l|r|n|m] Cx _ :ä %>:0 :ä ;   
!        where Cx in ( h j k l m n p r s t v ) ;
    

!! Foot-governed affixation
    
!!  Lyhyt tai pitkä pääte tavurakenteen mukaan:

!! * __Pitkä__: painollisen lyhyen tavun jälkeen 
!! ** ''sillä''
!! ** ''tulla''
!! * __Lyhyt__: painollisen pitkän tavun jälkeen
!! ** ''kuula''
!! * __Pitkä__: painottoman, pitkän tavun jälkeen
!! ** ''emänällä''
!! ** ''sisarelle''
!! ** ''itteksemmä''
!! * __Lyhyt__: painottoman, lyhyen tavun jälkeen
!! ** ''linnala''
!! ** ''muistela''
!! ** ''sijola''
!! ** ''kantelheela''
!! ** ''hunteeraama''
!! ** ''saima''

!"Suffix shortening after short vowels in odd syllbles of consonant stems" != * @CODE@   
! Cx:0 <=> Conson+ Vowel ( Dummy: ) _ %>: Cy: Vowel ; 
!     where Cx in ( l r m n l   r   m   n   ) 
!           Cy in ( l r m n %^N %^N %^N %^N )
!           matched ;

!"Suffix lengthening after short vowels in odd syllbles of vowel stems" != * @CODE@  
! 0:Cx <=> Vowel Conson+ Vowel+ (%>:) Conson+  (%>:) Vowel %>: ( Dummy: ) _ Cx: Vowel ; 
!     where Cx in ( l r m n ) ;





!! !!Consonant gradation
!    ===================

!! !Gradation ppttkk : ptk

"Gradation ppttkk : ptk" !!= * @CODE@  
Cx:0 <=> [Vowel:|l|m|n|r] _ Cx (:h) (Dummy:) Vowel: (Vowel:0) (Dummy:) (:i) (l|r) %^WG:0 ;   !entinen omppu
            where Cx in ( k p t ) ;

!Cx:0 <=> Vowel: _ [Cx|%+:0] (h) (Dummy:) Vowel: (Vowel:0) (Dummy:) %^WG:0 ;  
!Cx:0 <=> Vowel: _ Cx (:h) (Dummy:) Vowel: (Vowel:0) (Dummy:) (:i) %^WG:0 ;   !toimii

!€ katto^WG>n
!€ ka0to00n

!! !Gradation -p-

"Gradation p:v" !!= * @CODE@  
 p:v <=> Vowel: _ Vowel: Dummy:* (:i) Dummy:* %^WG:0 ;


!! !Gradation of -k-

"Gradation i:0, in word poika: pojan" !!= * @CODE@  
i6:0 <=> _ k: a %^WG:0;

!€ poi6ka^WG>n
!€ po0ja00n



! jälki: jäljen ; järki; järjen; kulkkeet: kuljen; särkkeet : särjen

"Gradation k:j" 
k:j <=>     [a|e|i|i6:] _ [o|e:|i]     (Dummy:) (:i) (Dummy:) %^WG:0 ;
          [ä|æ|e|i|i6:] _ [e:|i]       (Dummy:) (:i) (Dummy:) %^WG:0 ;
              [e|i|i6:] _ [e:|i|ä|æ|a] (Dummy:) (:i) (Dummy:) %^WG:0 ;
                  [r|l] _ e:           (Dummy:) (:i) (Dummy:) %^WG:0 ;
               Conson u _ e:           (Dummy:) (:i) (Dummy:) %^WG:0 ;
        
"Gradation k:0" 
k:0 <=>               h _ Vowel       (Dummy:) (:i) (Dummy:) %^WG:0 ;
  Vowel [Vowel - [e|i]] _ Vowel (Dummy:) (:i) (Dummy:) %^WG:0 ;
                      a _ a           (Dummy:) (:i) (Dummy:) %^WG:0 ;
                      y _ e           (Dummy:) (:i) (Dummy:) %^WG:0 ;
   [ NotOUIF: | l | r ] _  NotEYUF: (Dummy:) (:i) (Dummy:) %^WG:0 ;  
   [ NotOUIB: | l | r ] _  NotEYUB: (Dummy:) (:i) (Dummy:) %^WG:0 ;  



"k:v"
k:v <=>     [Vowel - i] _ [o|ö|u|y]    (Dummy:) (:i) (Dummy:) %^WG:0 ;
              [o|ö|u|y] _ [Vowel - e ] (Dummy:) (:i) (Dummy:) %^WG:0 ;

"Gradation nk:ng" !!= * @CODE@  
k:g <=> Vowel: n _  Vowel: (Dummy:) (:i) (Dummy:) %^WG:0 ;




!! !Gradation of -t-

"Gradation t:đ" !!= * @CODE@  
!t:đ <=> [ Vowel | l | r ] _  Vowel: (Dummy:) %^WG:0 ;  
!t:đ <=> Vowel  _  Vowel: (Dummy:) %^WG:0 ;  
 t:đ <=> Vowel  _  Vowel: (Dummy:) %^WG:0 \i3: ;  

"Gradation t:đ after h" !!= * @CODE@  
    t:đ <=> h _ Vowel: (Dummy:) (:i) (Dummy:) %^WG:0 ; 

 ! lähteet : lähđen/lähen
!€ lahti^WG
!€ lahđi0

"Gradation Nt:NN" !!= * @CODE@  
t:Nx <=> Nx  _  :Vowel (Dummy:*) ([i|i2:]) Dummy:* %^WG:0  ;  
!t:Nx <=> Nx  _  Vowel: (Dummy:) ([i|i2:]) (Dummy:) %^WG:0 (%>:0) \i3: ;  
    where Nx in ( l n r ) ; 
! NB nt:nn before i3, if the vowel before i3 is not dropped out. 
! annoin, mutta lensin, lennoin

!! !!Other consonant rules

"Alveolar assimilation for consonant stems" !!= * @CODE@  
 %^N:Cx <=> Cx: %>: _ ;
    where Cx in ( l r s ) ; 


"ti:si" !!= * @CODE@  
t:s <=> Vowel (n) _ [ (e:) ( %>:0) %^E2I: | Vowel:0 Dummy:* %>:0 i3: | e: %>:0 i2: ] ;

!"nti : nsi" 
!t:s <=> Vowel n _  Vowel:0 (Dummy:) i3: ;  

!"ti : si"
!t:s <=> Vowel _ e: %>:0 %^E2I: i3: ;



! ===============
!! !!!Vowel rules
! ===============

!! !!Vowel harmony 

"Back harmony" !!= * @CODE@  
 Vx:Vy <=> BackVowel: NonFront:* (:NonFront) NonFront:* %>: NonFront:* ([ NonFront: | :NonFront ]) NonFront:* _ ;  
         where Vx in ( %^A %^O %^U )
               Vy in (   a   o   u )
         matched ;
! kulke>^Vv ^A

!! !!Vowel copying and metathesis
         
"Vowel copying" !!= * @CODE@   
 %^V:Vx <=> :Vx Dummy:* %>:0 _ [ (%>:0) \Vowel|.#.] ;
    where Vx in ( a e i o u y ä ö ) ;
    
"Vowel copying in short h-illative" !!= * @CODE@ 
 %^V:Vx <=> Vowel Vx: %>:0 h _ [ n: | m: ] ;  
    where Vx in ( a e i o u y ä ö ) ; 
!! maahan

"Vowel copying in long h forms" !!= * @CODE@  
 %^V:Vy <=>  Vx: %>:0 %^HMETA: h _ %^V: ; 
    where Vx in ( a e i i2 o u y ä ö ) 
          Vy in ( a e i i  o u y ä ö ) 
             matched ;
 
! %^V:Vx <=> Vowel Vx: %>:0 %^HMETA: h _ %^V: ; 
! %^V:Vx <=>  Vx: %>:0 %^HMETA: h _ %^V: ; 

!"e copying in long h forms" 
! %^V:Vx <=>  Vx: %>:0 %^HMETA: h _ %^V: ; 
!    where Vx in ( a e i o u y ä ö ) ; 

"Vowel copying in long h forms 2" !!= * @CODE@  
 %^V:Vy <=>  Vx: %>:0 %^HMETA: h %^V: _ ; 
    where Vx in ( a e i i2 o u y ä ö )  
          Vy in ( a e i i  o u y ä ö ) 
             matched ;

"Vowel copying in long h forms of a-stems" !!= * @CODE@  
 %^V:o <=> .#. Conson:* (Vowel:) [i|e|a] Conson:* a: %>:0 %^HMETA: h _ i2: ; 

! %^V:Vx <=> Vowel Vx: %>:0 %^HMETA: h %^V: _ ; 
    
"Stem deletion in h-illative" !!= * @CODE@  
 Vx:0 <=> Conson _ %>:0 %^HMETA:0 h %^V: ; 
    where Vx in ( a e i o u y ä ö ) ; 
    
"Stem deletion in h-illative b" !!= * @CODE@  
 Vx:0 <=> Conson _ %>:0 %^HMETA:0 h %^V: ; 
    where Vx in ( a e i o u y ä ö ) ; 
    
!€ syksy>h^V^Vn
!€ syks000     h

!"Vowel copying in s-illative" 
! %^V:Vx <=> Vx: %>:0 s %^V: _ ; 
!    where Vx in ( a e i o u y ä ö ) ; 
! tämä pitää kai olla -seen, -siin

"e deletion in illative plural"
 e:0 <=> _ %^EDEL:0 %>:0 h ;
 ! vuothiin
 
"e deletion on partitive and genitive plural"
 e:0 <=> _ %>:0 i2: ;


!! !!Stem alternation rules
!  ========================

"Stem shortening for consonant initial suffixes" !!= * @CODE@
 Vx:0 <=> Vx _ %^VDEL:0  (Dummy:) %>:0 [s|t] ;
     where Vx in ( a e i ä ) ;

!€ rakkaa^VDEL^WG>s
!€ rak0a000>s

"e:0 in consonant stems" !!= * @CODE@  
 e:0 <=> Conson: _ [ (Dummy:* - %^E2I:0) %>:0 [i3:|i4:] | %^EDEL:0 %>:0 t ] ;


!! !!i rules
!  =========

!! The -i- rules require different i-s for different POS.

!! !a before i

"a:0 before Pret and Pl i when rounded root vowel" !!= * @CODE@  
 a:0 <=> \a [(u) u|([u|o]) o] (i) Conson: (Conson:) (Conson:) _ Dummy:* %>:0 [i2:|i3:] ;
! a:0 <=> [u|o] (i) Conson: (Conson:) (Conson:) _ (Dummy:) %>:0 [i2:|i3:] ;
 ! otan - otin  

"a:o before Pret i" !!= * @CODE@  
 a:o <=> .#. Conson:* a ([a|u]) Conson:* _ Dummy:* %>:0 i3: ;

"a:o before Pl i" !!= * @CODE@  
 a:o <=> .#. Conson:* (Vowel:) [i|e|a] Conson:* _ Dummy:* %>:0 i2: ; ! 2-syll
         Vowel Conson Conson:* Vowel:+ Conson:+ _ Dummy:* %>:0 i2: ; ! 3-syll

!€ kala>i2en
!€ kalo0jen
!€ kulkkiija>i2
!€ kulkkiijo0i


!"a:0 before Pret i when rounded root vowel in 3-syll stems"  
! a:0 <=> [u|o] (i) Conson: (Conson:) (Conson:) _ (Dummy: - %^AE:0) %>:0 [i2:|i3:] ;
!€ kirjoitta>i3
!€ kirjoitt00i

"ä:0 before i except in conditional" !!= * @CODE@  
 ä:0 <=> Conson: _ Dummy:* %>:0 [ i | i2: | i3: | i5: ] ;

"Shortening of long vowel in front of i" !!= * @CODE@  
 Vx:0 <=> _ Vy %>: (Dummy:) [ i | i2: | i3: | i4:] ; 
     where Vx in ( a ä u y u y i ) 
           Vy in ( a ä u y o ö e )
           matched ;

"Shortening of long vowel when vowel lengthening" !!= * @CODE@  
 %^V:0 <=> Vowel %>: _ %>:0 i4: ; 


"e:i in nom.sg. of e-stems" !!= * @CODE@ 
 e:i <=> _ %^E2I:0 ;  
 
!! * ove : ovi

"i:0 in par and gen pl of i-stems" ! ristien
 i:0 <=> Conson: _ %>:0 i2:i %>:0 [ %^V n | %^V: ] ;

"i:0 in past tense and conditional of i-stems" ! leikin, tohtisin
 i:0 <=> Conson: _ Dummy:* %>:0 [ i3:i | i4:i ] ;



!! !!Other vowel rules
!  ======================

"a:e in participles" !!= * @CODE@  
 Vx:e <=> _ %^AE:0 ;
 	where Vx in ( a ä ) ;




! ===================================================
! ===================================================
! ===================================================

! Here come old rules, note that there might be
! good ideas buried here or there.


! e:i <=> Conson: _ ( %+: Conson:) %>:0 [ i2:i | i2:j ] %>:0
!       where Conson in ( h j k l m n p r s t v ) ;
! !e:i <=> Conson: _ ( %+:0 ) i ; 
! e:i <=> i: _ (%+) Vowel: %^WG:0 ;


! Perhäps in Finnish only, cf. papila : papiila
!"i:e in i-stems" 
! i:e <=> Conson: _ ( Dummy:) %>:0 [ i2:i | i2:j ] %>:0 \Vowel ;



! !€ kävel>NU
! !€ käve00ly
! ! "Suffix shortening after long vowels"
!  Cx:0 <=> Vowel (%>:) Vowel %>: ( Dummy: ) _ Cx: Vowel ;
!      where Cx in ( l r m n ) ;
! 
! "Suffix shortening after short vowels in even syllbles"
!  Cx:0 <=>  (Conson+) Vowel+ Conson+ Vowel %>: ( Dummy: ) _ Cx: Vowel ;
!      where Cx in ( l r m n ) ;
! !All XYZ to be removed and replaced with human-readable tags
! ! "e:0 in plural of e-stems" ! ovien
!  e:0 <=> _  (Dummy:)  %>:0 [ i2:i | i2:j ] ;
! ! Y1 removed
! 
! 
! "i:e in i-stems"
!  i:e <=> Conson: _ ( X4:) %>:0 [ i2:i | i2:j ] %>:0 ;
! 
! "i as j intervocalically in affixes"
!  i2:j <=> [ Vow - :i ] (Dummy: | %^¤: ) %>:0 _ %>:0 Vow:Vow ; 
! ! valoien : valojen
! 
! "a to 0 in front of i"
!  a:0 <=> _ [ X2: | Y2: ] %>:0 i2: ;
! !a:0 <=> [ u | o ] (Neutral) Conson: Conson:* _  (Dummy:) [ X2: | Y2: ] %>: i2: ;
! ! koiraien : koirien
! 
! "a to o in front of i"
!  a:o <=> _ [ X4: | Y1: | Y3: ] %>:0 i2: ;
! !a:o <=> a Conson: Conson:*  _  (Dummy:) Y3: %>: i: ;
!  ! kalaien : kalojen
! 








!"II-I omppu" 
!Cy:0 <=> Cx Cy _ Vowel: (Dummy:) (:i) (Dummy:) %^WG:0 ; 
!        where Cx in ( l l l m n n r r r)
!              Cy in ( k p t p k t k p t)
!    matched ;

!€ omppu^WG
!€ omp0u0

! Cy Dobbelkonsonant
! Cx Enkelkonsonant
! f.eks. lkk-lk: pölkkää-pölkäs 




! Old rules

! "Gradation k:j after i"  @CODE@  
! k:j <=> [ i|i6: ] _ Vowel: (Dummy:) (:i) (Dummy:) %^WG:0 ;  


! "Gradation k:j after l,r, before e" 
!  k:j <=> [u|a|l|r] _ [e|e:0] (Dummy:) %^WG:0 ;  
! ! k:j <=> [l|r] _ [e|e:0] %^WG:0 ;  
! 
! ! pölkä>^WGt^A : pölätä 

! "Gradation k:0"  @CODE@  
!  k:0 <=> [ NotOUI: | l | r ] _  NotEYU: (Dummy:) (:i) (Dummy:) %^WG:0 ;  
! !k:0 <=> [ NotOUIY: | l | r ] _  NotEY: (Dummy:) (:i) (Dummy:) %^WG:0 ;  
! 
! !"Gradation of k:0 after y" 
! !k:0 <=> y _  NotEY: (Dummy:) (:i) (Dummy:) %^WG:0 ;  
! ! haka>^WGn : ha0a00n
! 


! old "Gradation k:v between u/y"  
! old k:v <=> Conson [Vowel - :i] _ u            (Dummy:) (:i) (Dummy:) %^WG:0 ;
! old         Conson u            _ [Vowel - e ] (Dummy:) (:i) (Dummy:) %^WG:0 ;
! old         Conson [Vowel - :i] _ y            (Dummy:) (:i) (Dummy:) %^WG:0 ;
! old !k:v <=> Conson u _ u (Dummy:) (:i) (Dummy:) %^WG:0 ;
! old !        Conson y _ y (Dummy:) (:i) (Dummy:) %^WG:0 ;
! old 
! old !¢ näky^WGn
! old !€ nävy0n
! old !! ** this will not give uku - uvun, but puku - puvun.


