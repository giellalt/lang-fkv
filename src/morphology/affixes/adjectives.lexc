
!! Affix file for Kven adjectives

!! !!!The basic lexica

!! Each a_ lexicon gets the +A tag and is then
!! redirected to a common x_ lexicon in the noun file.

LEXICON a_x  !!= * @CODE@ contains unclassified adjectives.
+A+Sg+Nom: K ; 


LEXICON ax  !!= * @CODE@ contains unclassified adjectives.
+A: K ; 

LEXICON a_21  !!= * @CODE@ corresponds to a_21 etc.
+A: x_21 ;
!+A: a_strong_v_stem ;
!+A:%^WG a_weak_v_stem ;

LEXICON a_21ie  !!= * @CODE@ corresponds to a_21ie etc.
+A: x_21ie ;

LEXICON a_22	!!= * @CODE@  liberaali
+A: x_22 ;

LEXICON a_22odd	!!= * @CODE@  simppeli
+A: x_22odd ;

LEXICON a_23	!!= * @CODE@  pimmee
+A: x_23 ;

LEXICON a_31	!!= * @CODE@  pieni
+A: x_31 ;

LEXICON a_31si	!!= * @CODE@ uusi
+A: x_31si ;

LEXICON a_32 !!= * @CODE@ tyven
+A: x_32 ;

LEXICON a_32m !!= * @CODE@ vasen sg taipuu kuitenki -ma
+A: x_32m ;

LEXICON a_33as !!= * @CODE@ rakas
+A: x_33as ;
! comp, superl, puuttuvat

LEXICON a_33aes !!= * @CODE@ rakas
+A: x_33aes ;
! comp, superl, puuttuvat


LEXICON a_33is !!= * @CODE@ rakas
+A: x_33is ;
! comp, superl, puuttuvat

LEXICON a_33ys !!= * @CODE@ rakas
+A: x_33ys ;
! comp, superl, puuttuvat

 
LEXICON a_33t !!= * @CODE@ tuoret
+A: x_33t ;
! comp, superl, puuttuvat

LEXICON a_41 !!= * @CODE@ = veres
+A: x_41 ;



LEXICON a_41_s_kse
+A:%^WG # ;


!LEXICON adj-nen
!+A: nen ;

!LEXICON a_42inen 
!adj-nen ;
!+A: nen ;
!+A:s R ;
!+A:s a_long_par ;
!+A+Sg:se a_sgpl_cases_short ;      ! these two lexica for cases with
!+A+Pl:s%>i2 a_sgpl_cases_short ;  ! the same affix in sg and pl
!+A+Pl:ssh%>i2 a_shorterillpl ;
!+A+Pl+Com:s%>i2ne K ;

LEXICON a_42 !!= * @CODE@ varovainen
+A: x_42 ;

LEXICON a_42odd !!= * @CODE@ sininen
+A: x_42odd ;


LEXICON a_43 !!= * @CODE@ muuttumaton
 
! :s R ;
! :se a_gae_strong ;
! +Pl+kom:sine K ;
! :se a_weak_v_stem ;
! :s a_long_par ;
!:se a_2TAVU_V_ill_sg ;
! +Pl+Ill:ssh%>i2in K ;
! +Pl:s%>i2 a_shortgenpl ; ! naisien
! +Pl:s a_consgenpl ;
! +Pl:ss%>i2 a_shortparpl ;
! +Pl:ss%>i2 a_shorterillpl ;
! +Pl+Com:s%>i2ne K ;
!Täytyy muokata

!+A

+A: a_ton ;
+A:%>tt%^Omh%^A shortest-illativ_sg ;
+A:%>tt%^Om%^A a_sgpl_cases_common ;
+A+Pl+Ill:%>tt%^Omh%>i2in K ;
+A:%>tt%^Omm%^A%>i2 a_shortestgenpl ; ! naisien
+A:%>tt%^Omi%> a_long_par_pl;
+A:%>tt%^Omh%>i2 a_shorterillpl ;
+A:%>tt%^Om%^A a_loputon ; 
+A:%>tt%^Om a_loputonpl ;
+A+Pl+Com:%>tt%^Om%>i2ne K ;

LEXICON a_43odd !!= * @CODE@ onneton
 
+A: a_ton ;
+A:%>tt%^Omh%^A shortest-illativ_sg ;
+A:%>tt%^Om%^A a_sgpl_cases_common ;
+A+Pl+Ill:%>tt%^Omh%>i2in K ;
+A:%>tt%^Omm%^A%>i2 a_shortestgenpl ; ! naisien
+A:%>tt%^Ommi%> a_long_par_pl;
+A:%>tt%^Omh%>i2 a_shorterillpl ;
+A+Pl+Com:%>tt%^Om%>i2ne K ;
+A:%>tt%^Om%^A a_loputonodd ;
+A:%>tt%^Om a_loputonoddpl ;




!! !!! Basic paradigms
!  ===================

!! !!Basic vowel stems
!  --------------------

LEXICON a_strong_v_stem  !!= * @CODE@ ''Kaikki vahvan asteen sijamuodot tähän''
 nom_strong ;
 obl_strong_even ;

LEXICON a_weak_v_stem !!= * @CODE@ 
 +Sg+Gen:%>n K ;
 +Sg+Gen:%>n R ;
 +Pl+Nom:%>t K ;
! +Pl+Ins:%>i2%>n K ;   ! Marginal case, in use only for some words.
                        ! Todo: identify these, and remove Ins from the
                        ! general weak_v_stem lexicon.

!! !Sublexica for the vowel stems
!  - - - - - - - - - - - - - - - 

LEXICON a_nom_strong
  +Sg+Nom: K ; 
  +Sg+Nom: R ; 
  short_par ;

LEXICON a_obl_strong 
! +Sg:%>i2 com ;
 +Pl:%>i2 com ;
 +Sg+Ess:%>n%^A PxxK ;
 +Pl+Ess:%>i2%>n%^A PxxK ;
 
LEXICON a_sgpl_cases_short ! kaikille paitsi neljän koplalle
 +Ade:%>l%^A PxxK ; !! * Lyhyt perusmuoto vuođela
 +All:%>le PxxK ; !! * Lyhyt perusmuoto
 +Ess:%>n%^A PxxK ; !! * Huom... essiivi ja heikko aste
 sgpl_cases_common ;

LEXICON a_sgpl_cases_long ! neljän koplalle
 +Ade:%>ll%^A PxxK ; !! * Pitkä perusmuoto
 +All:%>lle PxxK ; !! * Pitkä perusmuoto
 +Ess:%>n%^A PxxK ; !! * Huom... essiivi ja heikko aste
 sgpl_cases_common ;

LEXICON a_sgpl_cases_common
 +Abl:%>lt%^A PxxK ;
 +Ine:%>ss%^A PxxK ;
 +Ela:%>st%^A PxxK ;
 +Tra:%>ksi K ;
 +Tra:%>kse Pxx ;
 +Abe:%>tt%^A PxxK ;

LEXICON a_com 
!! Komitatiivilla on vain -ine ja menee Pxx:iin
 +Com:%>ne Pxx ; ! Not to K, since Px must be present
                 ! Note that adjectives have -ine without Px


!! !Lexica for the non-uniform cases
! --------------------------------

LEXICON a_short_par
+Sg+Par:%>%^V PxxK ;
 

LEXICON a_long_par
 long_par_sg ;
 long_par_pl ;

LEXICON a_long_par_sg
 +Sg+Par:%>t%^A PxxK ;

LEXICON a_long_par_pl
  +Pl+Par:%>i2%>t%^A PxxK ;
  
LEXICON shortest-illativ_sg  !jos h ei siirry
 +Sg+Ill:%>%^V n_PxK ;
 
LEXICON a_1TAVU_VV-ill  !short maahan
 +Sg+Ill:%>h%^V n_PxK ;
 
LEXICON a_2TAVU_V_ill_sg !long
+Sg+Ill:%>%^HMETAh%^V%^V n_PxK ;

! sykshyyn, linnhaan
!! linna pl.ill. kaksi muotoa po. linnhoin

LEXICON a_2TAVU_edel-ill !suomhiin
+Sg+Ill:%>%^HMETAh%^V%^V n_PxK ;
+Pl+Ill:%^EDEL%>hii n_PxK ;


LEXICON a_mTAVU_VV-ill !longer kuninkhaa/sseen
!+Sg+Ill:%>ss%^V%^V n_PxK ;
+Sg+Ill:%>ssee n_PxK ; !koska tämä pääte aina sseen

LEXICON a_oldgenpl
 +Gen:%> n_PxK ;

LEXICON a_shortestgenpl !! * @CODE@ zero, because ii > i
 +Gen: n_PxK ;

LEXICON a_shortgenpl
 +Gen:%>%^V n_PxK ;

LEXICON a_longgenpl
 d_longgenpl ; ! oletaan, että -tten vaan
 tt_longgenpl ; 

LEXICON a_d_longgenpl
 +Gen:%>de n_PxK ;

LEXICON a_tt_longgenpl
 +Gen:%>tte n_PxK ;

LEXICON a_consgenpl
 +Gen:%>te n_PxK ;

LEXICON a_shortestparpl !! * @CODE@ zero, because ii > i
 +Par: PxxK ;

LEXICON a_shortparpl
 +Par:%>%^V PxxK ;

LEXICON a_longparpl
 +Par:%>t%^A PxxK ;

LEXICON a_shortestillpl
 +Ill:%> n_PxK ;

LEXICON a_shortillpl
 +Ill:%>hi n_PxK ;

LEXICON a_h_shortillpl
 +Ill:%^EDEL%>hii n_PxK ;


LEXICON a_shorterillpl
 +Ill:%>i2 n_PxK ;		

LEXICON a_longillpl
+Ill: n_PxK ;  ! En tiedä, toimiiko tämä

LEXICON a_longerillpl
  +Pl+Ill:%>s%^V%^V n_PxK ;
  

LEXICON a_loput
 obl_strong_even ; ! muut vahvat
 weak_v_stem ;
 +Sg: sgpl_cases_long ;      !! these two lexica for cases with
 +Pl:%>i2 sgpl_cases_long ;  !! the same affix in sg and pl -- tsekkaa long
 +Pl:%>i2 shortgenpl ;
 +Pl:%>i2 shortparpl ;

LEXICON a_loputon
 obl_strong_even ; ! muut vahvat
 weak_v_stem ;
 +Sg: sgpl_cases_long ;      !! these two lexica for cases with

LEXICON a_loputonpl 
 +Pl:%>i2 sgpl_cases_long ;  !! the same affix in sg and pl -- tsekkaa long
 +Pl:%>i2 shortgenpl ;

LEXICON a_loputonodd
 obl_strong_odd ; ! muut vahvat
 weak_v_stem ;
+Sg:sgpl_cases_short ;      !! these two lexica for cases with

LEXICON a_loputonoddpl
+Pl:%>i2 sgpl_cases_short ;  !! the same affix in sg and pl -- tsekkaa long
+Pl:%>i2 shortgenpl ;


LEXICON a_sConsCase
 +Sg+Nom:%^WG%>s K ;
 +Sg+Par:%^WG%>st%^A K ; ! Par
 +Pl+Gen:%^WG%>sten K ; ! Gen

LEXICON a_tConsCase
 +Sg+Nom:%^WG%>t K ;
 +Sg+Par:%^WG%>tt%^A K ;

LEXICON a_ton
 +Sg+Nom:%>t%^On K ;
 +Sg+Par:%>t%^Ont%^A K ;
! +Sg+Ill:tt%^Omh%^A%^An K ;
! +Pl+Gen:tt%^Omm%>i2in K ;


 
