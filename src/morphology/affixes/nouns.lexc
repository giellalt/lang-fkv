! ======================
!! !!!Sublexica for NounRoot
! ======================

!! Aloitin sovittaa analyysin Eiran kieliopin mukaan (Porsanki).
!! Leksikot ovat nyt (tai pitää olla) n11, n12, jne., eli siis
!! Eiran nominit tyyppi 1.1., 1.2., jne.

!!  2007 s.87
!! * 1. Yksitavuiset / Vi ( maa, tuorestai)        = vanha_n_1
!! * 1.1. Yksitavuiset monikko/ Vi ( häät)         = vanha_n_1pl
!! * 2. Vokaalirankaiset
!! ** 2.1 Kaksitavuiset ( pappi)                   = vanha_n_21
!! *** 2.1.1. Kaksitavuiset monikko (housut)       = vanha_n_21pl
!! *** 2.1.2. Kaksitavuiset (joki: joke)           = vanha_n_21ie
!! ** 2.2. Usseempitav. (opettaaja)                = vanha_n_22
!! *** 2.2.1. Usseempitav. odd (kajava)            = vanha_n_22odd
!! *** 2.2.2. Usseempitav. odd (meininki, tunturi) = vanha_n_22oddi
!! *** 2.2.3. Usseempitav. monikko oi (kulkkiija)  = vanha_n_22oi
!! ** 2.3 Kokkoontumanom. ( valkkee)               = vanha_n_23
!! ** 2.3.1 Kokkoontumanom. (assii)                = vanha_n_23ii
!! * 3. Konsonanttirankaiset
!! ** 3.1 Kaksitavuiset ( pieni, kieli)            = vanha_n_31
!! ** 3.1.1. Kaksitavuiset lumi)                   = vanha_n_31lumi
!! ** 3.1.2. (käsi, vuosi)                         = vanha_n_31si
!! ** 3.1.3. (lapsi)                               = vanha_n_31lapsi
!! ** 3.1.4. (mies)                                = vanha_n_31mies
!! ** 3.2 Usseempitavuiset
!! ** 3.2.1 (tytär)                                = vanha_n_32
!! ** 3.2.2. (elläin)                              = vanha_n_32m
!! ** 3.2.3 (rakkhaus)                             = vanha_n_32s
!! ** 3.3 Kokkoontumanom. ( opas, huonet)
!! ** 3.3.1 (opas)                                 = vanha_n_33s
!! ** 3.3.2 (asukas)                               = vanha_n_33sodd
!! ** 3.3.3. (ruvis)                               = vanha_n_33is
!! ** 3.3.4 (huonet)                               = vanha_n_33t
!! ** 3.3.5 (kirves)                               = vanha_n_33ts
!! * 4. Ekstrakonsonanttirankaiset
!! ** 4.1 veres-nominit ( veres, kokkous)          = vanha_n_41
!! ** 4.1.1. veres-nominit monikko ( veljekset)    = vanha_n_41pl
!! ** 4.2 –inen-nominit ( kainulainen)             = vanha_n_42 = nen
!! *** 4.2.1 -inen-nominit Pl (tervheiset)         = vanha_n_42pl = nen
!! *** 4.2.2 -inen-nominit odd (vihrinen)          = vanha_n_42odd = nen

!! !!Noun types

!! !Incomong

LEXICON vanha_n_x
+N         : vanha_x_x ;

LEXICON vanha_x_x
  +Sg      : nom_end ; ! Just to make it compile



LEXICON vanha_n_1 !!= * @CODE@ = maa, tie
+N         : vanha_x_1 ;
+N+Sg      : nom_end   ;
+N+Pl+Dial/Por:%>i2ne   gen_n           ;

LEXICON vanha_n_1ai !!= * @CODE@ = tuorestai ja muut päivät
+N         : vanha_x_1 ;
+N+Sg      : nom_R     ;

LEXICON vanha_x_1
  +Sg      :         nom_end         ;
  +Sg      :         gen_n_sg        ;
  +Sg      :         ill_hVn         ; ! maahan
  +Sg      :         par_tA          ;
  +Sg      :         sgpl_cases_even ; !! these two lexica for cases with
           :         vanha_x_1pl           ;
! +Sg+Nom:         Px              ; ! mattoni
! +Sg+Gen:         Px              ; ! mattoni
! +Pl+Nom:         Px              ; ! mattoni
  +Sg      :         ess_nA          ;



LEXICON vanha_n_1pl !!= * @CODE@ = häät
+N         : vanha_x_1 ;

LEXICON vanha_x_1pl !!= * @CODE@ = häät
  +Sg      : gen_n_sg ;

  +Pl      : nom_t    ;
  +Pl      :%>i2      sgpl_cases_even ; !! the same affix in sg and pl

  +Pl      :%>i2     gen_tten       ;
  +Pl+Dial/Por:%>i2%>ne gen_n          ; ! häinen
  +Pl      :%>i2      par_tA          ;
  +Pl      :%>i2      ill_hin         ;
  +Pl      :%>i2      ess_nA          ;
  +Pl      :%>i2      com_ne          ;


!! !Eira's classification

! TODO TODO TODO
! vanha_n_21     = puku = puvuissa
! vanha_n_21_AO = sana = sanoissa []
! vanha_n_21_A0_A2I  = kuva = kuvissa []
! vanha_n_21i    = färi : färi n_21 på i er lånord  sed /i vanha_21/i vanha_21i/
! vanha_n_21ie  = veri : vere

LEXICON vanha_n_21 !!= * @CODE@  "poika:poi6ka", lyhyt vokali, yks vartalo, pappi, tooli, syksy ! jos loppuu i:hin ne ovat lainasanoja
+N         : vanha_x_21 ;
+N+Sg      : nom_R   ;

LEXICON vanha_n_21C ! TODO check what is this
+N+Sg      :  nom_end    ; ! Hans
           :i vanha_n_21 ; ! Hansi
+N+Sg      :i nom_R      ;

LEXICON vanha_x_21
  +Sg      :    nom_end                 ;
           :    vanha_x_21_oblique      ;

! TODO old version of this (before split) is at the end of this file
LEXICON vanha_x_21_oblique ! this is also called from affixes/propernouns ! puku - puvuissa
  +Sg+Dial/Por:^WG              gen_n_sg        ;
  +Sg+Dial/Por:                 par_V           ;
  +Sg+Dial/Por:^HMETA           ill_hVVn        ;
  +Sg+Dial/Por:                 ess_nA          ;
  +Sg+Dial/Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/Por:^WG              nom_t           ;
  +Pl+Dial/Por:%>i2             gen_n           ; ! gen_n         since we have the i
  +Pl+Dial/Por:%>i2             par_end         ;
  +Pl+Dial/Por:^HMETA           ill_hVin        ; ! sykshyin
  +Pl+Dial/Por:%>i2             ess_nA          ;
  +Pl+Dial/Por:%>i2             com_ne          ;
  +Pl+Dial/Por:^WG%>i2          sgpl_cases_even ; !the same affix in sg and pl

  +Sg+Dial/-Por:^WG              gen_n_sg        ;
  +Sg+Dial/-Por:                 par_A           ;! in var should be poikaa with one k, kk:k luultavasti (error with ^A only?) ! ^WG gives aiaa
  +Sg+Dial/-Por:^HMETA           ill_hVVn        ;
  +Sg+Dial/-Por:                 ess_nA          ;
  +Sg+Dial/-Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl+Dial/-Por:^WG              nom_t           ;
  +Pl+Dial/-Por:^WG%>i2          gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
  +Pl+Dial/Var:%>j               par_A           ; ! Use i:j in twolc j, see below
  +Pl+Dial/-Por:%>i2             par_A           ;
  +Pl+Dial/-Por:^HMETA           ill_hVin        ; ! toolhiin
  +Pl+Dial/-Por:%>i2             ess_nA          ;
  +Pl+Dial/-Por:%>i2             com_ne          ;
  +Pl+Dial/-Por:^WG%>i2          sgpl_cases_even ;

LEXICON vanha_n_21_AO !!= * @CODE@ sana - sanoissa. Linna? Linnoissa? aika
+N+Sg      :                    nom_R           ;
+N+Sg      :                    nom_end         ;
+N+Sg+Dial/Por:^WG              gen_n_sg        ;
+N+Sg+Dial/Por:                 par_V           ;
+N+Sg+Dial/Por:^HMETA           ill_hVVn        ;
+N+Sg+Dial/Por:                 ess_nA          ;
+N+Sg+Dial/Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

+N+Pl+Dial/Por:^WG              nom_t           ;
+N+Pl+Dial/Por:^AO%>i2          gen_n           ; ! gen_n         since we have the i
+N+Pl+Dial/Por:^AO%>i2          par_end         ;
+N+Pl+Dial/Por:^AO^HMETA        ill_hVin        ; ! sykshyin
+N+Pl+Dial/Por:^AO%>i2          ess_nA          ;
+N+Pl+Dial/Por:^AO%>i2          com_ne          ;
+N+Pl+Dial/Por:^WG^AO%>i2       sgpl_cases_even ; !the same affix in sg and pl

+N+Sg+Dial/-Por:^WG              gen_n_sg        ;
+N+Sg+Dial/-Por:                 par_A           ;!var should be poikaa (not kk), kk:k luultavasti (error with ^A only?) ! ^WG gives (gave) aiaa
+N+Sg+Dial/-Por:^HMETA           ill_hVVn        ;
+N+Sg+Dial/-Por:                 ess_nA          ;
+N+Sg+Dial/-Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

+N+Pl+Dial/-Por:^WG              nom_t           ;
+N+Pl+Dial/-Por:^WG^AO%>i2       gen_tten        ;
+N+Pl+Dial/-Por:^AO%>j           par_A           ; ! Use i:j in twolc j, see below
+N+Pl+Dial/-Por:^AO%>i2          par_A           ;
+N+Pl+Dial/-Por:^AO^HMETA        ill_hVin        ;
+N+Pl+Dial/-Por:^AO%>i2          ess_nA          ;
+N+Pl+Dial/-Por:^AO%>i2          com_ne          ;
+N+Pl+Dial/-Por:^WG^AO%>i2       sgpl_cases_even ;

LEXICON vanha_n_21_A0_A2I !!= * @CODE@ kuva - kuvissa, poika - pojissa
+N+Sg      : nom_R   ; ! miksi tämä? TODO
+N+Sg      : nom_end   ;

+N+Sg+Dial/Por:^WG              gen_n_sg        ;
+N+Sg+Dial/Por:                 par_V           ;
+N+Sg+Dial/Por:^HMETA           ill_hVVn        ;
+N+Sg+Dial/Por:                 ess_nA          ;
+N+Sg+Dial/Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

+N+Pl+Dial/Por:^WG              nom_t           ;
+N+Pl+Dial/Por:^A2I%>i2         gen_n           ; ! gen_n         since we have the i
+N+Pl+Dial/Por:^A2I%>i2         par_end         ; ! for this and gen, add A2I to 0:v context
+N+Pl+Dial/Por:^A0^HMETA        ill_hiin        ; ! kuvhiin
+N+Pl+Dial/Por:^A0%>i2          ess_nA          ;
+N+Pl+Dial/Por:^A0%>i2          com_ne          ;
+N+Pl+Dial/Por:^WG^A0%>i2       sgpl_cases_even ; !the same affix in sg and pl

+N+Sg+Dial/-Por:^WG              gen_n_sg        ;
+N+Sg+Dial/-Por:                 par_A           ;! in var should be poikaa with one k, kk:k luultavasti (error with ^A only?) ! ^WG gives aiaa
+N+Sg+Dial/-Por:^HMETA           ill_hVVn        ;
+N+Sg+Dial/-Por:                 ess_nA          ;
+N+Sg+Dial/-Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

+N+Pl+Dial/-Por:^WG              nom_t           ;
+N+Pl+Dial/-Por:^WG^A0^I0%>i2    gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
+N+Pl+Dial/-Por:^A0^I0%>i2       par_A           ;
! +N+Pl+Dial/-Por:%>j              par_A           ; ! Use i:j in twolc j, see below. ! What words)
+N+Pl+Dial/-Por:^A0^HMETA        ill_hiin        ; ! kuvhiin
+N+Pl+Dial/-Por:^A0^I0%>i2       ess_nA          ; ! TODO here twolc doesn't work, fix tags, no a:o
+N+Pl+Dial/-Por:^A0^I0%>i2       com_ne          ;
+N+Pl+Dial/-Por:^WG^A0^I0%>i2    sgpl_cases_even ;!TODO create ^A0 instead of A2I? i2 (plural) wouldbe consistent

LEXICON vanha_n_21i ! Not in use, just a thought, if we don't do it with TWOLC TODO ! pappi, tooli, lyhyt vokali, loppuu i:llä
+N         : vanha_x_21i ;
+N+Sg      : nom_R   ;
+N+Sg      : nom_end            ;

LEXICON vanha_x_21i ! Not in use, pappi, tooli, lyhyt vokali, loppuu i:llä
  +Sg      :    nom_end                 ;
  +Sg      :^WG              gen_n_sg        ;
  +Sg+Dial/Por:                 par_V           ;
  +Sg+Dial/-Por:                 par_A           ;! in var should be poikaa with one k
  +Sg      :^HMETA           ill_hVVn        ;
  +Sg      :                 ess_nA          ;
  +Sg      :^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

  +Pl      :^WG              nom_t           ;
  +Pl+Dial/Por:^AO%>i2          gen_n           ; ! gen_n         since we have the i
  +Pl+Dial/-Por:^WG^AO       gen_tten        ;
  +Pl+Dial/Por:^AO%>i2          par_end         ;
!  +Pl+Dial/Var:^AO%>j           par_A           ; ! Use i:j in twolc j, see below
  +Pl+Dial/-Por:^AO          par_A           ;
  +Pl      :^AO^HMETA        ill_hVin        ;
  +Pl+Dial/Por:^AO%>i2          ess_nA          ;
  +Pl+Dial/-Por:^AO          ess_nA          ;
  +Pl+Dial/Por:^AO%>i2          com_ne          ;
  +Pl+Dial/-Por:^AO          com_ne          ;
  +Pl+Dial/Por:^WG^AO%>i2       sgpl_cases_even ; !the same affix in sg and pl
  +Pl+Dial/-Por:^WG^AO       sgpl_cases_even ; ! TODO should be i in other, but not in pappi, tooli, i-ending, also for adjectives in Var, siisti.

LEXICON vanha_n_21ie        !!= @CODE@ on ove, ovi, nom joki:joke, hyksi, suomi ! Ei lainasanat
+N:     vanha_x_21ie ;
+N+Sg      :^E2I nom_R     ; ! ^EI e to i
!+N+Dial/Var:^¤   vanha_x_21ie ; TODO for joen VAR, needs to not break other stuff

LEXICON vanha_x_21ie
  +Sg+Nom:^E2I     K               ; ! ^EI e to i
  +Sg+Dial/Por:         par_V           ; ! suomee
  +Sg+Dial/-Por:^E2I     par_A           ; ! suomea
  +Sg      :^WG      gen_n_sg        ;
  +Pl      :^WG      nom_t           ;
  +Sg      :^WG      sgpl_cases_even ; !! these two lexica for cases with
  +Sg      :         ess_nA          ;
  +Pl      :^WG%>i2  sgpl_cases_even ; !! the same affix in sg and pl
  +Pl+Dial/Por:%>i2     gen_Vn          ; ! hyksiin
  +Pl+Dial/-Por:%>i2     gen_tten        ; ! hyksitten
  +Pl+Dial/Por:%>i2     par_V           ; ! hyksii
  +Pl+Dial/-Por:%>i2     par_A           ; ! hyksiä
  +Sg      :^HMETA   ill_hVVn        ;
!      +Pl+Ill:^EDEL%>hii n_PxK         ; ! TODO add Twolc description about EDEL ! suomhiin
  +Pl      :^EDEL    ill_hiin        ; ! TODO add Twolc description about EDEL ! suomhiin

  +Pl      :%>i2     ess_nA          ;
  +Pl      :%>i2     com_ne          ;


LEXICON vanha_n_21pl        !!= * @CODE@  "villahousut", lyhyt vokali, yks vartalo, kasvot
+N         :       vanha_x_21pl    ;
+N+Pl      :       nom_t     ; ! housut, kasvot

LEXICON vanha_x_21pl        !!= * @CODE@

  +Pl      :%>i2               sgpl_cases_even ; !! the same affix in sg and pl

  +Pl+Dial/Por:%>i2               gen_n           ; ! kasvoin
  +Pl+Dial/-Por:%>i2               gen_tten        ; ! kasvoitten, housuitten
  +Pl+Dial/Por:%>i2               par_end         ; ! kasvoi
  +Pl+Dial/-Por:%>j                par_A           ; ! kasvoja

  +Pl      :^HMETA             ill_hVin        ;
  +Pl      :%>i2               ess_nA          ;
  +Pl      :%>i2               com_ne          ;

  ! LEXICON vanha_kk-longgenpl
  !      +Gen:%>kk%>i2           #               ; ! kk ?? Tsekkaa..

  !LEXICON vanha_kk-longgparpl
  ! +Par:%>kk%>i2 # ; ! kk ?? Tsekkaa..

LEXICON vanha_n_22        !!= * @CODE@  opettaaja, karamelli
+N         :    vanha_x_22  ;
+N+Sg      :    nom_R    ;

LEXICON vanha_x_22 !liberaali

  +Sg      :         nom_end                  ;
  +Sg      :^WG      gen_n_sg           ;
  +Sg+Dial/Por:         par_V              ;
  +Sg+Dial/-Por:         par_A              ; ! karamellia
  +Sg      :^HMETA   ill_hVVn           ;
  +Sg      :         ess_nA              ; ! karamellina
  +Sg      :^WG      sgpl_cases_even    ; ! the same affix in sg and pl


  +Pl      :^WG      nom_t              ; ! liberaalit
  +Dial/Por:         vanha_x_22_pl_por        ;
  +Dial/-Por:         vanha_x_22_pl_var        ;

        !   +Pl:^WG%>i2       gen_tten           ;
        !   +Pl:%>i2          par_tA             ;
        !   +Pl:%>i2          par_end            ; !liberaali, dialissa on liberaalia?
        !   +Pl:%>i2          ess_nA                ;
        !   +Pl:%>i2          com_ne             ;

LEXICON vanha_x_22_pl_por
  +Pl      :^WG%>i2    gen_tten    ;
  +Pl      :%>i2       par_tA      ;
  +Pl      :%>i2       par_end     ;
  +Pl      :^HMETA     ill_hiin    ;
  +Pl      :%>i2       ess_nA      ;
  +Pl      :%>i2       com_ne      ;
  +Pl      :^WG%>i2  sgpl_cases_even    ; ! Adding  to block i:0


LEXICON vanha_x_22_pl_var ! TODO look at Dummy symbol structure in Twolc, now that we
                          ! need more of them. Rules for when (which problems) and
                          ! where (in the string/word "structure") ! ^WG before ^A2I always?
  +Pl      :^WG^A2I   gen_tten    ;
  +Pl      :^A2I      par_A       ;
  +Pl      :^HMETA    ill_hiin    ;
  +Pl      :^A2I      ess_nA      ; ! karamelline
  +Pl      :^A2I      com_ne      ; ! karamellina
  +Pl      :^WG^A2I    sgpl_cases_even    ; ! Adding  to block i:0 karamellitten

! +Pl:%>i2        gen_n              ; opettaajiin
! +Pl+Tra:%>i2ksi K ; Lene removed this one
! !+Pl+Tra:%>i2kse     PxxK               ;

LEXICON vanha_n_22odd !!= * @CODE@  kajava
+N         :  vanha_x_22odd ;

LEXICON vanha_x_22odd !!= * @CODE@  kajava
  +Sg      :             nom_end              ;
  +Sg      :^WG          sgpl_cases_odd ;
  +Sg      :^WG          gen_n_sg       ;
  +Sg+Dial/Por:             par_V          ;
  +Sg+Dial/-Por:             par_A          ;
  +Sg      :^HMETA       ill_hVVn       ;
  +Sg      :             ess_nnA        ;

  +Pl      :^WG          nom_t          ;
  +Pl+Dial/Por:^WG^A0%>i2i     gen_tten       ; ! kajaviitten ! TODO Why WG here and not it par?
  +Pl+Dial/-Por:^WG^A0%>i2      gen_tten       ; ! kajavitten
  +Pl+Dial/Por:^A0%>i2i        par_tA         ; ! kajaviita
  +Pl+Dial/Por:^A0%>i2%>i      par_end        ; ! %> i necessary, otherwise a:o NOTwork, kajavii
  +Pl+Dial/-Por:^A0%>i2%>       par_A          ; ! kajavia
!      +Pl+Ill:%^HMETA%>hii n_PxK          ;
  +Pl      :%^HMETA      ill_hiin       ;
  +Pl+Dial/Por:^A0%>i2         ess_nnA        ;
  +Pl+Dial/-Por:^A0%>i2         ess_nnA        ;
  +Pl+Dial/Por:^A0%>i2         com_nne        ;
  +Pl+Dial/Var:^A0%>i2         com_nne        ;
  +Pl+Dial/Jok:%>i2         com_nne        ; !Jok loistaava
  +Pl      :^WG^A0%>i2      sgpl_cases_odd ; ! TODO any cases here that should have ^AO?
! +Pl+Tra:%>i2%>ksi    PxxK           ;



LEXICON vanha_n_22oddi !!= * @CODE@  meininki, tunturi TODO
+N         :     vanha_x_22oddi ;
+N+Sg      :     nom_R       ;
+N+Sg      :^WG  gen_n    ;

LEXICON vanha_x_22oddi
  +Sg      :        nom_end               ;
  +Sg      :^WG     gen_n_sg        ;
  +Sg+Dial/Por:        par_V           ;
  +Sg+Dial/-Por:        par_A           ;
  +Sg      :^HMETA  ill_hVVn        ;
  +Sg      :        ess_nnA         ;
  +Sg      :^WG     sgpl_cases_odd  ;

  +Pl      :^WG     nom_t           ;
  +Pl+Dial/Por:^WG%>i2 gen_tten        ;
  +Pl+Dial/-Por:^WG     gen_tten        ;
  +Pl+Dial/Por:%>i2    par_tA          ;
  +Pl+Dial/-Por:        par_A           ;
  +Pl      :^HMETA  ill_hiin        ;
  +Pl+Dial/Por:%>i2    ess_nA          ;
  +Pl+Dial/-Por:        ess_nnA         ;
  +Pl+Dial/Por:%>i2    com_ne          ;
  +Pl+Dial/-Por:        com_nne         ;

  +Pl+Dial/Por:^WG%>i2 sgpl_cases_even ; ! Adding  to block i:0
  +Pl+Dial/-Por:^WG%>   sgpl_cases_odd  ; ! Adding  to block i:0

!  Tarkista, onko yaml oikein:
!  [24/25][FAIL] meininki+N+Pl+Ess => Missing results: meininkiinä
!  [24/25][FAIL] meininki+N+Pl+Ess => Unexpected results: meininkkiinä
!  [25/25][FAIL] meininki+N+Pl+Com => Missing results: meininkiine
!  [25/25][FAIL] meininki+N+Pl+Com => Unexpected results: meininkkiine



LEXICON vanha_n_22oi        !!= * @CODE@  Kulkkiija, paivukko, sivakka, perintö, kurkkio, asia (in Var)
+N         : vanha_x_22oi ;

LEXICON vanha_x_22oi
  +Sg      :                   nom_end         ;
  +Pl      :^WG                nom_t           ;
  +Sg      :^WG                gen_n_sg        ;
  +Sg+Dial/Por:                   par_V           ;
  +Sg+Dial/-Por:                   par_A           ;
  +Sg      :^HMETA             ill_hVVn        ;
  +Sg      :                   ess_nnA         ; ! paivukkonna
  +Sg      :^WG                sgpl_cases_odd  ; ! these two lexica for cases with

  +Pl      :^WG^AO%>i2         gen_tten        ;
  +Pl      :^AO%>i2            par_tA          ; ! perintöitä, if ^WG then kulkija works, else perintö works
  +Pl      :^AO^HMETA          ill_hVin        ;
!          +Pl:^AO%>i2            ill_hin         ; ! TODO, only for asioihin, not the others?
  +Pl      :^AO%>i2            ess_nA          ; ! paivukoina
  +Pl      :^AO%>i2            com_ne          ; ! paivukoine
  +Pl      :^WG^AO%>i2         sgpl_cases_even ; ! the same affix in sg and pl
!      +Pl+Ill:^AO^HMETA%>h^V%>i2 n_PxK           ;
         !+Ill:         %>h^V%>i2 n_PxK           ;
!+Ill:h%>i2%>i2     n_PxK ; ! on Sg:ssä hVVn


LEXICON vanha_n_23        !!= * @CODE@  hoppee:hoppe
+N+Dial/Por:        vanha_x_23            ;
+N+Dial/Var:^E2I^¤  vanha_x_23ia          ;
+N+Dial/Jok:^¤      vanha_x_23ia          ; ! hopea, not hopia
 ! +N+Sg+Nom:   R     Is this extra and wrong?

LEXICON vanha_x_23
  +Sg+Nom:e       K               ;
  +Sg+Nom+Err/Orth:%>%^A   K               ;
  +Sg      :e       gen_n_sg        ;
  +Sg+Dial/-Var:e       par_tA          ;
  +Sg      :e       ill_sseen       ;
  +Sg      :e       ess_nA          ;
  +Sg      :e       sgpl_cases_even ;

  +Pl      :e       nom_t           ;
  +Pl      :e%>i2   gen_tten        ;
  +Pl      :e%>i2   par_tA          ;
  +Pl      :e%>i2   ill_ssiin       ;
  +Pl      :e%>i2   ess_nA          ;
  +Pl      :e%>i2   com_ne          ;
  +Pl      :e%>i2   sgpl_cases_even ;

LEXICON vanha_x_23ia ! For -Por only valkia, hopia, kauhia
  +Sg+Nom  :%>^A         K               ; ! valkia
  +Sg      :%>^A         gen_n_sg        ; ! valkian
  +Sg      :%>^A         par_A           ; ! valkiaa
  +Sg+Dial/Jok:%>^At        par_A           ; ! valkiata
  +Sg      :             ill_hAAn        ; ! valkihaan
  +Sg      :%>^A         ess_nnA         ; ! valkianna pime^A>nn^A
  +Sg      :%>^A         sgpl_cases_odd  ;

  +Pl      :%>^A         nom_t           ; ! valkiat
  +Pl      :%>i2         gen_tten        ; ! valkeitten
  +Pl      :%>i2         par_tA          ; ! valkeita
  +Pl      :%>i2         ill_ssiin       ; ! valkeissiin
  +Pl      :%>i2         ess_nA          ; ! valkeina
  +Pl      :%>i2         com_ne          ; ! valkeine
  +Pl      :%>i2         sgpl_cases_even ; ! valkei-

LEXICON vanha_n_23ii        !!= * @CODE@  assii (in Por) kurkkii (in Por)
+N+Dial/Por:         vanha_x_23ii           ;
+N+Dial/-Por:         vanha_x_22oi           ; ! TODO skriv dyp kommentar her
+N+Sg      :           nom_R               ;

LEXICON vanha_x_23ii
  +Sg      :            nom_end             ;
  +Sg      :            gen_n_sg            ;
  +Sg      :            par_tA              ;
  +Sg      :            ill_sseen           ;
  +Sg      :            ess_nA              ;
  +Sg      :            sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl

  +Pl      :            nom_t               ;
  +Pl+Dial/Por:            gen_tten            ;
  +Pl+Dial/-Por:%>i2        gen_tten            ;
  +Pl+Dial/Por:            par_tA              ;
  +Pl+Dial/-Por:%>i2        par_tA              ;
  +Pl      :            ill_ssiin           ;
  +Pl      :            ess_nA              ;
  +Pl      :            com_ne              ;
  +Pl+Dial/Por:            sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl
  +Pl+Dial/-Por:%>i2        sgpl_cases_even     ; !! * @CODE@  for same affix in sg and pl


LEXICON vanha_n_31        !!= @CODE@  kieli
+N         :     vanha_x_31 ;
+N+Sg      :^E2I nom_R   ; ! ^E2I e to i

LEXICON vanha_x_31 ! pieni
  +Sg      :^E2I        nom_end         ; ! ^E2I e to i
  +Sg      :^EDEL       par_tA          ;
  +Sg      :^WG         gen_n_sg        ;
  +Sg      :^WG         sgpl_cases_even ; !! * @CODE@  for same affix in sg and pl
  +Sg      :            ess_nA          ;
  +Sg      :^HMETA      ill_hVVn        ;

  +Pl      :^WG         nom_t           ;
  +Pl+Dial/Por:%>i2i    gen_n           ;
  +Pl      :            gen_ten         ; ! kielten, both Por and Var
  +Pl+Dial/-Por:%>i2    gen_tten        ; ! kielitten, sienitten
  +Pl+Dial/Por:%>i2     par_V           ; ! kielii, pienii
  +Pl+Dial/-Por:%>i2    par_A           ; ! kieliä, pieniä
  +Pl      :^HMETA      ill_hiin        ;
  +Pl      :%>i2        ess_nA          ;
  +Pl      :%>i2        com_ne          ;
  +Pl      :%>i2        sgpl_cases_even ; !! * @CODE@  for same affix in sg and pl
  !     +Pl:%>i2        gen_Vn          ;
  !    !+Pl:^EDEL       gen_ten         ;

LEXICON vanha_n_31lumi       !!= @CODE@ lumi lu
+N         :   vanha_x_31lumi ;
+N+Sg      :mi nom_R       ; ! ^EI e to i

LEXICON vanha_x_31lumi
  +Sg      :mi           nom_end         ; ! ^EI e to i
  +Sg      :me^WG        gen_n_sg        ;
  +Sg      :n            par_tA          ;
  +Sg      :me^HMETA     ill_hVVn        ; ! e is for vowel copying, then e:0
  +Sg      :me           ess_nA          ;
  +Sg      :me^WG        sgpl_cases_even ; ! these two lexica for cases with

  +Pl      :me^WG        nom_t           ;
  +Pl+Dial/Por:me%>i2       gen_Vn          ; ! lumiin
  +Pl+Dial/-Por:m%>i2        gen_tten        ; ! lumitten
  +Pl+Dial/Por:me%>i2       par_V           ; ! lumii
  +Pl+Dial/-Por:me%>i2       par_A           ; ! lumia
  +Pl      :m^EDEL       ill_hiin        ;
  +Pl      :me%>i2       ess_nA          ;
  +Pl      :m%>i2        com_ne          ; ! kanskje me
  +Pl      :m^WG%>i2     sgpl_cases_even ; ! the same affix in sg and pl


LEXICON vanha_n_31si        !!= @CODE@ vuosi, käsi, hirsi
+N         : vanha_x_31si ;
+N+Sg      : nom_R     ;

LEXICON vanha_x_31si ! uusi
  +Sg      :^E2I     nom_end         ;
!                       nomgen_px       ; ! sg nom/gen px
  +Sg      :^WG      gen_n_sg        ;
  +Sg      :^EDEL    par_tA          ; ! parsg
  +Sg      :^HMETA   ill_hVVn        ;
  +Sg      :         ess_nA          ;
  +Sg      :^WG      sgpl_cases_even ; ! these two lexica for cases with

  +Pl      :^WG      nom_t           ;
  +Pl+Dial/Por:%>i2     gen_Vn          ; ! vuossiin, ei vuottiin, hirssiin
  +Pl+Dial/-Por:%>i2     gen_tten        ; !hirssitten, vuossitten
  +Pl+Dial/Por:%>i2     par_V           ; ! hirssii
  +Pl+Dial/-Por:%>i2%>   par_A           ; ! hirsiä
  +Pl      :^HMETA   ill_hiin        ;
  +Pl      :%>i2     ess_nA          ;
  +Pl      :%>i2     com_ne          ;
  +Pl      :%>i2     sgpl_cases_even ; ! the same affix in sg and pl


LEXICON vanha_n_31lapsi        !!= @CODE@ lapsi la
+N         : vanha_x_31lapsi ;

LEXICON vanha_x_31lapsi        !!= @CODE@ lapsi la
  +Sg      :psi           nom_end         ; ! ^EI e to i
  +Sg      :psi           nom_R           ; ! ^EI e to i
  +Sg      :pse^WG        gen_n_sg        ;
  +Sg      :pse           gen_n_sg        ; ! should be ^WG?
  +Sg      :s             par_tA          ;
  +Sg      :pse^HMETA     ill_hVVn        ; ! e is for vowel copying, then e:0
  +Sg      :pse           ess_nA          ;
  +Sg      :pse^WG        sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :pse^WG        nom_t           ;
  +Pl      :s             gen_ten         ; ! lasten
  +Pl+Dial/Por:ps%>i2%>i     gen_n           ; ! lapsiin
  +Pl+Dial/-Por:ps%>i2        gen_tten        ; ! lapsitten
  +Pl+Dial/Por:ps%>i2%>i     par_end         ; ! lapsii
  +Pl+Dial/-Por:ps%>i2%>      par_A           ; ! lapsia
  +Pl      :ps^EDEL       ill_hiin        ;
  +Pl      :pse%>i2       ess_nA          ;
  +Pl      :ps%>i2        com_ne          ; ! kanskje pse
  +Pl      :ps^WG%>i2     sgpl_cases_even ; !! the same affix in sg and pl


LEXICON vanha_n_31mies        !!= @CODE@ mies mie
+N         : vanha_x_31mies ;

LEXICON vanha_x_31mies        !!= @CODE@ mies mie
  +Sg      :s            nom_end         ; ! ^EI e to i
  +Sg      :s            nom_R           ; ! ^EI e to i
!          +Sg:he           gen_n           ; ! TODO, remove?
  +Sg      :he^WG        gen_n_sg        ;
  +Sg      :s            par_tA          ;
  +Sg      :h^HMETA      ill_hVVn        ;
  +Sg      :he           ess_nA          ;
  +Sg      :he^WG        sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :he^WG        nom_t           ; ! TODO remove one of these
  +Pl      :he           nom_t           ; ! TODO remove one of these
  +Pl      :s            gen_ten         ;
  +Pl+Dial/Por:h%>i2%>i     gen_n           ; ! miehiin
  +Pl+Dial/-Por:h%>i2%>      gen_tten        ; ! miehitten
  +Pl+Dial/Por:h%>i2%>i     par_end         ; ! miehii
  +Pl+Dial/-Por:h%>i2%>      par_A           ; ! miehiä
  +Pl      :h            ill_hiin        ;
  +Pl      :he%>i2       ess_nA          ;
  +Pl      :h%>i2        com_ne          ;
  +Pl      :h^WG%>i2     sgpl_cases_even ; !! the same affix in sg and pl


LEXICON vanha_n_32 !!= @CODE@ tytär, taival
+N         :    vanha_x_32 ;
+N+Sg      :^WG nom_R   ;

LEXICON vanha_x_32 ! tyven
  +Sg      :^WG          nom_end        ;
  +Sg      :e            gen_n_sg       ;
  +Sg      :e^WG         gen_n_sg       ;
  +Sg      :^WG          par_tA         ;
  +Sg      :e^HMETA      ill_hVVn       ;
  +Sg      :e            ess_nnA        ;
  +Sg      :e            sgpl_cases_odd ;

  +Pl      :e            nom_t          ;
  +Pl      :e^WG         nom_t          ;
  +Pl+Dial/Por:%>i%>i2      gen_tten       ; ! tyttäriitten
  +Pl+Dial/-Por:%>i%>        gen_tten       ; ! tyttäritten, mutta tyveniitten? TODO checking with Aili
  +Pl+Dial/Por:%>i2         par_V          ; ! tyttärii
  +Pl+Dial/Por:%>i%>i2      par_tA         ; ! tyttäriitä
  +Pl+Dial/-Por:%>i%>        par_A          ; ! tyttäriä
  +Pl      :^HMETA       ill_hiin       ;
  +Pl      :e%>i2        ess_nnA        ;
  +Pl+Dial/Por:e%>i2        com_nne        ;
  +Pl+Dial/Var:e%>i2        com_nne        ;
  +Pl+Dial/Jok:e%>i2        com_nne        ; ! jok: tyveninne
  +Pl      :%>i2         sgpl_cases_odd ; ! hmm, tämä menee pieleen, sg ≠ pl


LEXICON vanha_n_32m !!= @CODE@ elläin elläi yđin ydin
+N         :     vanha_x_32m ;
+N+Sg      :^WGn nom_R    ;

LEXICON vanha_x_32m !!= @CODE@
  vanha_x_32m_sg ;
  vanha_x_32m_pl ;

LEXICON vanha_x_32m_sg
  +Sg      :^WGn      nom_end        ;
  +Sg      :me        gen_n_sg       ;
  +Sg      :^WG%>n    par_tA         ;
  +Sg      :me^HMETA  ill_hVVn       ;
  +Sg      :me        ess_nnA        ;
  +Sg      :me        sgpl_cases_odd ;

LEXICON vanha_n_32m_pl !!= @CODE@
+N         : vanha_x_32m_pl ;

LEXICON vanha_x_32m_pl
  +Sg      :me            gen_n_sg       ;

  +Pl      :me            nom_t          ;
  +Pl+Dial/Por:m%>ii2        gen_tten       ; ! elläimiitten
  +Pl+Dial/-Por:m%>i          gen_tten       ; ! elläimitten
  +Pl+Dial/Por:mi%>i2        par_end        ; ! elläimii
  +Pl+Dial/Por:mi%>i2        par_tA         ; ! elläimiitä
  +Pl+Dial/-Por:mi%>          par_A          ; ! elläimiä
  +Pl      :m^HMETA       ill_hiin       ;
  +Pl      :me%>i2        ess_nnA        ;
  +Pl+Dial/Por:m%>i2         com_nne        ;
  +Pl+Dial/Var:m%>i2         com_nne        ;
  +Pl+Dial/Jok:m%>i2         com_ne         ;
  +Pl      :m%>i2         sgpl_cases_odd ; ! hmm, tämä menee pieleen, sg ≠ pl, TODO check this <-

LEXICON vanha_n_32s !!= @CODE@  sairhaus
+N         : vanha_x_32s ;

LEXICON vanha_x_32s
  +Sg      :^WGs           nom_end           ; !! * Konsonanttivartalo: poista -e ja heikko aste
  +Sg      :^WGs           nom_R             ; !! * Konsonanttivartalo: poista -e ja heikko aste

  +Pl      :đe             nom_t             ;
  +Sg      :đe             gen_n_sg          ;
  +Sg      :%>t            par_tA            ;
  +Sg      :te^HMETA       ill_hVVn          ;
  +Sg      :te             ess_nnA           ;
  +Sg      :đe             sgpl_cases_odd    ;

  +Pl      :ksi%>i2        gen_tten          ;
  +Pl      :ksi%>i2        par_end           ;
  +Pl      :ksi%>i2        par_tA            ;
  +Pl      :ks^HMETA       ill_hiin          ;
  +Pl      :ks%>i2         ess_nnA           ;
  +Pl+Dial/Por:ks%>i2         com_nne           ;
  +Pl+Dial/Var:ks%>i2         com_nne           ;
  +Pl+Dial/Jok:ks%>i2         com_ne            ;
  +Pl      :ks%>i2         sgpl_cases_odd    ; ! TODO wtf is this comm --> hmm, tämä menee pieleen, sg ≠ pl


! LEXICON vanha_n_32s != @CODE@  sairhaus vanha versio
!        +N:t              long_par          ;
!        +N:te             obl_strong        ;
!        +N:te^WG          weak_v_stem       ;
!     +N+Sg:^WG            sgpl_cases_odd    ;
!     +N+Pl:^WG%>i2        sgpl_cases_odd    ;
!     +N+Pl:ks%>i2         par_V             ;
!     +N+Pl:ks%>i2         gen_Vn            ;
!     +N+Pl:ks%>i2         horterillpl      ;

!LEXICON vanha_n_32t
                           !n_32             ; ! ei tehty

!LEXICON vanha_n_33 ! ei tehty
                           !n_33s            ;

LEXICON vanha_n_33as !!= @CODE@ rakas, asukas
+N         : vanha_x_33as ;

LEXICON vanha_x_33as
  +Sg+Nom:a^WG%>s      K                 ;
  +Sg      :a^WG%>s      par_tA            ;
  +Sg      :haa          ill_sseen         ;
!      +Pl+Ill:h%>aissiin   K                 ;
  +Sg      :h%>aa        gen_n_sg          ;
  +Sg      :h%>aa        ess_nA             ;
  +Sg      :h%>aa        sgpl_cases_even   ;

  +Pl      :h%>aa        nom_t             ;
  +Pl      :h%>a%>i2     gen_tten          ; ! asukkhaitten
  +Pl+Dial/Var:h%>a%>je     gen_n             ; ! rakkhajen
  +Pl      :h%>a%>i2     par_tA            ; ! asukkhaita
  +Pl+Dial/Var:h%>a%>j      par_A             ; ! rakkhaja
  ! +N+Pl+Ess:h%>a%>i2%>na PxxK              ;
  +Pl      :h%>ai        ill_ssiin         ;
  +Pl      :h%>aa%>i2    ess_nA             ;
  +Pl      :h%>a%>i2     com_ne            ;
  +Pl      :h%>a%>i2     sgpl_cases_even   ;

!LEXICON vanha_n_33aes
!        +N:             vanha_x_33aes           ;

LEXICON vanha_x_33aes
  +Sg+Nom:ä^WG%>s      K                 ;
  +Sg      :ä^WG%>s      par_tA            ;
  +Sg      :h%>ää        gen_n_sg          ;
  +Sg      :hää          ill_sseen         ;
  +Sg      :h%>ää        ess_nA            ;
  +Sg      :h%>ää        sgpl_cases_even   ;
    !    +Pl+Ill:h%>äissiin   K                 ;

  +Pl      :h%>ää        nom_t             ;
  +Pl      :h%>ä%>i2     gen_tten          ;
  +Pl      :h%>ä%>i2     par_tA            ;
  +Pl+Dial/Var:hä%>je       gen_n             ; ! sinnikkhäjen
  +Pl+Dial/Var:hä%>j        par_A             ; ! sinnikkhäjä
  +Pl      :h%>äi        ill_ssiin         ;
  +Pl      :h%>ä%>i2     ess_nA            ;
  +Pl      :h%>ää%>i2    ess_nA            ; ! TODO choose one
  +Pl      :h%>ä%>i2     com_ne            ;
  +Pl      :h%>ä%>i2     sgpl_cases_even   ;



!LEXICON vanha_n_33ys !!= @CODE@ rakas
!        +N:        vanha_x_33ys ;
! +N+Sg+Nom:%>y^WGs R      ;



LEXICON vanha_n_33is !!= @CODE@ ruvis, ruumis
+N         :          vanha_x_33is          ;

LEXICON vanha_x_33is ! kaunis
  +Sg      :i^WG%>s   nom_end         ;
  +Sg      :hii       gen_n_sg        ;
  +Sg      :i^WG%>s   par_tA          ;
  +Sg      :%>hii     ill_sseen       ;
  +Sg      :hii       ess_nA          ;
  +Sg      :hii       sgpl_cases_even ;

  +Pl      :hii       nom_t           ;
  +Pl      :hii       gen_tten        ; ! rukkhiitten
  +Pl+Dial/Var:hi%>je    gen_n           ; ! rukhijen
  +Pl      :hii       par_tA          ; ! rukkhiita
  +Pl+Dial/Var:hi%>j     par_A           ; ! rukhija
  +Pl      :hii       ill_ssiin       ;
  +Pl      :%>hii     ess_nA          ;
  +Pl      :h%>i2i    com_ne          ;
  +Pl      :h%>ii     sgpl_cases_even ;

!LEXICON vanha_n_33  !!= @CODE@ odottaessa viitataan n_33t-hen
!  n_33t ;

LEXICON vanha_n_33t !!= @CODE@ venet, hyljet, huonet
+N         :   vanha_x_33t ;

LEXICON vanha_x_33t
  +Sg+Dial/Var+Nom:e^WG     K              ;
  +Sg+Dial/-Var:e^WG        nom_t          ;
  +Sg      :e^WG%>t     par_tA         ;

  +Pl+Dial/Var:he%>je      gen_n          ; ! venhejen
  +Pl+Dial/Var:he%>j       par_A          ; ! venhejä
  +Pl      :hee%>i2     com_ne         ;

           :hee         vanha_x_33_t_ts_common ;

LEXICON vanha_n_33ts !!= @CODE@ kirves
+N         :   vanha_x_33ts ;
+N+Sg      :es nom_R      ;

LEXICON vanha_x_33ts !!= @CODE@ kirves
  +Sg:es          nom_end              ;
  +Pl+Dial/-Por:he%>je      gen_n          ; ! Kirvhejen
  +Pl+Dial/-Por:he%>j       par_A          ; ! Kirvhejä
  +Sg      :es          par_tA         ;
  +Pl      :hee%>i2     com_ne         ;

           :hee         vanha_x_33_t_ts_common ;
             !      +Pl+Gen:hee%>i2     gen_tten       ; ! Can this be commented out? yes, is in the common

LEXICON vanha_x_33_t_ts_common
  +Sg      :         gen_n_sg        ;
  +Sg      :         ill_sseen       ;
  +Sg      :         ess_nA          ;
  +Sg      :         sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :         nom_t           ;
  +Pl      :%>i2     gen_tten        ;
  +Pl      :%>i2     par_tA          ;
  +Pl      :%>i2     ill_ssiin       ;
  +Pl      :%>i2     ess_nA          ;
  +Pl      :%>i2     com_ne          ;
  +Pl      :%>i2     sgpl_cases_even ; !! the same affix in sg and pl -- tsekkaa long
      ! +Pl+Ill:heissiin K               ;


LEXICON vanha_n_41 !!= * @CODE@ = veres
+N         :           vanha_x_41     ;
+N+Sg      :s          nom_R          ;
+N+Sg      :kse        gen_n_sg       ;

LEXICON vanha_x_41
  +Sg      :^WG%>s     nom_end        ;
  +Sg      :kse        gen_n_sg       ;
  +Sg      :%>s        par_tA         ;
  +Sg      :ks         ill_hVVn       ;
!  +Sg+Ill:ksheen K              ; ! +Pl+Ill:ksh%>i2in K; ! TODO TODO TODO
  +Sg      :kse        ess_nnA        ;
  +Sg      :kse        sgpl_cases_odd ; ! these two lexica for cases with

  +Pl      :kse        nom_t          ;
  +Pl      :%>s        gen_ten        ; ! veresten
  +Pl+Dial/-Por:ks%>i2     gen_tten       ; ! vereksitten
  +Pl+Dial/Por:ks%>i2     par_V          ; ! vereksii
  +Pl+Dial/Por:ks%>i2i    par_tA         ; ! vereksiitä
  +Pl+Dial/-Por:ks%>i2     par_A          ; ! vereksiä
  +Pl      :ks         ill_hiin       ; ! ei ^HMETA? tai edel tai mitään?
  +Pl      :kse%>i2    ess_nnA        ;
  +Pl+Dial/Por:kse%>i2    com_nne        ;
  +Pl+Dial/Var:kse%>i2    com_nne        ;
  +Pl+Dial/Jok:kse%>i2    com_ne         ;
  +Pl      :kse%>i2    sgpl_cases_odd ; ! the same affix in sg and pl -- tsekkaa long
 ! +Pl+Par:%>ksii     K              ;

!LEXICON vanha_s_kse
! +N:^WG # ;
LEXICON vanha_n_41pl !!= * @CODE@ = veljekset
+N         :           vanha_x_41pl          ;
+N+Pl      :%>kse      nom_t               ;

LEXICON vanha_x_41pl !!= * @CODE@ = veljekset
  +Sg      :kse        gen_n_sg        ;
  +Sg      :kse        ess_nA          ;
  +Sg      :kse        sgpl_cases_odd  ; !! these two lexica for cases with

  +Pl      :kse        nom_t           ;
  +Pl      :%>s        gen_ten         ; ! veljesten
  +Pl+Dial/-Por:ks%>i2     gen_tten        ; ! veljeksitten
  +Pl+Dial/Por:ks%>i2     par_V           ; ! veljeksii
  +Pl+Dial/Por:ks%>i2i    par_tA          ; ! veljeksiitä
  +Pl+Dial/-Por:ks%>i2     par_A           ; ! veljeksiä
!      +Pl+Ill:ksh%>i2in  K               ;
  +Pl      :ks         ill_hiin        ;
  +Pl      :kse%>i2    ess_nnA         ; ! veljeksinnä
  +Pl      :ks%>i2     com_nne         ; ! veljeksine
  +Pl      :kse%>i2    sgpl_cases_odd  ; !! the same affix in sg and pl -- tsekkaa long
  !    +Pl+Par:%>ksii     K               ;


!LEXICON vanha_et_he
!        +N:^WG        #               ;

!LEXICON vanha_n_42 ! itse asiassa n_42even
!     +N+Sg:se         sgpl_cases_even ; !! these two lexica for cases with
!     +N+Pl:s%>i2      sgpl_cases_even ; !! the same affix in sg and pl
!        +N:           nen             ;
! +N+Pl+Com:s%>i2%>ne  K               ;

LEXICON vanha_n_42 ! nainen, kainulainen
+N         :  vanha_x_42 ;
+N+Sg      :s nom_R      ;


LEXICON vanha_x_42 ! varovainen
  +Sg      :ne        nom_n           ;
  +Sg      :se        gen_n_sg        ;
  +Sg      :s         par_tA          ;
  +Sg      :se^HMETA  ill_hVVn        ;
  +Sg      :se        ess_nA          ;
  +Sg      :se        sgpl_cases_even ; !! these two lexica for cases with

  +Pl      :se        nom_t           ;
  +Pl      :s         gen_ten         ; ! kainulaisten
  +Pl+Dial/Por:ss%>i2i   par_end         ; ! kainulaissii
  +Pl+Dial/Por:ss%>i2i   par_tA          ; ! kainulaissiita, naissiita
  +Pl+Dial/-Por:s%>i2     par_A           ; ! kainulaisia
  +Pl      :s         ill_hiin        ; ! NB testing, used to be next line: UNDOMMENT
!          +Pl:sh%>i2    horterillpl    ;
  +Pl      :se%>i2    ess_nA          ; ! naisina
  +Pl      :s%>i2     com_ne          ;
  +Pl      :s%>i2     sgpl_cases_even ; !! the same affix in sg and pl

LEXICON vanha_n_42odd !!= @CODE@ ihminen
+N         :  vanha_x_42odd ;
+N+Sg      :s nom_R         ; ! ihmiskala

LEXICON vanha_x_42odd
  +Sg      :nen       nom_end        ;
  +Sg      :se        gen_n_sg       ;
  +Sg      :s         par_tA         ;
  +Sg      :se^HMETA  ill_hVVn       ;
  +Sg      :se        ess_nnA        ;
  +Sg      :se        sgpl_cases_odd ; !! these two lexica for cases with

  +Pl      :se        nom_t          ;
  +Pl      :s         gen_ten        ;
  +Pl+Dial/Por:ss%>i2i   par_end        ; ! ihmissii
  +Pl+Dial/Por:ss%>i2i   par_tA         ; ! ihmissiitä
  +Pl+Dial/-Por:s%>i2     par_A          ; ! ihmisiä
  +Pl      :s         ill_hiin       ; ! ihmishiin
  +Pl      :s%>i2     ess_nnA        ; !
  +Pl+Dial/Por:s%>i2     com_nne        ;
  +Pl+Dial/-Por:s%>i2     com_nne        ;
  +Pl      :s%>i2     sgpl_cases_odd ; !! the same affix in sg and pl

LEXICON vanha_n_42pl ! !!= @CODE@ tervheiset tervhei
+N+Pl      :%>se       nom_t          ;
+N+Pl      :s          gen_ten        ;
+N+Pl+Dial/Por:ss%>i2     par_V          ; ! tervhehissii
+N+Pl+Dial/Por:ss%>i2i    par_tA         ; ! tervhehissiitä
+N+Pl+Dial/-Por:s%>i2      par_A          ; ! tervhehisiä
!      +N+Pl+Ill:sh%>i2in   K              ;
+N+Pl      :s          ill_hiin       ;
+N+Pl      :se%>i2     ess_nnA        ;
+N+Pl      :s%>i2      com_nne        ; ! TODO onko tässä kaksi nn:ää?
+N+Pl      :s%>i2      sgpl_cases_odd ; !! the same affix in sg and pl

!LEXICON vanha_nen  !!= @CODE@ on nainen-sanoille
!  nen_sg ;
!  nen_pl ;

!LEXICON nen_sg
!             +N:     nom-nen        ;
!!            +N:se   nomgen_px      ;
!            +Sg:se     ess_nA        ;
!            +Pl:se%>i2 ess_nA        ;

!! make+N+Pl+kom:sine K              ;
!             +N:se   weak_v_stem ;
!          +N+Sg:s    par_tA         ;
!             +N:se   2AVU_V_ill_sg ;
!
!LEXICON nen_pl
!        +N:se        weak_v_stem ;
! +N+Pl+Ill:sh%>i2in  K              ;
!     +N+Pl:s         gen_ten        ;
!     +N+Pl:ss%>i2i   par_end        ;
!     +N+Pl:sh%>i2    horterillpl   ;
! +N+Pl+Com:s%>i2     com_ne         ;


!LEXICON nom-nen
! +Sg+Nom:nen K ;


!LEXICON loput
!                 obl_strong_odd ; ! muut vahvat
!                 weak_v_stem    ;
!        +Sg:     sgpl_cases_odd ; !! these two lexica for cases with
!        +Pl:%>i2 sgpl_cases_odd ; !! the same affix in sg and pl -- tsekkaa long
!        +Pl:%>i2 gen_ten        ;
! +Pl+Use/NG:%>i2 gen_tten       ;
!        +Pl:%>i2 par_V          ;



!! !!! Basic paradigms
!  ===================


!LEXICON weak_v_stem !!= @CODE@ This bs is gonna get deleted. Replase the genetives with gen_n and just add the nom,
! +Sg: gen_n_sg ;
! +Pl: nom_t    ;


!! !Sublexica for the basic unified cases, with even and odd variations
! ----------------------------------------------------------------------

LEXICON sgpl_cases_even ! kaikille paitsi neljän koplalle
           +Ade:%>l^A  PxxK              ; ! Lyhyt perusmuoto vuođela
           +All:%>le   PxxK              ; ! Lyhyt perusmuoto
  +Dial/Jok+All:%>let  PxxK              ; ! pienelet
                       sgpl_cases_common ;

LEXICON sgpl_cases_odd ! neljän koplalle. <- Mitä vittua tää kopla tarkoittaa tässä kontekstissa? Tämä ei ole aku ankka!
           +Ade:%>ll^A PxxK              ; ! Pitkä perusmuoto
           +All:%>lle  PxxK              ; ! Pitkä perusmuoto
  +Dial/Jok+All:%>llet PxxK              ; ! pieniimillet
                       sgpl_cases_common ;

LEXICON sgpl_cases_common
           +Abl:%>lt^A PxxK ;
           +Ine:%>ss^A PxxK ;
           +Ela:%>st^A PxxK ;
           +Tra:%>ksi  K    ; ! +Tra:%>kse  Pxx  ;
           +Abe:%>tt^A PxxK ;



!! !Sublexica for Gen, Par, Ill, Ess and Com.
! ---------------------------------------------------------------------


LEXICON nom_end
 +Nom: K ; ! Why not PxxK ?

LEXICON nom_R
 +Nom: R ;

LEXICON nom_t
 +Nom:%>t K ; ! Why not PxxK ?

LEXICON nom_n
 +Nom:%>n K ; ! Why not PxxK ?

LEXICON nom_u
 +Nom:u K ;

LEXICON nom_y
 +Nom:y K ;


LEXICON gen_n_sg ! Only with sg and general separate, because of R! This is exception!
  gen_n         ; ! why not go from R -> K, then we don't have to write twice
 +Gen:%>n R     ; ! This (R) is for compound words, that's why sg is by itself

LEXICON gen_n
 +Gen:%> n_PxK ;

LEXICON gen_Vn
 +Gen:%>^V n_PxK ;

LEXICON gen_tten  ! vereksitten
 +Gen:%>tte n_PxK ;

LEXICON gen_ten  ! veljesten
 +Gen:%>te n_PxK ;



LEXICON par_A
 +Par:%>^A PxxK ;

LEXICON par_V
 +Par         :%>^V PxxK ;
 +Par+Err/Orth:%>^A PxxK ;

LEXICON par_tA ! pitäiskö olla omat tt^A ja st^A ? Mange Sg er slik
 +Par:%>t^A PxxK ;

LEXICON par_end
 +Par: PxxK ;


 ! <-------------- Singulaarit

LEXICON ill_hVn ! NB Used 1 ONCE, only: 1.  hVn > maahan
 +Ill:%>h^V      n_PxK ; !  +Sg +Ill:%>h^V n_PxK ;

LEXICON ill_hVVn !  2.  hVVn > tunturhiin | sykshyyn, linnhaan | linna pl.ill. kaksi muotoa po. linnhoin,
 +Ill:%>h^V^V    n_PxK ; ! TODO add Twolc description about HMETA   ! 2.  hVVn > tunturhiin

LEXICON ill_sseen !  3.  sseen > rukhiisseen, kuninkhaa>sseen, previously mTAVU_VV-ill
 +Ill:%>ssee     n_PxK ;

LEXICON ill_hAAn
 +Ill:%>h^A^A    n_PxK ; ! Found often in sg adjectives

! <--------------- Pluralit

LEXICON ill_hin ! NB Used 1 ONCE, only: 4.  hin > maihin
 +Ill:%>hi       n_PxK ;

LEXICON ill_hVin !  5.  hVin > tunturhiin (ja sivakkhoin), ehkä pitäis pl:ssä olla i2 jos yhteiset sg & pl
 +Ill:%>h^V%>i2     n_PxK ; ! > for twolc. Find good exlanation TODO fix this on twolc.
! +Ill:h%>i2%>i2     n_PxK ; ! on Sg:ssä hVVn
! TODO What about this i2>i2thing? ugly, but works on some things, should it be merged with ^V &/or hiin?

LEXICON ill_ssiin !  6.  ssiin > rukhiissiin, syksyissii
 +Ill:%>ssii     n_PxK ;!      säänön mukhaan hVn (maahan) saa -hin monikossa (maihin)

LEXICON ill_hiin ! NB USED 5 TIMES, always pl & either ^HMETAh%>i2i or ^HMETA%>hii
 +Ill:%>hii%> n_PxK ; ! gives twolc errors if i2 and if h before >
! used to be in ihminen: shi2%>i2n, which is seen in hVin too.




LEXICON ess_nA
 +Ess:%>n^A PxxK ;

LEXICON ess_nnA
 +Ess:%>nn^A PxxK ; ! Ess aina Eiran gramatiikin mukaan lyhytmuoto, Mutta Eira s. 38 kaupunkinna, tyttärennä



LEXICON com_ne
 +Com:%>ne PxxK ; ! Note that adjectives have -ine without Px, though Px doesn't do anything atm

LEXICON com_nne
 +Com:%>nne PxxK ;
! ess, ade ja all oon aina kaksi n-/r-/l-/m-, jos oon 3/5/7 lyhyttä tavvuu ennen suffiksi
! Puhuin Eiran ja Mikon kanssa, ja het sanothaan, ette loogisesti oon näin kans komitatiivissa
! Eli on "tervheisinne" ja "veljeksinne" komitatiivissa


 !LEXICON longgenpl
 ! ! d_longgenpl ;   oletetaan, että -tten vaan
 !  gen_tten     ;

 !LEXICON d_longgenpl
 ! +Gen:%>de n_PxK ;


!LEXICON longillpl
! +Ill: n_PxK ; ! En tiedä, toimiiko tämä

 !LEXICON h_shortillpl
 ! +Ill:^EDEL%>hii n_PxK ;

!LEXICON longerillpl
! +Pl+Ill:%>s^V^V n_PxK ;













!! !Sublexica for possessive suffixes
! ---------------------------------

!! Px is now not in use, with one exception, comitative.

LEXICON n_PxK  !!= @CODE@ has either -n or goes to Px
  :n K  ;
!    Px ;

LEXICON i_PxK  !!= @CODE@ Tra: -i or -e and goes to Px
  :i K  ;
! :e Px ;

LEXICON PxK !!= @CODE@ has only -nsA, and is currently not in use. Check
     K  ;
!  Px ;

LEXICON PxxK  !!= @CODE@ has also -Vn, thus both .. llensa and ..lleen.
     K  ;
!  Px    ;
!  Px-Vn ;

!LEXICON Pxx
!  Px    ;
!  Px-Vn ;

!LEXICON Px
! +PxSg1:%>ni   K ;
! +PxSg2:%>sti  K ;
! +PxSg3:%>ns^A K ;
! +PxPl1:%>mm^A K ; ! NB! -m^A ei hoidettu
! +PxPl2:%>nn^A K ; ! NB! -n^A ei hoidettu
! +PxPl3:%>ns^A K ;
!
!
!LEXICON Px-Vn
! +PxSg3:%>^Vn K ;
! +PxPl3:%>^Vn K ;































 !!! -------- Graveyard





 !! !!! Basic paradigms
 !  ===================

 !! !!Basic vowel stems
 !  --------------------

! LEXICON nom_strong
!  +Sg+Nom: K ;

 !LEXICON strong_v_stem_even  !!= @CODE@ ''Kaikki vahvan asteen sijamuodot tähän''
 !  short_par       ;
 !    +Pl:%>i2 com_ne    ;
 !    +Sg:         ess_nA          ;
 !    +Pl:%>i2     ess_nA          ;
 ! TODO fix this mess

 !LEXICON strong_v_stem_odd  !!= @CODE@ ''Kaikki vahvan asteen sijamuodot tähän''
 !  short_par      ;
 !  obl_strong_odd ;




 !! !Sublexica for the vowel stems
 !  - - - - - - - - - - - - - - -

 ! +Pl+Ins:%>i2%>n K ; !! Eira doesn't use this.



 !LEXICON obl_strong_even
 !          nomgen_px ;
 !  +Pl:%>i2 com_ne    ;
 !  +Sg:         ess_nA          ;
 !  +Pl:%>i2     ess_nA          ;

 !LEXICON obl_strong_odd
 !              nomgen_px ;
 !      +Pl:%>i2 com_ne    ;
 !      +Sg:         ess_nnA          ;
 !      +Pl:%>i2     ess_nnA          ;

 ! LEXICON nomgen_px
 ! +Sg+Nom:     Px        ; ! mattoni
 ! +Sg+Gen:     Px        ; ! mattoni
 ! +Pl+Nom:     Px        ; ! mattoni



 ! Random

! LEXICON sConsCase
!  +Sg+Nom:^WG%>s K ;
!  +Sg+Par:%>st^A K ; ! Par
!  +Pl+Gen:%>sten K ; ! Gen


! LEXICON vanha_x_21_oblique ! this is also called from affixes/propernouns ! puku - puvuissa
!  +Sg+Dial/Por:^WG              gen_n_sg        ;
!  +Sg+Dial/Por:                 par_V           ;
!  +Sg+Dial/Por:^HMETA           ill_hVVn        ;
!  +Sg+Dial/Por:                 ess_nA          ;
!  +Sg+Dial/Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

!  +Pl+Dial/Por:^WG              nom_t           ;
!  +Pl+Dial/Por:^AO%>i2          gen_n           ; ! gen_n         since we have the i
!  +Pl+Dial/Por:^AO%>i2          par_end         ;
!  +Pl+Dial/Por:^AO^HMETA        ill_hVin        ; ! sykshyin
!  +Pl+Dial/Por:^AO%>i2          ess_nA          ;
!  +Pl+Dial/Por:^AO%>i2          com_ne          ;
!  +Pl+Dial/Por:^WG^AO%>i2       sgpl_cases_even ; !the same affix in sg and pl

!  +Sg+Dial/-Por:^WG              gen_n_sg        ;
!  +Sg+Dial/-Por:                 par_A           ;! in var should be poikaa with one k, kk:k luultavasti (error with ^A only?) ! ^WG gives aiaa
!  +Sg+Dial/-Por:^HMETA           ill_hVVn        ;
!  +Sg+Dial/-Por:                 ess_nA          ;
!  +Sg+Dial/-Por:^WG              sgpl_cases_even ; !to sgpl_cases_even for cases with

!  +Pl+Dial/-Por:^WG              nom_t           ;
!  +Pl+Dial/-Por:^WG^AO^I0%>i2    gen_tten        ;! toolitten. Dialect ! longgenpl, eira 5322, korpus.
!   +Pl+Dial/Var:^AO%>j           par_A           ; ! Use i:j in twolc j, see below
!  +Pl+Dial/-Por:^AO^I0%>i2       par_A           ;
!  +Pl+Dial/-Por:^AO^HMETA        ill_hVin        ; ! toolhiin
!  +Pl+Dial/-Por:^AO^I0%>i2       ess_nA          ;
!  +Pl+Dial/-Por:^AO^I0%>i2       com_ne          ;
!  +Pl+Dial/-Por:^WG^AO^I0%>i2    sgpl_cases_even ;
